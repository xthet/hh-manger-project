{
  "address": "0x54d96215026cD6FC1b2247de3884E1a6202aEf1b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__CampaignStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__DonationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__NotCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__RefundFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignPublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignShrunk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_homeAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_sig",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_homeAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sig",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkToken",
          "type": "address"
        }
      ],
      "name": "publishCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refundFromCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "removeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x84695484e183069fba08ff608ec3be987dae62f9f123ff6c592e54e1507711d0",
  "receipt": {
    "to": null,
    "from": "0x3DAe272A6C397F8dF15A4ACe05E38c23C1787Dca",
    "contractAddress": "0x54d96215026cD6FC1b2247de3884E1a6202aEf1b",
    "transactionIndex": 0,
    "gasUsed": "5277619",
    "logsBloom": "0x
    "blockHash": "0x750c5307687dd76dc734e8cc02f4c4b2be765514ee3283d5aa5dd479c1605086",
    "transactionHash": "0x84695484e183069fba08ff608ec3be987dae62f9f123ff6c592e54e1507711d0",
    "logs": [],
    "blockNumber": 20525684,
    "cumulativeGasUsed": "5277619",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "63921f5ebe66e2bcab8506c8a6ece652",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__CampaignStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__DonationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__NotCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__RefundFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignShrunk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_homeAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_sig\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_homeAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sig\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkToken\",\"type\":\"address\"}],\"name\":\"publishCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refundFromCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"removeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice OnchainConfig of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct OnchainConfig {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint32 maxCheckDataSize;\\n  uint32 maxPerformDataSize;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member totalPremium the total premium collected on registry so far\\n * @member numUpkeeps total number of upkeeps on the registry\\n * @member configCount ordinal number of current config, out of all configs applied to this contract so far\\n * @member latestConfigBlockNumber last block at which this config was set\\n * @member latestConfigDigest domain-separation tag for current config\\n * @member latestEpoch for which a report was transmitted\\n * @member paused freeze on execution scoped to the entire registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint96 totalPremium;\\n  uint256 numUpkeeps;\\n  uint32 configCount;\\n  uint32 latestConfigBlockNumber;\\n  bytes32 latestConfigDigest;\\n  uint32 latestEpoch;\\n  bool paused;\\n}\\n\\n/**\\n * @notice all information about an upkeep\\n * @dev only used in return values\\n * @member target the contract which needs to be serviced\\n * @member executeGas the gas limit of upkeep execution\\n * @member checkData the checkData bytes for this upkeep\\n * @member balance the balance of this upkeep\\n * @member admin for this upkeep\\n * @member maxValidBlocknumber until which block this upkeep is valid\\n * @member lastPerformBlockNumber the last block number when this upkeep was performed\\n * @member amountSpent the amount this upkeep has spent\\n * @member paused if this upkeep has been paused\\n * @member skipSigVerification skip signature verification in transmit for a low security low cost model\\n */\\nstruct UpkeepInfo {\\n  address target;\\n  uint32 executeGas;\\n  bytes checkData;\\n  uint96 balance;\\n  address admin;\\n  uint64 maxValidBlocknumber;\\n  uint32 lastPerformBlockNumber;\\n  uint96 amountSpent;\\n  bool paused;\\n  bytes offchainConfig;\\n}\\n\\nenum UpkeepFailureReason {\\n  NONE,\\n  UPKEEP_CANCELLED,\\n  UPKEEP_PAUSED,\\n  TARGET_CHECK_REVERTED,\\n  UPKEEP_NOT_NEEDED,\\n  PERFORM_DATA_EXCEEDS_LIMIT,\\n  INSUFFICIENT_BALANCE\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData,\\n    bytes calldata offchainConfig\\n  ) external returns (uint256 id);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function pauseUpkeep(uint256 id) external;\\n\\n  function unpauseUpkeep(uint256 id) external;\\n\\n  function transferUpkeepAdmin(uint256 id, address proposed) external;\\n\\n  function acceptUpkeepAdmin(uint256 id) external;\\n\\n  function updateCheckData(uint256 id, bytes calldata newCheckData) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function setUpkeepOffchainConfig(uint256 id, bytes calldata config) external;\\n\\n  function getUpkeep(uint256 id) external view returns (UpkeepInfo memory upkeepInfo);\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getTransmitterInfo(address query)\\n    external\\n    view\\n    returns (\\n      bool active,\\n      uint8 index,\\n      uint96 balance,\\n      uint96 lastCollected,\\n      address payee\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory state,\\n      OnchainConfig memory config,\\n      address[] memory signers,\\n      address[] memory transmitters,\\n      uint8 f\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    view\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\",\"keccak256\":\"0x9faf0551509440bd9c25a4a2f14b23bce2f82e5ab5691058b9664edab808468c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport { UpkeepIDConsumer } from \\\"./UpkeepIDConsumer.sol\\\";\\r\\nimport { LinkTokenInterface } from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInC_State();\\r\\nerror Campaign__NotCreator();\\r\\nerror Campaign__DonatorIsCreator();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__NotRefundable();\\r\\nerror Campaign__CampaignBankrupt();\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  enum C_Mode {\\r\\n    Draft,\\r\\n    Published\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string[] public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_lastTimeStamp;\\r\\n  // uint256 private immutable i_maxTimeStamp;\\r\\n  uint256 public deadline;\\r\\n  C_Mode public c_mode = C_Mode.Draft;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  // address private immutable i_linkTokenAddress;\\r\\n  // address private immutable i_upkeepCreatorAddress;\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string[] s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  struct reward {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n  }\\r\\n\\r\\n  mapping (uint256 => reward) public rewards;\\r\\n  mapping (address => uint256[]) public donations;\\r\\n  mapping (address => uint256) public aggrDonations;\\r\\n\\r\\n  uint256[] public rKeys;\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert Campaign__NotCreator();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n  ) {\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_lastTimeStamp = block.timestamp;\\r\\n    // i_maxTimeStamp = i_lastTimeStamp + 5184000; // 60days\\r\\n    duration = _duration;\\r\\n    deadline = i_lastTimeStamp + duration;\\r\\n    s_imageURI = _imageURI;\\r\\n    currentBalance = 0;\\r\\n  }\\r\\n\\r\\n  function timeBox(address _upkeepCreatorAddress, address _linkTokenAddress) public isCreator {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(_upkeepCreatorAddress);\\r\\n    LinkTokenInterface token = LinkTokenInterface(_linkTokenAddress);\\r\\n    if(token.balanceOf(_upkeepCreatorAddress) == 0){revert(\\\"no funds\\\");}\\r\\n    rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", address(this), 500000, i_creator, \\\"0x\\\", \\\"0x\\\", 2000000000000000000);\\r\\n    c_mode = C_Mode.Published;\\r\\n  }\\r\\n\\r\\n  function donate() external payable {\\r\\n    if(c_state != C_State.Fundraising){revert Campaign__NotInC_State();}\\r\\n    if(msg.sender == i_creator){revert Campaign__DonatorIsCreator();}\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    if(rewards[msg.value].price > 0 && !rewards[msg.value].infinite) //exists and is not infinite\\r\\n    {\\r\\n      rewards[msg.value].quantity.sub(1);\\r\\n      if(rewards[msg.value].quantity == 0){delete(rewards[msg.value]);}\\r\\n    }\\r\\n    donations[msg.sender].push(msg.value);\\r\\n    aggrDonations[msg.sender].add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - i_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(c_state != C_State.Expired){revert Campaign__NotInC_State();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(c_state == C_State.Expired){revert Campaign__NotInC_State();}\\r\\n    if(aggrDonations[_donator] == 0 ){revert Campaign__NoDonationsHere(_donator);}\\r\\n    uint256 amountToRefund = aggrDonations[_donator];\\r\\n    delete(donations[_donator]);\\r\\n    delete(aggrDonations[_donator]);\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt();}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();}\\r\\n  }\\r\\n\\r\\n  function makeReward( \\r\\n    uint256 _price, string memory _title, \\r\\n    string memory _description, string[] memory _perks, \\r\\n    uint256 _deadline, uint256 _quantity, bool _infinite, string[] memory _shipsTo\\r\\n    ) public isCreator {\\r\\n    rKeys.push(_price);\\r\\n    // shipsto _NW, infinite true, quantitymax 100  (for digRewards)  shipsto _AITW for phyRewards\\r\\n    rewards[_price] = reward(_price, _title, _description, _perks, _deadline, _quantity, _infinite, _shipsTo);\\r\\n  }\\r\\n\\r\\n  function deleteReward(uint256 _priceID) public isCreator {\\r\\n    if(c_mode != C_Mode.Draft){revert();}\\r\\n    if(rewards[_priceID].price > 0){delete(rewards[_priceID]);}\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateCampaignURI(string memory _campaignURI) public isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getDonations(address _donator) public view returns(uint256[] memory) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getRewardKeys() public view returns(uint256[] memory){\\r\\n    return rKeys;\\r\\n  }\\r\\n  \\r\\n  function getReward(uint256 _priceID) public view returns (reward memory) {\\r\\n    return rewards[_priceID];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title,\\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      deadline\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x2843724a3297dbbab4f8cdafc68636de82f101a06cc5afef83d79126f86a700f\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror CrowdFunder__NotCreator(address _caller, address _campaignAddress);\\r\\nerror CrowdFunder__CampaignStillActive(address _campaignAddress);\\r\\nerror CrowdFunder__DonationFailed(address _campaignAddress);\\r\\nerror CrowdFunder__RefundFailed(address _campaignAddress);\\r\\nerror CrowdFunder__CampaignNotRefundable(address _campaignAddress);\\r\\n// error CrowdFunder__PublishFailed(address _campaignAddress);\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  event UserAdded(\\r\\n    address indexed _address,\\r\\n    string _username,\\r\\n    string _twitter,\\r\\n    string _email,\\r\\n    string _homeAddress,\\r\\n    string _sig\\r\\n  );\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator,\\r\\n    string _category,\\r\\n    string[] _tags\\r\\n  );\\r\\n\\r\\n  event CampaignFunded(\\r\\n    address indexed _funder,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignShrunk(\\r\\n    address indexed _withdrawer,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignRemoved(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignPublished(\\r\\n    address _campaignAddress\\r\\n  );\\r\\n\\r\\n  uint256 public campaignCounter;\\r\\n  mapping (address => Campaign) private campaigns;\\r\\n\\r\\n  modifier isCreator(address _campaignAddress) {\\r\\n    if(campaigns[_campaignAddress].i_creator() != msg.sender){\\r\\n      revert CrowdFunder__NotCreator(msg.sender, _campaignAddress);\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function addUser(\\r\\n    address _address, string memory _username, \\r\\n    string memory _twitter, string memory _email, \\r\\n    string memory _homeAddress,\\r\\n    string memory _sig\\r\\n    ) public {\\r\\n    emit UserAdded(_address, _username, _twitter, _email, _homeAddress, _sig);\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n    ) external {\\r\\n    Campaign newCampaign = new Campaign(\\r\\n      payable(msg.sender), _title, \\r\\n      _description, _category, \\r\\n      _tags, _goalAmount, \\r\\n      _duration, _imageURI\\r\\n    );\\r\\n    campaigns[address(newCampaign)] = newCampaign;\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender, _category, _tags);\\r\\n  }\\r\\n\\r\\n  function donateToCampaign (address _campaignAddress) public payable {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"donate()\\\"));\\r\\n    if(success){\\r\\n      emit CampaignFunded(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__DonationFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function refundFromCampaign(address _campaignAddress, address _donator) public {\\r\\n    (bool success,) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"refund(address)\\\", _donator));\\r\\n    if(success){\\r\\n      emit CampaignShrunk(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__RefundFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function removeCampaign (address _campaignAddress) public isCreator(_campaignAddress) {\\r\\n    if(uint(campaigns[_campaignAddress].c_state()) == 0){revert CrowdFunder__CampaignStillActive(_campaignAddress);}\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    emit CampaignRemoved(_campaignAddress);\\r\\n  }\\r\\n\\r\\n  function publishCampaign(address _campaignAddress, address _upkeepCreator, address _linkToken) public isCreator(_campaignAddress) {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"timeBox(address,address)\\\", _upkeepCreator, _linkToken));\\r\\n    if(success){\\r\\n      campaignCounter+=1;\\r\\n      emit CampaignPublished(_campaignAddress);\\r\\n    }else{revert();}\\r\\n  }\\r\\n}\",\"keccak256\":\"0x470655a4c20c9562b2fae8ddb3489a4bba890927ffd9467b5608b7b41e1b2085\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n// UpkeepIDConsumerExample.sol imports functions from both ./AutomationRegistryInterface2_0.sol and\\r\\n// ./interfaces/LinkTokenInterface.sol\\r\\n\\r\\nimport {AutomationRegistryInterface, State, OnchainConfig} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n/**\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\\r\\n * DO NOT USE THIS CODE IN PRODUCTION.\\r\\n */\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n    function register(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount,\\r\\n        address sender\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n    LinkTokenInterface public immutable i_link;\\r\\n    address public immutable registrar;\\r\\n    AutomationRegistryInterface public immutable i_registry;\\r\\n    bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n    constructor(\\r\\n        LinkTokenInterface _link,\\r\\n        address _registrar,\\r\\n        AutomationRegistryInterface _registry\\r\\n    ) {\\r\\n        i_link = _link;\\r\\n        registrar = _registrar;\\r\\n        i_registry = _registry;\\r\\n    }\\r\\n\\r\\n    function registerAndPredictID(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount\\r\\n    ) public returns(uint256) {\\r\\n        (State memory state, , , , ) = i_registry.getState();\\r\\n        uint256 oldNonce = state.nonce;\\r\\n        bytes memory payload = abi.encode(\\r\\n            name,\\r\\n            encryptedEmail,\\r\\n            upkeepContract,\\r\\n            gasLimit,\\r\\n            adminAddress,\\r\\n            checkData,\\r\\n            offchainConfig,\\r\\n            amount,\\r\\n            address(this)\\r\\n        );\\r\\n\\r\\n        i_link.transferAndCall(\\r\\n            registrar,\\r\\n            amount,\\r\\n            bytes.concat(registerSig, payload)\\r\\n        );\\r\\n        (state, , , , ) = i_registry.getState();\\r\\n        uint256 newNonce = state.nonce;\\r\\n        if (newNonce == oldNonce + 1) {\\r\\n            uint256 upkeepID = uint256(\\r\\n                keccak256(\\r\\n                    abi.encodePacked(\\r\\n                        blockhash(block.number - 1),\\r\\n                        address(i_registry),\\r\\n                        uint32(oldNonce)\\r\\n                    )\\r\\n                )\\r\\n            );\\r\\n            // DEV - Use the upkeepID however you see fit\\r\\n            return upkeepID;\\r\\n        } else {\\r\\n            revert(\\\"auto-approve disabled\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1712d2ac002e57e74e5367f9a88c9466f935fada95bd9ad98111e434110f0b3f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615ef5806100206000396000f3fe6080604052600436106200007a5760003560e01c80637c6abc8211620000555780637c6abc821462000109578063e4663a5b1462000129578063fab62a1d1462000157578063fca604d71462000185576200007a565b80631a702aa0146200007f578063359c4f3214620000ad57806353a0d46914620000db575b600080fd5b3480156200008c57600080fd5b50620000ab6004803603810190620000a5919062000e84565b620001b5565b005b348015620000ba57600080fd5b50620000d96004803603810190620000d3919062000fbb565b62000215565b005b348015620000e857600080fd5b5062000107600480360381019062000101919062001139565b620003be565b005b62000127600480360381019062000121919062001287565b620004fa565b005b3480156200013657600080fd5b506200015560048036038101906200014f919062001287565b62000695565b005b3480156200016457600080fd5b506200018360048036038101906200017d9190620012b9565b620009d2565b005b3480156200019257600080fd5b506200019d62000c95565b604051620001ac919062001326565b60405180910390f35b8573ffffffffffffffffffffffffffffffffffffffff167f8a71481c426e212d085148853642cbd73769f57ca8e2a96eca998197465ab416868686868660405162000205959493929190620013d6565b60405180910390a2505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160240162000241919062001467565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002cd9190620014d1565b600060405180830381855af49150503d80600081146200030a576040519150601f19603f3d011682016040523d82523d6000602084013e6200030f565b606091505b5050905080156200037a578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a3620003b9565b826040517f5bdf89f6000000000000000000000000000000000000000000000000000000008152600401620003b0919062001467565b60405180910390fd5b505050565b60003388888888888888604051620003d69062000c9b565b620003e998979695949392919062001677565b604051809103906000f08015801562000406573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd1ef576cbb9cedc698256ae3d2464b38a636f26263382a3c2206c86d7c8c1fcf8888604051620004e892919062001728565b60405180910390a35050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620005a59190620014d1565b600060405180830381855af49150503d8060008114620005e2576040519150601f19603f3d011682016040523d82523d6000602084013e620005e7565b606091505b50509050801562000652578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a362000691565b816040517ffe5dd8d300000000000000000000000000000000000000000000000000000000815260040162000688919062001467565b60405180910390fd5b5050565b803373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200075357600080fd5b505afa15801562000768573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078e9190620017a8565b73ffffffffffffffffffffffffffffffffffffffff1614620007eb5733816040517fd9e20da8000000000000000000000000000000000000000000000000000000008152600401620007e2929190620017da565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b1580156200089357600080fd5b505afa158015620008a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008ce91906200182f565b6002811115620008e357620008e262001861565b5b14156200092957816040517fdfecfddd00000000000000000000000000000000000000000000000000000000815260040162000920919062001467565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558173ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a25050565b823373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a9057600080fd5b505afa15801562000aa5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000acb9190620017a8565b73ffffffffffffffffffffffffffffffffffffffff161462000b285733816040517fd9e20da800000000000000000000000000000000000000000000000000000000815260040162000b1f929190620017da565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16848460405160240162000b56929190620017da565b6040516020818303038152906040527f6d869814000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405162000be29190620014d1565b600060405180830381855af49150503d806000811462000c1f576040519150601f19603f3d011682016040523d82523d6000602084013e62000c24565b606091505b50509050801562000c8957600160008082825462000c439190620018bf565b925050819055507f73e8189383ff7624bab72264727986ddc2467ca0c07220dd78ffbc46122ce0d48560405162000c7b919062001467565b60405180910390a162000c8e565b600080fd5b5050505050565b60005481565b6145a3806200191d83390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000cea8262000cbd565b9050919050565b62000cfc8162000cdd565b811462000d0857600080fd5b50565b60008135905062000d1c8162000cf1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000d778262000d2c565b810181811067ffffffffffffffff8211171562000d995762000d9862000d3d565b5b80604052505050565b600062000dae62000ca9565b905062000dbc828262000d6c565b919050565b600067ffffffffffffffff82111562000ddf5762000dde62000d3d565b5b62000dea8262000d2c565b9050602081019050919050565b82818337600083830152505050565b600062000e1d62000e178462000dc1565b62000da2565b90508281526020810184848401111562000e3c5762000e3b62000d27565b5b62000e4984828562000df7565b509392505050565b600082601f83011262000e695762000e6862000d22565b5b813562000e7b84826020860162000e06565b91505092915050565b60008060008060008060c0878903121562000ea45762000ea362000cb3565b5b600062000eb489828a0162000d0b565b965050602087013567ffffffffffffffff81111562000ed85762000ed762000cb8565b5b62000ee689828a0162000e51565b955050604087013567ffffffffffffffff81111562000f0a5762000f0962000cb8565b5b62000f1889828a0162000e51565b945050606087013567ffffffffffffffff81111562000f3c5762000f3b62000cb8565b5b62000f4a89828a0162000e51565b935050608087013567ffffffffffffffff81111562000f6e5762000f6d62000cb8565b5b62000f7c89828a0162000e51565b92505060a087013567ffffffffffffffff81111562000fa05762000f9f62000cb8565b5b62000fae89828a0162000e51565b9150509295509295509295565b6000806040838503121562000fd55762000fd462000cb3565b5b600062000fe58582860162000d0b565b925050602062000ff88582860162000d0b565b9150509250929050565b600067ffffffffffffffff82111562001020576200101f62000d3d565b5b602082029050602081019050919050565b600080fd5b60006200104d620010478462001002565b62000da2565b9050808382526020820190506020840283018581111562001073576200107262001031565b5b835b81811015620010c157803567ffffffffffffffff8111156200109c576200109b62000d22565b5b808601620010ab898262000e51565b8552602085019450505060208101905062001075565b5050509392505050565b600082601f830112620010e357620010e262000d22565b5b8135620010f584826020860162001036565b91505092915050565b6000819050919050565b6200111381620010fe565b81146200111f57600080fd5b50565b600081359050620011338162001108565b92915050565b600080600080600080600060e0888a0312156200115b576200115a62000cb3565b5b600088013567ffffffffffffffff8111156200117c576200117b62000cb8565b5b6200118a8a828b0162000e51565b975050602088013567ffffffffffffffff811115620011ae57620011ad62000cb8565b5b620011bc8a828b0162000e51565b965050604088013567ffffffffffffffff811115620011e057620011df62000cb8565b5b620011ee8a828b0162000e51565b955050606088013567ffffffffffffffff81111562001212576200121162000cb8565b5b620012208a828b01620010cb565b9450506080620012338a828b0162001122565b93505060a0620012468a828b0162001122565b92505060c088013567ffffffffffffffff8111156200126a576200126962000cb8565b5b620012788a828b0162000e51565b91505092959891949750929550565b600060208284031215620012a0576200129f62000cb3565b5b6000620012b08482850162000d0b565b91505092915050565b600080600060608486031215620012d557620012d462000cb3565b5b6000620012e58682870162000d0b565b9350506020620012f88682870162000d0b565b92505060406200130b8682870162000d0b565b9150509250925092565b6200132081620010fe565b82525050565b60006020820190506200133d600083018462001315565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200137f57808201518184015260208101905062001362565b838111156200138f576000848401525b50505050565b6000620013a28262001343565b620013ae81856200134e565b9350620013c08185602086016200135f565b620013cb8162000d2c565b840191505092915050565b600060a0820190508181036000830152620013f2818862001395565b9050818103602083015262001408818762001395565b905081810360408301526200141e818662001395565b9050818103606083015262001434818562001395565b905081810360808301526200144a818462001395565b90509695505050505050565b620014618162000cdd565b82525050565b60006020820190506200147e600083018462001456565b92915050565b600081519050919050565b600081905092915050565b6000620014a78262001484565b620014b381856200148f565b9350620014c58185602086016200135f565b80840191505092915050565b6000620014df82846200149a565b915081905092915050565b6000819050919050565b6000620015156200150f620015098462000cbd565b620014ea565b62000cbd565b9050919050565b60006200152982620014f4565b9050919050565b60006200153d826200151c565b9050919050565b6200154f8162001530565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006200159f8262001343565b620015ab818562001581565b9350620015bd8185602086016200135f565b620015c88162000d2c565b840191505092915050565b6000620015e1838362001592565b905092915050565b6000602082019050919050565b6000620016038262001555565b6200160f818562001560565b935083602082028501620016238562001571565b8060005b85811015620016655784840389528151620016438582620015d3565b94506200165083620015e9565b925060208a0199505060018101905062001627565b50829750879550505050505092915050565b6000610100820190506200168f600083018b62001544565b8181036020830152620016a3818a62001395565b90508181036040830152620016b9818962001395565b90508181036060830152620016cf818862001395565b90508181036080830152620016e58187620015f6565b9050620016f660a083018662001315565b6200170560c083018562001315565b81810360e083015262001719818462001395565b90509998505050505050505050565b6000604082019050818103600083015262001744818562001395565b905081810360208301526200175a8184620015f6565b90509392505050565b6000620017708262000cbd565b9050919050565b620017828162001763565b81146200178e57600080fd5b50565b600081519050620017a28162001777565b92915050565b600060208284031215620017c157620017c062000cb3565b5b6000620017d18482850162001791565b91505092915050565b6000604082019050620017f1600083018562001456565b62001800602083018462001456565b9392505050565b600381106200181557600080fd5b50565b600081519050620018298162001807565b92915050565b60006020828403121562001848576200184762000cb3565b5b6000620018588482850162001818565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620018cc82620010fe565b9150620018d983620010fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562001911576200191062001890565b5b82820190509291505056fe60c06040526000600a60006101000a81548160ff021916908360018111156200002d576200002c62000310565b5b02179055506000600a60016101000a81548160ff021916908360028111156200005b576200005a62000310565b5b02179055503480156200006d57600080fd5b50604051620045a3380380620045a3833981810160405281019062000093919062000678565b8773ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508660009080519060200190620000e29291906200018b565b508560019080519060200190620000fb9291906200018b565b508460029080519060200190620001149291906200018b565b5083600590805190602001906200012d9291906200021c565b50826006819055504260a081815250508160078190555060075460a0516200015691906200080b565b6009819055508060039080519060200190620001749291906200018b565b5060006008819055505050505050505050620008cd565b828054620001999062000897565b90600052602060002090601f016020900481019282620001bd576000855562000209565b82601f10620001d857805160ff191683800117855562000209565b8280016001018555821562000209579182015b8281111562000208578251825591602001919060010190620001eb565b5b50905062000218919062000283565b5090565b82805482825590600052602060002090810192821562000270579160200282015b828111156200026f5782518290805190602001906200025e9291906200018b565b50916020019190600101906200023d565b5b5090506200027f9190620002a2565b5090565b5b808211156200029e57600081600090555060010162000284565b5090565b5b80821115620002c65760008181620002bc9190620002ca565b50600101620002a3565b5090565b508054620002d89062000897565b6000825580601f10620002ec57506200030d565b601f0160209004906000526020600020908101906200030c919062000283565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003808262000353565b9050919050565b620003928162000373565b81146200039e57600080fd5b50565b600081519050620003b28162000387565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200040d82620003c2565b810181811067ffffffffffffffff821117156200042f576200042e620003d3565b5b80604052505050565b6000620004446200033f565b905062000452828262000402565b919050565b600067ffffffffffffffff821115620004755762000474620003d3565b5b6200048082620003c2565b9050602081019050919050565b60005b83811015620004ad57808201518184015260208101905062000490565b83811115620004bd576000848401525b50505050565b6000620004da620004d48462000457565b62000438565b905082815260208101848484011115620004f957620004f8620003bd565b5b620005068482856200048d565b509392505050565b600082601f830112620005265762000525620003b8565b5b815162000538848260208601620004c3565b91505092915050565b600067ffffffffffffffff8211156200055f576200055e620003d3565b5b602082029050602081019050919050565b600080fd5b60006200058c620005868462000541565b62000438565b90508083825260208201905060208402830185811115620005b257620005b162000570565b5b835b818110156200060057805167ffffffffffffffff811115620005db57620005da620003b8565b5b808601620005ea89826200050e565b85526020850194505050602081019050620005b4565b5050509392505050565b600082601f830112620006225762000621620003b8565b5b81516200063484826020860162000575565b91505092915050565b6000819050919050565b62000652816200063d565b81146200065e57600080fd5b50565b600081519050620006728162000647565b92915050565b600080600080600080600080610100898b0312156200069c576200069b62000349565b5b6000620006ac8b828c01620003a1565b985050602089015167ffffffffffffffff811115620006d057620006cf6200034e565b5b620006de8b828c016200050e565b975050604089015167ffffffffffffffff8111156200070257620007016200034e565b5b620007108b828c016200050e565b965050606089015167ffffffffffffffff8111156200073457620007336200034e565b5b620007428b828c016200050e565b955050608089015167ffffffffffffffff8111156200076657620007656200034e565b5b620007748b828c016200060a565b94505060a0620007878b828c0162000661565b93505060c06200079a8b828c0162000661565b92505060e089015167ffffffffffffffff811115620007be57620007bd6200034e565b5b620007cc8b828c016200050e565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000818826200063d565b915062000825836200063d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200085d576200085c620007dc565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008b057607f821691505b60208210811415620008c757620008c662000868565b5b50919050565b60805160601c60a051613c6062000943600039600061184c015260008181610781015281816111ae0152818161131201528181611415015281816114c6015281816115b801528181611736015281816118da01528181611acb01528181611c8701528181611d970152611f6e0152613c606000f3fe6080604052600436106101d85760003560e01c806369066ae911610102578063b145603e11610095578063e7cf1ab711610064578063e7cf1ab7146106b5578063ed88c68e146106de578063f301af42146106e8578063fa89401a1461072a576101d8565b8063b145603e14610609578063bf66e2c814610634578063ce2a05721461065f578063ce845d1d1461068a576101d8565b8063743857cb116100d1578063743857cb1461054d57806395086ed11461057857806399a8502d146105b55780639a913793146105e0576101d8565b806369066ae9146104925780636d869814146104cf5780636e04ff0d146104f857806371aac7f914610536576101d8565b806329dcb0cf1161017a5780634ef89719116101495780634ef89719146103e857806360fa9a72146104135780636235887a1461043e57806363bd1d4a1461047b576101d8565b806329dcb0cf146103405780634278ac8b1461036b5780634585e33b146103965780634d695bdb146103bf576101d8565b806315a46ee6116101b657806315a46ee6146102705780631910bdc21461029b5780631c4b774b146102d85780632636b94514610315576101d8565b806309917c50146101dd5780630c611f241461021a5780630fb5a6b414610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190612968565b610753565b60405161021191906129ae565b60405180910390f35b34801561022657600080fd5b5061022f61076b565b60405161023c9190612ce0565b60405180910390f35b34801561025157600080fd5b5061025a610bac565b60405161026791906129ae565b60405180910390f35b34801561027c57600080fd5b50610285610bb2565b6040516102929190612d4c565b60405180910390f35b3480156102a757600080fd5b506102c260048036038101906102bd9190612968565b610c40565b6040516102cf9190612e1d565b60405180910390f35b3480156102e457600080fd5b506102ff60048036038101906102fa9190612e6b565b610cd7565b60405161030c9190612f78565b60405180910390f35b34801561032157600080fd5b5061032a611014565b60405161033791906129ae565b60405180910390f35b34801561034c57600080fd5b5061035561101a565b60405161036291906129ae565b60405180910390f35b34801561037757600080fd5b50610380611020565b60405161038d9190612d4c565b60405180910390f35b3480156103a257600080fd5b506103bd60048036038101906103b89190612fff565b6110ae565b005b3480156103cb57600080fd5b506103e660048036038101906103e1919061317c565b6111ac565b005b3480156103f457600080fd5b506103fd61124b565b60405161040a9190612d4c565b60405180910390f35b34801561041f57600080fd5b506104286112d9565b60405161043591906131d4565b60405180910390f35b34801561044a57600080fd5b5061046560048036038101906104609190612e6b565b6112ec565b60405161047291906129ae565b60405180910390f35b34801561048757600080fd5b50610490611310565b005b34801561049e57600080fd5b506104b960048036038101906104b49190612e6b565b61150a565b6040516104c69190612d4c565b60405180910390f35b3480156104db57600080fd5b506104f660048036038101906104f191906131ef565b6115b6565b005b34801561050457600080fd5b5061051f600480360381019061051a91906132d0565b611807565b60405161052d92919061337d565b60405180910390f35b34801561054257600080fd5b5061054b6118d8565b005b34801561055957600080fd5b506105626119f7565b60405161056f91906133f5565b60405180910390f35b34801561058457600080fd5b5061059f600480360381019061059a9190613410565b611a0a565b6040516105ac91906129ae565b60405180910390f35b3480156105c157600080fd5b506105ca611a3b565b6040516105d79190612d4c565b60405180910390f35b3480156105ec57600080fd5b506106076004803603810190610602919061355d565b611ac9565b005b34801561061557600080fd5b5061061e611c85565b60405161062b91906136a4565b60405180910390f35b34801561064057600080fd5b50610649611ca9565b6040516106569190612e1d565b60405180910390f35b34801561066b57600080fd5b50610674611d01565b6040516106819190612d4c565b60405180910390f35b34801561069657600080fd5b5061069f611d8f565b6040516106ac91906129ae565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190612e6b565b611d95565b005b6106e6611eff565b005b3480156106f457600080fd5b5061070f600480360381019061070a9190612e6b565b612234565b604051610721969594939291906136bf565b60405180910390f35b34801561073657600080fd5b50610751600480360381019061074c9190612968565b61238d565b005b600e6020528060005260406000206000915090505481565b61077361267d565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001600080546107c89061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546107f49061375d565b80156108415780601f1061081657610100808354040283529160200191610841565b820191906000526020600020905b81548152906001019060200180831161082457829003601f168201915b50505050508152602001600180546108589061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546108849061375d565b80156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b50505050508152602001600280546108e89061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546109149061375d565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b82821015610a395783829060005260206000200180546109ac9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546109d89061375d565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b50505050508152602001906001019061098d565b505050508152602001600654815260200160075481526020016008548152602001600a60019054906101000a900460ff166002811115610a7c57610a7b612b42565b5b815260200160038054610a8e9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610aba9061375d565b8015610b075780601f10610adc57610100808354040283529160200191610b07565b820191906000526020600020905b815481529060010190602001808311610aea57829003601f168201915b5050505050815260200160048054610b1e9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4a9061375d565b8015610b975780601f10610b6c57610100808354040283529160200191610b97565b820191906000526020600020905b815481529060010190602001808311610b7a57829003601f168201915b50505050508152602001600954815250905090565b60075481565b60048054610bbf9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610beb9061375d565b8015610c385780601f10610c0d57610100808354040283529160200191610c38565b820191906000526020600020905b815481529060010190602001808311610c1b57829003601f168201915b505050505081565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ccb57602002820191906000526020600020905b815481526020019060010190808311610cb7575b50505050509050919050565b610cdf612706565b600c60008381526020019081526020016000206040518061010001604052908160008201548152602001600182018054610d189061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d449061375d565b8015610d915780601f10610d6657610100808354040283529160200191610d91565b820191906000526020600020905b815481529060010190602001808311610d7457829003601f168201915b50505050508152602001600282018054610daa9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd69061375d565b8015610e235780601f10610df857610100808354040283529160200191610e23565b820191906000526020600020905b815481529060010190602001808311610e0657829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610efd578382906000526020600020018054610e709061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9c9061375d565b8015610ee95780601f10610ebe57610100808354040283529160200191610ee9565b820191906000526020600020905b815481529060010190602001808311610ecc57829003601f168201915b505050505081526020019060010190610e51565b50505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015611005578382906000526020600020018054610f789061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa49061375d565b8015610ff15780601f10610fc657610100808354040283529160200191610ff1565b820191906000526020600020905b815481529060010190602001808311610fd457829003601f168201915b505050505081526020019060010190610f59565b50505050815250509050919050565b60065481565b60095481565b6002805461102d9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546110599061375d565b80156110a65780601f1061107b576101008083540402835291602001916110a6565b820191906000526020600020905b81548152906001019060200180831161108957829003601f168201915b505050505081565b60006110c860405180602001604052806000815250611807565b50905080611102576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60016101000a81548160ff0219169083600281111561112857611127612b42565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d3060405161115c919061379e565b60405180910390a1600654600854106111a7577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc3060405161119e919061379e565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611231576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004908051906020019061124792919061274d565b5050565b600180546112589061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546112849061375d565b80156112d15780601f106112a6576101008083540402835291602001916112d1565b820191906000526020600020905b8154815290600101906020018083116112b457829003601f168201915b505050505081565b600a60019054906101000a900460ff1681565b600f81815481106112fc57600080fd5b906000526020600020016000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611395576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156113a9576113a8612b42565b5b600a60019054906101000a900460ff1660028111156113cb576113ca612b42565b5b14611402576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051611457906137ea565b60006040518083038185875af1925050503d8060008114611494576040519150601f19603f3d011682016040523d82523d6000602084013e611499565b606091505b505090508015611501577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516114f492919061385e565b60405180910390a1611506565b600080fd5b5050565b6005818154811061151a57600080fd5b9060005260206000200160009150905080546115359061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546115619061375d565b80156115ae5780601f10611583576101008083540402835291602001916115ae565b820191906000526020600020905b81548152906001019060200180831161159157829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461163b576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000829050600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401611680919061379e565b60206040518083038186803b15801561169857600080fd5b505afa1580156116ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d0919061389c565b1415611711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170890613915565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16634c7e9be36000306207a1207f0000000000000000000000000000000000000000000000000000000000000000671bc16d674ec800006040518663ffffffff1660e01b815260040161177e959493929190613ab4565b602060405180830381600087803b15801561179857600080fd5b505af11580156117ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d0919061389c565b600b819055506001600a60006101000a81548160ff021916908360018111156117fc576117fb612b42565b5b021790555050505050565b6000606060008060028111156118205761181f612b42565b5b600a60019054906101000a900460ff16600281111561184257611841612b42565b5b14905060006007547f0000000000000000000000000000000000000000000000000000000000000000426118769190613b77565b1190506000804711905081801561188a5750825b80156118935750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461195d576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561197157611970612b42565b5b600a60019054906101000a900460ff16600281111561199357611992612b42565b5b141561199e57600080fd5b6002600a60016101000a81548160ff021916908360028111156119c4576119c3612b42565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600a60009054906101000a900460ff1681565b600d6020528160005260406000208181548110611a2657600080fd5b90600052602060002001600091509150505481565b60008054611a489061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054611a749061375d565b8015611ac15780601f10611a9657610100808354040283529160200191611ac1565b820191906000526020600020905b815481529060010190602001808311611aa457829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b4e576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f889080600181540180825580915050600190039060005260206000200160009091909190915055604051806101000160405280898152602001888152602001878152602001868152602001858152602001848152602001831515815260200182815250600c60008a8152602001908152602001600020600082015181600001556020820151816001019080519060200190611bec92919061274d565b506040820151816002019080519060200190611c0992919061274d565b506060820151816003019080519060200190611c269291906127d3565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e0820151816007019080519060200190611c779291906127d3565b509050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600f805480602002602001604051908101604052809291908181526020018280548015611cf757602002820191906000526020600020905b815481526020019060010190808311611ce3575b5050505050905090565b60038054611d0e9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3a9061375d565b8015611d875780601f10611d5c57610100808354040283529160200191611d87565b820191906000526020600020905b815481529060010190602001808311611d6a57829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e1a576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001811115611e2e57611e2d612b42565b5b600a60009054906101000a900460ff166001811115611e5057611e4f612b42565b5b14611e5a57600080fd5b6000600c6000838152602001908152602001600020600001541115611efc57600c6000828152602001908152602001600020600080820160009055600182016000611ea59190612833565b600282016000611eb59190612833565b600382016000611ec59190612873565b600482016000905560058201600090556006820160006101000a81549060ff0219169055600782016000611ef99190612873565b50505b50565b60006002811115611f1357611f12612b42565b5b600a60019054906101000a900460ff166002811115611f3557611f34612b42565b5b14611f6c576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611ff2576040517f5b3890a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120073460085461265190919063ffffffff16565b6008819055506000600c6000348152602001908152602001600020600001541180156120545750600c600034815260200190815260200160002060060160009054906101000a900460ff16155b15612127576120836001600c60003481526020019081526020016000206005015461266790919063ffffffff16565b506000600c600034815260200190815260200160002060050154141561212657600c60003481526020019081526020016000206000808201600090556001820160006120cf9190612833565b6002820160006120df9190612833565b6003820160006120ef9190612873565b600482016000905560058201600090556006820160006101000a81549060ff02191690556007820160006121239190612873565b50505b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203490806001815401808255809150506001900390600052602060002001600090919091909150556121df34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461265190919063ffffffff16565b503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca26749235512083460085460405161222a929190613bab565b60405180910390a2565b600c60205280600052604060002060009150905080600001549080600101805461225d9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546122899061375d565b80156122d65780601f106122ab576101008083540402835291602001916122d6565b820191906000526020600020905b8154815290600101906020018083116122b957829003601f168201915b5050505050908060020180546122eb9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546123179061375d565b80156123645780601f1061233957610100808354040283529160200191612364565b820191906000526020600020905b81548152906001019060200180831161234757829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16905086565b600160028111156123a1576123a0612b42565b5b600a60019054906101000a900460ff1660028111156123c3576123c2612b42565b5b14156123fb576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561248057806040517fc4385859000000000000000000000000000000000000000000000000000000008152600401612477919061379e565b60405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061250f9190612894565b600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580600854101561258e576040517f52c3b68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6125a38160085461266790919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516125cf906137ea565b60006040518083038185875af1925050503d806000811461260c576040519150601f19603f3d011682016040523d82523d6000602084013e612611565b606091505b505090508061264c576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361265f9190613bd4565b905092915050565b600081836126759190613b77565b905092915050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156126eb576126ea612b42565b5b81526020016060815260200160608152602001600081525090565b604051806101000160405280600081526020016060815260200160608152602001606081526020016000815260200160008152602001600015158152602001606081525090565b8280546127599061375d565b90600052602060002090601f01602090048101928261277b57600085556127c2565b82601f1061279457805160ff19168380011785556127c2565b828001600101855582156127c2579182015b828111156127c15782518255916020019190600101906127a6565b5b5090506127cf91906128b5565b5090565b828054828255906000526020600020908101928215612822579160200282015b8281111561282157825182908051906020019061281192919061274d565b50916020019190600101906127f3565b5b50905061282f91906128d2565b5090565b50805461283f9061375d565b6000825580601f106128515750612870565b601f01602090049060005260206000209081019061286f91906128b5565b5b50565b508054600082559060005260206000209081019061289191906128d2565b50565b50805460008255906000526020600020908101906128b291906128b5565b50565b5b808211156128ce5760008160009055506001016128b6565b5090565b5b808211156128f257600081816128e99190612833565b506001016128d3565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129358261290a565b9050919050565b6129458161292a565b811461295057600080fd5b50565b6000813590506129628161293c565b92915050565b60006020828403121561297e5761297d612900565b5b600061298c84828501612953565b91505092915050565b6000819050919050565b6129a881612995565b82525050565b60006020820190506129c3600083018461299f565b92915050565b6129d28161292a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a125780820151818401526020810190506129f7565b83811115612a21576000848401525b50505050565b6000601f19601f8301169050919050565b6000612a43826129d8565b612a4d81856129e3565b9350612a5d8185602086016129f4565b612a6681612a27565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612aa98383612a38565b905092915050565b6000602082019050919050565b6000612ac982612a71565b612ad38185612a7c565b935083602082028501612ae585612a8d565b8060005b85811015612b215784840389528151612b028582612a9d565b9450612b0d83612ab1565b925060208a01995050600181019050612ae9565b50829750879550505050505092915050565b612b3c81612995565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612b8257612b81612b42565b5b50565b6000819050612b9382612b71565b919050565b6000612ba382612b85565b9050919050565b612bb381612b98565b82525050565b600061018083016000830151612bd260008601826129c9565b5060208301518482036020860152612bea8282612a38565b91505060408301518482036040860152612c048282612a38565b91505060608301518482036060860152612c1e8282612a38565b91505060808301518482036080860152612c388282612abe565b91505060a0830151612c4d60a0860182612b33565b5060c0830151612c6060c0860182612b33565b5060e0830151612c7360e0860182612b33565b50610100830151612c88610100860182612baa565b50610120830151848203610120860152612ca28282612a38565b915050610140830151848203610140860152612cbe8282612a38565b915050610160830151612cd5610160860182612b33565b508091505092915050565b60006020820190508181036000830152612cfa8184612bb9565b905092915050565b600082825260208201905092915050565b6000612d1e826129d8565b612d288185612d02565b9350612d388185602086016129f4565b612d4181612a27565b840191505092915050565b60006020820190508181036000830152612d668184612d13565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612da68383612b33565b60208301905092915050565b6000602082019050919050565b6000612dca82612d6e565b612dd48185612d79565b9350612ddf83612d8a565b8060005b83811015612e10578151612df78882612d9a565b9750612e0283612db2565b925050600181019050612de3565b5085935050505092915050565b60006020820190508181036000830152612e378184612dbf565b905092915050565b612e4881612995565b8114612e5357600080fd5b50565b600081359050612e6581612e3f565b92915050565b600060208284031215612e8157612e80612900565b5b6000612e8f84828501612e56565b91505092915050565b60008115159050919050565b612ead81612e98565b82525050565b600061010083016000830151612ecc6000860182612b33565b5060208301518482036020860152612ee48282612a38565b91505060408301518482036040860152612efe8282612a38565b91505060608301518482036060860152612f188282612abe565b9150506080830151612f2d6080860182612b33565b5060a0830151612f4060a0860182612b33565b5060c0830151612f5360c0860182612ea4565b5060e083015184820360e0860152612f6b8282612abe565b9150508091505092915050565b60006020820190508181036000830152612f928184612eb3565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612fbf57612fbe612f9a565b5b8235905067ffffffffffffffff811115612fdc57612fdb612f9f565b5b602083019150836001820283011115612ff857612ff7612fa4565b5b9250929050565b6000806020838503121561301657613015612900565b5b600083013567ffffffffffffffff81111561303457613033612905565b5b61304085828601612fa9565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61308982612a27565b810181811067ffffffffffffffff821117156130a8576130a7613051565b5b80604052505050565b60006130bb6128f6565b90506130c78282613080565b919050565b600067ffffffffffffffff8211156130e7576130e6613051565b5b6130f082612a27565b9050602081019050919050565b82818337600083830152505050565b600061311f61311a846130cc565b6130b1565b90508281526020810184848401111561313b5761313a61304c565b5b6131468482856130fd565b509392505050565b600082601f83011261316357613162612f9a565b5b813561317384826020860161310c565b91505092915050565b60006020828403121561319257613191612900565b5b600082013567ffffffffffffffff8111156131b0576131af612905565b5b6131bc8482850161314e565b91505092915050565b6131ce81612b98565b82525050565b60006020820190506131e960008301846131c5565b92915050565b6000806040838503121561320657613205612900565b5b600061321485828601612953565b925050602061322585828601612953565b9150509250929050565b600067ffffffffffffffff82111561324a57613249613051565b5b61325382612a27565b9050602081019050919050565b600061327361326e8461322f565b6130b1565b90508281526020810184848401111561328f5761328e61304c565b5b61329a8482856130fd565b509392505050565b600082601f8301126132b7576132b6612f9a565b5b81356132c7848260208601613260565b91505092915050565b6000602082840312156132e6576132e5612900565b5b600082013567ffffffffffffffff81111561330457613303612905565b5b613310848285016132a2565b91505092915050565b61332281612e98565b82525050565b600081519050919050565b600082825260208201905092915050565b600061334f82613328565b6133598185613333565b93506133698185602086016129f4565b61337281612a27565b840191505092915050565b60006040820190506133926000830185613319565b81810360208301526133a48184613344565b90509392505050565b600281106133be576133bd612b42565b5b50565b60008190506133cf826133ad565b919050565b60006133df826133c1565b9050919050565b6133ef816133d4565b82525050565b600060208201905061340a60008301846133e6565b92915050565b6000806040838503121561342757613426612900565b5b600061343585828601612953565b925050602061344685828601612e56565b9150509250929050565b600067ffffffffffffffff82111561346b5761346a613051565b5b602082029050602081019050919050565b600061348f61348a84613450565b6130b1565b905080838252602082019050602084028301858111156134b2576134b1612fa4565b5b835b818110156134f957803567ffffffffffffffff8111156134d7576134d6612f9a565b5b8086016134e4898261314e565b855260208501945050506020810190506134b4565b5050509392505050565b600082601f83011261351857613517612f9a565b5b813561352884826020860161347c565b91505092915050565b61353a81612e98565b811461354557600080fd5b50565b60008135905061355781613531565b92915050565b600080600080600080600080610100898b03121561357e5761357d612900565b5b600061358c8b828c01612e56565b985050602089013567ffffffffffffffff8111156135ad576135ac612905565b5b6135b98b828c0161314e565b975050604089013567ffffffffffffffff8111156135da576135d9612905565b5b6135e68b828c0161314e565b965050606089013567ffffffffffffffff81111561360757613606612905565b5b6136138b828c01613503565b95505060806136248b828c01612e56565b94505060a06136358b828c01612e56565b93505060c06136468b828c01613548565b92505060e089013567ffffffffffffffff81111561366757613666612905565b5b6136738b828c01613503565b9150509295985092959890939650565b600061368e8261290a565b9050919050565b61369e81613683565b82525050565b60006020820190506136b96000830184613695565b92915050565b600060c0820190506136d4600083018961299f565b81810360208301526136e68188612d13565b905081810360408301526136fa8187612d13565b9050613709606083018661299f565b613716608083018561299f565b61372360a0830184613319565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061377557607f821691505b602082108114156137895761378861372e565b5b50919050565b6137988161292a565b82525050565b60006020820190506137b3600083018461378f565b92915050565b600081905092915050565b50565b60006137d46000836137b9565b91506137df826137c4565b600082019050919050565b60006137f5826137c7565b9150819050919050565b6000819050919050565b600061382461381f61381a8461290a565b6137ff565b61290a565b9050919050565b600061383682613809565b9050919050565b60006138488261382b565b9050919050565b6138588161383d565b82525050565b6000604082019050613873600083018561384f565b613880602083018461378f565b9392505050565b60008151905061389681612e3f565b92915050565b6000602082840312156138b2576138b1612900565b5b60006138c084828501613887565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b60006138ff600883612d02565b915061390a826138c9565b602082019050919050565b6000602082019050818103600083015261392e816138f2565b9050919050565b60008190508160005260206000209050919050565b600081546139578161375d565b6139618186612d02565b9450600182166000811461397c576001811461398e576139c1565b60ff19831686526020860193506139c1565b61399785613935565b60005b838110156139b95781548189015260018201915060208101905061399a565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000613a00600283613333565b9150613a0b826139ca565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000613a4b613a46613a4184613a16565b6137ff565b613a20565b9050919050565b613a5b81613a30565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000613a9e613a99613a9484613a61565b6137ff565b613a6b565b9050919050565b613aae81613a83565b82525050565b6000610100820190508181036000830152613acf818861394a565b90508181036020830152613ae2816139f3565b9050613af1604083018761378f565b613afe6060830186613a52565b613b0b608083018561384f565b81810360a0830152613b1c816139f3565b905081810360c0830152613b2f816139f3565b9050613b3e60e0830184613aa5565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613b8282612995565b9150613b8d83612995565b925082821015613ba057613b9f613b48565b5b828203905092915050565b6000604082019050613bc0600083018561299f565b613bcd602083018461299f565b9392505050565b6000613bdf82612995565b9150613bea83612995565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c1f57613c1e613b48565b5b82820190509291505056fea2646970667358221220274b75986eea17cf3fc5ae1d80eec734c3b3bed3dc0753f6d401ca30414ce9ae64736f6c63430008080033a264697066735822122038c78afa475e5897aac24c2f9299ad5262da952cc38612be7327c9264ec12e2564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106200007a5760003560e01c80637c6abc8211620000555780637c6abc821462000109578063e4663a5b1462000129578063fab62a1d1462000157578063fca604d71462000185576200007a565b80631a702aa0146200007f578063359c4f3214620000ad57806353a0d46914620000db575b600080fd5b3480156200008c57600080fd5b50620000ab6004803603810190620000a5919062000e84565b620001b5565b005b348015620000ba57600080fd5b50620000d96004803603810190620000d3919062000fbb565b62000215565b005b348015620000e857600080fd5b5062000107600480360381019062000101919062001139565b620003be565b005b62000127600480360381019062000121919062001287565b620004fa565b005b3480156200013657600080fd5b506200015560048036038101906200014f919062001287565b62000695565b005b3480156200016457600080fd5b506200018360048036038101906200017d9190620012b9565b620009d2565b005b3480156200019257600080fd5b506200019d62000c95565b604051620001ac919062001326565b60405180910390f35b8573ffffffffffffffffffffffffffffffffffffffff167f8a71481c426e212d085148853642cbd73769f57ca8e2a96eca998197465ab416868686868660405162000205959493929190620013d6565b60405180910390a2505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160240162000241919062001467565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002cd9190620014d1565b600060405180830381855af49150503d80600081146200030a576040519150601f19603f3d011682016040523d82523d6000602084013e6200030f565b606091505b5050905080156200037a578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a3620003b9565b826040517f5bdf89f6000000000000000000000000000000000000000000000000000000008152600401620003b0919062001467565b60405180910390fd5b505050565b60003388888888888888604051620003d69062000c9b565b620003e998979695949392919062001677565b604051809103906000f08015801562000406573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd1ef576cbb9cedc698256ae3d2464b38a636f26263382a3c2206c86d7c8c1fcf8888604051620004e892919062001728565b60405180910390a35050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620005a59190620014d1565b600060405180830381855af49150503d8060008114620005e2576040519150601f19603f3d011682016040523d82523d6000602084013e620005e7565b606091505b50509050801562000652578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a362000691565b816040517ffe5dd8d300000000000000000000000000000000000000000000000000000000815260040162000688919062001467565b60405180910390fd5b5050565b803373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200075357600080fd5b505afa15801562000768573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078e9190620017a8565b73ffffffffffffffffffffffffffffffffffffffff1614620007eb5733816040517fd9e20da8000000000000000000000000000000000000000000000000000000008152600401620007e2929190620017da565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b1580156200089357600080fd5b505afa158015620008a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008ce91906200182f565b6002811115620008e357620008e262001861565b5b14156200092957816040517fdfecfddd00000000000000000000000000000000000000000000000000000000815260040162000920919062001467565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558173ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a25050565b823373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a9057600080fd5b505afa15801562000aa5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000acb9190620017a8565b73ffffffffffffffffffffffffffffffffffffffff161462000b285733816040517fd9e20da800000000000000000000000000000000000000000000000000000000815260040162000b1f929190620017da565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16848460405160240162000b56929190620017da565b6040516020818303038152906040527f6d869814000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405162000be29190620014d1565b600060405180830381855af49150503d806000811462000c1f576040519150601f19603f3d011682016040523d82523d6000602084013e62000c24565b606091505b50509050801562000c8957600160008082825462000c439190620018bf565b925050819055507f73e8189383ff7624bab72264727986ddc2467ca0c07220dd78ffbc46122ce0d48560405162000c7b919062001467565b60405180910390a162000c8e565b600080fd5b5050505050565b60005481565b6145a3806200191d83390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000cea8262000cbd565b9050919050565b62000cfc8162000cdd565b811462000d0857600080fd5b50565b60008135905062000d1c8162000cf1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000d778262000d2c565b810181811067ffffffffffffffff8211171562000d995762000d9862000d3d565b5b80604052505050565b600062000dae62000ca9565b905062000dbc828262000d6c565b919050565b600067ffffffffffffffff82111562000ddf5762000dde62000d3d565b5b62000dea8262000d2c565b9050602081019050919050565b82818337600083830152505050565b600062000e1d62000e178462000dc1565b62000da2565b90508281526020810184848401111562000e3c5762000e3b62000d27565b5b62000e4984828562000df7565b509392505050565b600082601f83011262000e695762000e6862000d22565b5b813562000e7b84826020860162000e06565b91505092915050565b60008060008060008060c0878903121562000ea45762000ea362000cb3565b5b600062000eb489828a0162000d0b565b965050602087013567ffffffffffffffff81111562000ed85762000ed762000cb8565b5b62000ee689828a0162000e51565b955050604087013567ffffffffffffffff81111562000f0a5762000f0962000cb8565b5b62000f1889828a0162000e51565b945050606087013567ffffffffffffffff81111562000f3c5762000f3b62000cb8565b5b62000f4a89828a0162000e51565b935050608087013567ffffffffffffffff81111562000f6e5762000f6d62000cb8565b5b62000f7c89828a0162000e51565b92505060a087013567ffffffffffffffff81111562000fa05762000f9f62000cb8565b5b62000fae89828a0162000e51565b9150509295509295509295565b6000806040838503121562000fd55762000fd462000cb3565b5b600062000fe58582860162000d0b565b925050602062000ff88582860162000d0b565b9150509250929050565b600067ffffffffffffffff82111562001020576200101f62000d3d565b5b602082029050602081019050919050565b600080fd5b60006200104d620010478462001002565b62000da2565b9050808382526020820190506020840283018581111562001073576200107262001031565b5b835b81811015620010c157803567ffffffffffffffff8111156200109c576200109b62000d22565b5b808601620010ab898262000e51565b8552602085019450505060208101905062001075565b5050509392505050565b600082601f830112620010e357620010e262000d22565b5b8135620010f584826020860162001036565b91505092915050565b6000819050919050565b6200111381620010fe565b81146200111f57600080fd5b50565b600081359050620011338162001108565b92915050565b600080600080600080600060e0888a0312156200115b576200115a62000cb3565b5b600088013567ffffffffffffffff8111156200117c576200117b62000cb8565b5b6200118a8a828b0162000e51565b975050602088013567ffffffffffffffff811115620011ae57620011ad62000cb8565b5b620011bc8a828b0162000e51565b965050604088013567ffffffffffffffff811115620011e057620011df62000cb8565b5b620011ee8a828b0162000e51565b955050606088013567ffffffffffffffff81111562001212576200121162000cb8565b5b620012208a828b01620010cb565b9450506080620012338a828b0162001122565b93505060a0620012468a828b0162001122565b92505060c088013567ffffffffffffffff8111156200126a576200126962000cb8565b5b620012788a828b0162000e51565b91505092959891949750929550565b600060208284031215620012a0576200129f62000cb3565b5b6000620012b08482850162000d0b565b91505092915050565b600080600060608486031215620012d557620012d462000cb3565b5b6000620012e58682870162000d0b565b9350506020620012f88682870162000d0b565b92505060406200130b8682870162000d0b565b9150509250925092565b6200132081620010fe565b82525050565b60006020820190506200133d600083018462001315565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200137f57808201518184015260208101905062001362565b838111156200138f576000848401525b50505050565b6000620013a28262001343565b620013ae81856200134e565b9350620013c08185602086016200135f565b620013cb8162000d2c565b840191505092915050565b600060a0820190508181036000830152620013f2818862001395565b9050818103602083015262001408818762001395565b905081810360408301526200141e818662001395565b9050818103606083015262001434818562001395565b905081810360808301526200144a818462001395565b90509695505050505050565b620014618162000cdd565b82525050565b60006020820190506200147e600083018462001456565b92915050565b600081519050919050565b600081905092915050565b6000620014a78262001484565b620014b381856200148f565b9350620014c58185602086016200135f565b80840191505092915050565b6000620014df82846200149a565b915081905092915050565b6000819050919050565b6000620015156200150f620015098462000cbd565b620014ea565b62000cbd565b9050919050565b60006200152982620014f4565b9050919050565b60006200153d826200151c565b9050919050565b6200154f8162001530565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006200159f8262001343565b620015ab818562001581565b9350620015bd8185602086016200135f565b620015c88162000d2c565b840191505092915050565b6000620015e1838362001592565b905092915050565b6000602082019050919050565b6000620016038262001555565b6200160f818562001560565b935083602082028501620016238562001571565b8060005b85811015620016655784840389528151620016438582620015d3565b94506200165083620015e9565b925060208a0199505060018101905062001627565b50829750879550505050505092915050565b6000610100820190506200168f600083018b62001544565b8181036020830152620016a3818a62001395565b90508181036040830152620016b9818962001395565b90508181036060830152620016cf818862001395565b90508181036080830152620016e58187620015f6565b9050620016f660a083018662001315565b6200170560c083018562001315565b81810360e083015262001719818462001395565b90509998505050505050505050565b6000604082019050818103600083015262001744818562001395565b905081810360208301526200175a8184620015f6565b90509392505050565b6000620017708262000cbd565b9050919050565b620017828162001763565b81146200178e57600080fd5b50565b600081519050620017a28162001777565b92915050565b600060208284031215620017c157620017c062000cb3565b5b6000620017d18482850162001791565b91505092915050565b6000604082019050620017f1600083018562001456565b62001800602083018462001456565b9392505050565b600381106200181557600080fd5b50565b600081519050620018298162001807565b92915050565b60006020828403121562001848576200184762000cb3565b5b6000620018588482850162001818565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620018cc82620010fe565b9150620018d983620010fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562001911576200191062001890565b5b82820190509291505056fe60c06040526000600a60006101000a81548160ff021916908360018111156200002d576200002c62000310565b5b02179055506000600a60016101000a81548160ff021916908360028111156200005b576200005a62000310565b5b02179055503480156200006d57600080fd5b50604051620045a3380380620045a3833981810160405281019062000093919062000678565b8773ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508660009080519060200190620000e29291906200018b565b508560019080519060200190620000fb9291906200018b565b508460029080519060200190620001149291906200018b565b5083600590805190602001906200012d9291906200021c565b50826006819055504260a081815250508160078190555060075460a0516200015691906200080b565b6009819055508060039080519060200190620001749291906200018b565b5060006008819055505050505050505050620008cd565b828054620001999062000897565b90600052602060002090601f016020900481019282620001bd576000855562000209565b82601f10620001d857805160ff191683800117855562000209565b8280016001018555821562000209579182015b8281111562000208578251825591602001919060010190620001eb565b5b50905062000218919062000283565b5090565b82805482825590600052602060002090810192821562000270579160200282015b828111156200026f5782518290805190602001906200025e9291906200018b565b50916020019190600101906200023d565b5b5090506200027f9190620002a2565b5090565b5b808211156200029e57600081600090555060010162000284565b5090565b5b80821115620002c65760008181620002bc9190620002ca565b50600101620002a3565b5090565b508054620002d89062000897565b6000825580601f10620002ec57506200030d565b601f0160209004906000526020600020908101906200030c919062000283565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003808262000353565b9050919050565b620003928162000373565b81146200039e57600080fd5b50565b600081519050620003b28162000387565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200040d82620003c2565b810181811067ffffffffffffffff821117156200042f576200042e620003d3565b5b80604052505050565b6000620004446200033f565b905062000452828262000402565b919050565b600067ffffffffffffffff821115620004755762000474620003d3565b5b6200048082620003c2565b9050602081019050919050565b60005b83811015620004ad57808201518184015260208101905062000490565b83811115620004bd576000848401525b50505050565b6000620004da620004d48462000457565b62000438565b905082815260208101848484011115620004f957620004f8620003bd565b5b620005068482856200048d565b509392505050565b600082601f830112620005265762000525620003b8565b5b815162000538848260208601620004c3565b91505092915050565b600067ffffffffffffffff8211156200055f576200055e620003d3565b5b602082029050602081019050919050565b600080fd5b60006200058c620005868462000541565b62000438565b90508083825260208201905060208402830185811115620005b257620005b162000570565b5b835b818110156200060057805167ffffffffffffffff811115620005db57620005da620003b8565b5b808601620005ea89826200050e565b85526020850194505050602081019050620005b4565b5050509392505050565b600082601f830112620006225762000621620003b8565b5b81516200063484826020860162000575565b91505092915050565b6000819050919050565b62000652816200063d565b81146200065e57600080fd5b50565b600081519050620006728162000647565b92915050565b600080600080600080600080610100898b0312156200069c576200069b62000349565b5b6000620006ac8b828c01620003a1565b985050602089015167ffffffffffffffff811115620006d057620006cf6200034e565b5b620006de8b828c016200050e565b975050604089015167ffffffffffffffff8111156200070257620007016200034e565b5b620007108b828c016200050e565b965050606089015167ffffffffffffffff8111156200073457620007336200034e565b5b620007428b828c016200050e565b955050608089015167ffffffffffffffff8111156200076657620007656200034e565b5b620007748b828c016200060a565b94505060a0620007878b828c0162000661565b93505060c06200079a8b828c0162000661565b92505060e089015167ffffffffffffffff811115620007be57620007bd6200034e565b5b620007cc8b828c016200050e565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000818826200063d565b915062000825836200063d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200085d576200085c620007dc565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008b057607f821691505b60208210811415620008c757620008c662000868565b5b50919050565b60805160601c60a051613c6062000943600039600061184c015260008181610781015281816111ae0152818161131201528181611415015281816114c6015281816115b801528181611736015281816118da01528181611acb01528181611c8701528181611d970152611f6e0152613c606000f3fe6080604052600436106101d85760003560e01c806369066ae911610102578063b145603e11610095578063e7cf1ab711610064578063e7cf1ab7146106b5578063ed88c68e146106de578063f301af42146106e8578063fa89401a1461072a576101d8565b8063b145603e14610609578063bf66e2c814610634578063ce2a05721461065f578063ce845d1d1461068a576101d8565b8063743857cb116100d1578063743857cb1461054d57806395086ed11461057857806399a8502d146105b55780639a913793146105e0576101d8565b806369066ae9146104925780636d869814146104cf5780636e04ff0d146104f857806371aac7f914610536576101d8565b806329dcb0cf1161017a5780634ef89719116101495780634ef89719146103e857806360fa9a72146104135780636235887a1461043e57806363bd1d4a1461047b576101d8565b806329dcb0cf146103405780634278ac8b1461036b5780634585e33b146103965780634d695bdb146103bf576101d8565b806315a46ee6116101b657806315a46ee6146102705780631910bdc21461029b5780631c4b774b146102d85780632636b94514610315576101d8565b806309917c50146101dd5780630c611f241461021a5780630fb5a6b414610245575b600080fd5b3480156101e957600080fd5b5061020460048036038101906101ff9190612968565b610753565b60405161021191906129ae565b60405180910390f35b34801561022657600080fd5b5061022f61076b565b60405161023c9190612ce0565b60405180910390f35b34801561025157600080fd5b5061025a610bac565b60405161026791906129ae565b60405180910390f35b34801561027c57600080fd5b50610285610bb2565b6040516102929190612d4c565b60405180910390f35b3480156102a757600080fd5b506102c260048036038101906102bd9190612968565b610c40565b6040516102cf9190612e1d565b60405180910390f35b3480156102e457600080fd5b506102ff60048036038101906102fa9190612e6b565b610cd7565b60405161030c9190612f78565b60405180910390f35b34801561032157600080fd5b5061032a611014565b60405161033791906129ae565b60405180910390f35b34801561034c57600080fd5b5061035561101a565b60405161036291906129ae565b60405180910390f35b34801561037757600080fd5b50610380611020565b60405161038d9190612d4c565b60405180910390f35b3480156103a257600080fd5b506103bd60048036038101906103b89190612fff565b6110ae565b005b3480156103cb57600080fd5b506103e660048036038101906103e1919061317c565b6111ac565b005b3480156103f457600080fd5b506103fd61124b565b60405161040a9190612d4c565b60405180910390f35b34801561041f57600080fd5b506104286112d9565b60405161043591906131d4565b60405180910390f35b34801561044a57600080fd5b5061046560048036038101906104609190612e6b565b6112ec565b60405161047291906129ae565b60405180910390f35b34801561048757600080fd5b50610490611310565b005b34801561049e57600080fd5b506104b960048036038101906104b49190612e6b565b61150a565b6040516104c69190612d4c565b60405180910390f35b3480156104db57600080fd5b506104f660048036038101906104f191906131ef565b6115b6565b005b34801561050457600080fd5b5061051f600480360381019061051a91906132d0565b611807565b60405161052d92919061337d565b60405180910390f35b34801561054257600080fd5b5061054b6118d8565b005b34801561055957600080fd5b506105626119f7565b60405161056f91906133f5565b60405180910390f35b34801561058457600080fd5b5061059f600480360381019061059a9190613410565b611a0a565b6040516105ac91906129ae565b60405180910390f35b3480156105c157600080fd5b506105ca611a3b565b6040516105d79190612d4c565b60405180910390f35b3480156105ec57600080fd5b506106076004803603810190610602919061355d565b611ac9565b005b34801561061557600080fd5b5061061e611c85565b60405161062b91906136a4565b60405180910390f35b34801561064057600080fd5b50610649611ca9565b6040516106569190612e1d565b60405180910390f35b34801561066b57600080fd5b50610674611d01565b6040516106819190612d4c565b60405180910390f35b34801561069657600080fd5b5061069f611d8f565b6040516106ac91906129ae565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190612e6b565b611d95565b005b6106e6611eff565b005b3480156106f457600080fd5b5061070f600480360381019061070a9190612e6b565b612234565b604051610721969594939291906136bf565b60405180910390f35b34801561073657600080fd5b50610751600480360381019061074c9190612968565b61238d565b005b600e6020528060005260406000206000915090505481565b61077361267d565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001600080546107c89061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546107f49061375d565b80156108415780601f1061081657610100808354040283529160200191610841565b820191906000526020600020905b81548152906001019060200180831161082457829003601f168201915b50505050508152602001600180546108589061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546108849061375d565b80156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b50505050508152602001600280546108e89061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546109149061375d565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b82821015610a395783829060005260206000200180546109ac9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546109d89061375d565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b50505050508152602001906001019061098d565b505050508152602001600654815260200160075481526020016008548152602001600a60019054906101000a900460ff166002811115610a7c57610a7b612b42565b5b815260200160038054610a8e9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610aba9061375d565b8015610b075780601f10610adc57610100808354040283529160200191610b07565b820191906000526020600020905b815481529060010190602001808311610aea57829003601f168201915b5050505050815260200160048054610b1e9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4a9061375d565b8015610b975780601f10610b6c57610100808354040283529160200191610b97565b820191906000526020600020905b815481529060010190602001808311610b7a57829003601f168201915b50505050508152602001600954815250905090565b60075481565b60048054610bbf9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610beb9061375d565b8015610c385780601f10610c0d57610100808354040283529160200191610c38565b820191906000526020600020905b815481529060010190602001808311610c1b57829003601f168201915b505050505081565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ccb57602002820191906000526020600020905b815481526020019060010190808311610cb7575b50505050509050919050565b610cdf612706565b600c60008381526020019081526020016000206040518061010001604052908160008201548152602001600182018054610d189061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d449061375d565b8015610d915780601f10610d6657610100808354040283529160200191610d91565b820191906000526020600020905b815481529060010190602001808311610d7457829003601f168201915b50505050508152602001600282018054610daa9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd69061375d565b8015610e235780601f10610df857610100808354040283529160200191610e23565b820191906000526020600020905b815481529060010190602001808311610e0657829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610efd578382906000526020600020018054610e709061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9c9061375d565b8015610ee95780601f10610ebe57610100808354040283529160200191610ee9565b820191906000526020600020905b815481529060010190602001808311610ecc57829003601f168201915b505050505081526020019060010190610e51565b50505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015611005578382906000526020600020018054610f789061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa49061375d565b8015610ff15780601f10610fc657610100808354040283529160200191610ff1565b820191906000526020600020905b815481529060010190602001808311610fd457829003601f168201915b505050505081526020019060010190610f59565b50505050815250509050919050565b60065481565b60095481565b6002805461102d9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546110599061375d565b80156110a65780601f1061107b576101008083540402835291602001916110a6565b820191906000526020600020905b81548152906001019060200180831161108957829003601f168201915b505050505081565b60006110c860405180602001604052806000815250611807565b50905080611102576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60016101000a81548160ff0219169083600281111561112857611127612b42565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d3060405161115c919061379e565b60405180910390a1600654600854106111a7577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc3060405161119e919061379e565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611231576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004908051906020019061124792919061274d565b5050565b600180546112589061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546112849061375d565b80156112d15780601f106112a6576101008083540402835291602001916112d1565b820191906000526020600020905b8154815290600101906020018083116112b457829003601f168201915b505050505081565b600a60019054906101000a900460ff1681565b600f81815481106112fc57600080fd5b906000526020600020016000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611395576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156113a9576113a8612b42565b5b600a60019054906101000a900460ff1660028111156113cb576113ca612b42565b5b14611402576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051611457906137ea565b60006040518083038185875af1925050503d8060008114611494576040519150601f19603f3d011682016040523d82523d6000602084013e611499565b606091505b505090508015611501577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516114f492919061385e565b60405180910390a1611506565b600080fd5b5050565b6005818154811061151a57600080fd5b9060005260206000200160009150905080546115359061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546115619061375d565b80156115ae5780601f10611583576101008083540402835291602001916115ae565b820191906000526020600020905b81548152906001019060200180831161159157829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461163b576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000829050600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401611680919061379e565b60206040518083038186803b15801561169857600080fd5b505afa1580156116ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d0919061389c565b1415611711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170890613915565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16634c7e9be36000306207a1207f0000000000000000000000000000000000000000000000000000000000000000671bc16d674ec800006040518663ffffffff1660e01b815260040161177e959493929190613ab4565b602060405180830381600087803b15801561179857600080fd5b505af11580156117ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d0919061389c565b600b819055506001600a60006101000a81548160ff021916908360018111156117fc576117fb612b42565b5b021790555050505050565b6000606060008060028111156118205761181f612b42565b5b600a60019054906101000a900460ff16600281111561184257611841612b42565b5b14905060006007547f0000000000000000000000000000000000000000000000000000000000000000426118769190613b77565b1190506000804711905081801561188a5750825b80156118935750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461195d576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561197157611970612b42565b5b600a60019054906101000a900460ff16600281111561199357611992612b42565b5b141561199e57600080fd5b6002600a60016101000a81548160ff021916908360028111156119c4576119c3612b42565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600a60009054906101000a900460ff1681565b600d6020528160005260406000208181548110611a2657600080fd5b90600052602060002001600091509150505481565b60008054611a489061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054611a749061375d565b8015611ac15780601f10611a9657610100808354040283529160200191611ac1565b820191906000526020600020905b815481529060010190602001808311611aa457829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b4e576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f889080600181540180825580915050600190039060005260206000200160009091909190915055604051806101000160405280898152602001888152602001878152602001868152602001858152602001848152602001831515815260200182815250600c60008a8152602001908152602001600020600082015181600001556020820151816001019080519060200190611bec92919061274d565b506040820151816002019080519060200190611c0992919061274d565b506060820151816003019080519060200190611c269291906127d3565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e0820151816007019080519060200190611c779291906127d3565b509050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600f805480602002602001604051908101604052809291908181526020018280548015611cf757602002820191906000526020600020905b815481526020019060010190808311611ce3575b5050505050905090565b60038054611d0e9061375d565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3a9061375d565b8015611d875780601f10611d5c57610100808354040283529160200191611d87565b820191906000526020600020905b815481529060010190602001808311611d6a57829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e1a576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001811115611e2e57611e2d612b42565b5b600a60009054906101000a900460ff166001811115611e5057611e4f612b42565b5b14611e5a57600080fd5b6000600c6000838152602001908152602001600020600001541115611efc57600c6000828152602001908152602001600020600080820160009055600182016000611ea59190612833565b600282016000611eb59190612833565b600382016000611ec59190612873565b600482016000905560058201600090556006820160006101000a81549060ff0219169055600782016000611ef99190612873565b50505b50565b60006002811115611f1357611f12612b42565b5b600a60019054906101000a900460ff166002811115611f3557611f34612b42565b5b14611f6c576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611ff2576040517f5b3890a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120073460085461265190919063ffffffff16565b6008819055506000600c6000348152602001908152602001600020600001541180156120545750600c600034815260200190815260200160002060060160009054906101000a900460ff16155b15612127576120836001600c60003481526020019081526020016000206005015461266790919063ffffffff16565b506000600c600034815260200190815260200160002060050154141561212657600c60003481526020019081526020016000206000808201600090556001820160006120cf9190612833565b6002820160006120df9190612833565b6003820160006120ef9190612873565b600482016000905560058201600090556006820160006101000a81549060ff02191690556007820160006121239190612873565b50505b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203490806001815401808255809150506001900390600052602060002001600090919091909150556121df34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461265190919063ffffffff16565b503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca26749235512083460085460405161222a929190613bab565b60405180910390a2565b600c60205280600052604060002060009150905080600001549080600101805461225d9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546122899061375d565b80156122d65780601f106122ab576101008083540402835291602001916122d6565b820191906000526020600020905b8154815290600101906020018083116122b957829003601f168201915b5050505050908060020180546122eb9061375d565b80601f01602080910402602001604051908101604052809291908181526020018280546123179061375d565b80156123645780601f1061233957610100808354040283529160200191612364565b820191906000526020600020905b81548152906001019060200180831161234757829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16905086565b600160028111156123a1576123a0612b42565b5b600a60019054906101000a900460ff1660028111156123c3576123c2612b42565b5b14156123fb576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561248057806040517fc4385859000000000000000000000000000000000000000000000000000000008152600401612477919061379e565b60405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061250f9190612894565b600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905580600854101561258e576040517f52c3b68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6125a38160085461266790919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516125cf906137ea565b60006040518083038185875af1925050503d806000811461260c576040519150601f19603f3d011682016040523d82523d6000602084013e612611565b606091505b505090508061264c576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361265f9190613bd4565b905092915050565b600081836126759190613b77565b905092915050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156126eb576126ea612b42565b5b81526020016060815260200160608152602001600081525090565b604051806101000160405280600081526020016060815260200160608152602001606081526020016000815260200160008152602001600015158152602001606081525090565b8280546127599061375d565b90600052602060002090601f01602090048101928261277b57600085556127c2565b82601f1061279457805160ff19168380011785556127c2565b828001600101855582156127c2579182015b828111156127c15782518255916020019190600101906127a6565b5b5090506127cf91906128b5565b5090565b828054828255906000526020600020908101928215612822579160200282015b8281111561282157825182908051906020019061281192919061274d565b50916020019190600101906127f3565b5b50905061282f91906128d2565b5090565b50805461283f9061375d565b6000825580601f106128515750612870565b601f01602090049060005260206000209081019061286f91906128b5565b5b50565b508054600082559060005260206000209081019061289191906128d2565b50565b50805460008255906000526020600020908101906128b291906128b5565b50565b5b808211156128ce5760008160009055506001016128b6565b5090565b5b808211156128f257600081816128e99190612833565b506001016128d3565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129358261290a565b9050919050565b6129458161292a565b811461295057600080fd5b50565b6000813590506129628161293c565b92915050565b60006020828403121561297e5761297d612900565b5b600061298c84828501612953565b91505092915050565b6000819050919050565b6129a881612995565b82525050565b60006020820190506129c3600083018461299f565b92915050565b6129d28161292a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a125780820151818401526020810190506129f7565b83811115612a21576000848401525b50505050565b6000601f19601f8301169050919050565b6000612a43826129d8565b612a4d81856129e3565b9350612a5d8185602086016129f4565b612a6681612a27565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612aa98383612a38565b905092915050565b6000602082019050919050565b6000612ac982612a71565b612ad38185612a7c565b935083602082028501612ae585612a8d565b8060005b85811015612b215784840389528151612b028582612a9d565b9450612b0d83612ab1565b925060208a01995050600181019050612ae9565b50829750879550505050505092915050565b612b3c81612995565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612b8257612b81612b42565b5b50565b6000819050612b9382612b71565b919050565b6000612ba382612b85565b9050919050565b612bb381612b98565b82525050565b600061018083016000830151612bd260008601826129c9565b5060208301518482036020860152612bea8282612a38565b91505060408301518482036040860152612c048282612a38565b91505060608301518482036060860152612c1e8282612a38565b91505060808301518482036080860152612c388282612abe565b91505060a0830151612c4d60a0860182612b33565b5060c0830151612c6060c0860182612b33565b5060e0830151612c7360e0860182612b33565b50610100830151612c88610100860182612baa565b50610120830151848203610120860152612ca28282612a38565b915050610140830151848203610140860152612cbe8282612a38565b915050610160830151612cd5610160860182612b33565b508091505092915050565b60006020820190508181036000830152612cfa8184612bb9565b905092915050565b600082825260208201905092915050565b6000612d1e826129d8565b612d288185612d02565b9350612d388185602086016129f4565b612d4181612a27565b840191505092915050565b60006020820190508181036000830152612d668184612d13565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612da68383612b33565b60208301905092915050565b6000602082019050919050565b6000612dca82612d6e565b612dd48185612d79565b9350612ddf83612d8a565b8060005b83811015612e10578151612df78882612d9a565b9750612e0283612db2565b925050600181019050612de3565b5085935050505092915050565b60006020820190508181036000830152612e378184612dbf565b905092915050565b612e4881612995565b8114612e5357600080fd5b50565b600081359050612e6581612e3f565b92915050565b600060208284031215612e8157612e80612900565b5b6000612e8f84828501612e56565b91505092915050565b60008115159050919050565b612ead81612e98565b82525050565b600061010083016000830151612ecc6000860182612b33565b5060208301518482036020860152612ee48282612a38565b91505060408301518482036040860152612efe8282612a38565b91505060608301518482036060860152612f188282612abe565b9150506080830151612f2d6080860182612b33565b5060a0830151612f4060a0860182612b33565b5060c0830151612f5360c0860182612ea4565b5060e083015184820360e0860152612f6b8282612abe565b9150508091505092915050565b60006020820190508181036000830152612f928184612eb3565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612fbf57612fbe612f9a565b5b8235905067ffffffffffffffff811115612fdc57612fdb612f9f565b5b602083019150836001820283011115612ff857612ff7612fa4565b5b9250929050565b6000806020838503121561301657613015612900565b5b600083013567ffffffffffffffff81111561303457613033612905565b5b61304085828601612fa9565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61308982612a27565b810181811067ffffffffffffffff821117156130a8576130a7613051565b5b80604052505050565b60006130bb6128f6565b90506130c78282613080565b919050565b600067ffffffffffffffff8211156130e7576130e6613051565b5b6130f082612a27565b9050602081019050919050565b82818337600083830152505050565b600061311f61311a846130cc565b6130b1565b90508281526020810184848401111561313b5761313a61304c565b5b6131468482856130fd565b509392505050565b600082601f83011261316357613162612f9a565b5b813561317384826020860161310c565b91505092915050565b60006020828403121561319257613191612900565b5b600082013567ffffffffffffffff8111156131b0576131af612905565b5b6131bc8482850161314e565b91505092915050565b6131ce81612b98565b82525050565b60006020820190506131e960008301846131c5565b92915050565b6000806040838503121561320657613205612900565b5b600061321485828601612953565b925050602061322585828601612953565b9150509250929050565b600067ffffffffffffffff82111561324a57613249613051565b5b61325382612a27565b9050602081019050919050565b600061327361326e8461322f565b6130b1565b90508281526020810184848401111561328f5761328e61304c565b5b61329a8482856130fd565b509392505050565b600082601f8301126132b7576132b6612f9a565b5b81356132c7848260208601613260565b91505092915050565b6000602082840312156132e6576132e5612900565b5b600082013567ffffffffffffffff81111561330457613303612905565b5b613310848285016132a2565b91505092915050565b61332281612e98565b82525050565b600081519050919050565b600082825260208201905092915050565b600061334f82613328565b6133598185613333565b93506133698185602086016129f4565b61337281612a27565b840191505092915050565b60006040820190506133926000830185613319565b81810360208301526133a48184613344565b90509392505050565b600281106133be576133bd612b42565b5b50565b60008190506133cf826133ad565b919050565b60006133df826133c1565b9050919050565b6133ef816133d4565b82525050565b600060208201905061340a60008301846133e6565b92915050565b6000806040838503121561342757613426612900565b5b600061343585828601612953565b925050602061344685828601612e56565b9150509250929050565b600067ffffffffffffffff82111561346b5761346a613051565b5b602082029050602081019050919050565b600061348f61348a84613450565b6130b1565b905080838252602082019050602084028301858111156134b2576134b1612fa4565b5b835b818110156134f957803567ffffffffffffffff8111156134d7576134d6612f9a565b5b8086016134e4898261314e565b855260208501945050506020810190506134b4565b5050509392505050565b600082601f83011261351857613517612f9a565b5b813561352884826020860161347c565b91505092915050565b61353a81612e98565b811461354557600080fd5b50565b60008135905061355781613531565b92915050565b600080600080600080600080610100898b03121561357e5761357d612900565b5b600061358c8b828c01612e56565b985050602089013567ffffffffffffffff8111156135ad576135ac612905565b5b6135b98b828c0161314e565b975050604089013567ffffffffffffffff8111156135da576135d9612905565b5b6135e68b828c0161314e565b965050606089013567ffffffffffffffff81111561360757613606612905565b5b6136138b828c01613503565b95505060806136248b828c01612e56565b94505060a06136358b828c01612e56565b93505060c06136468b828c01613548565b92505060e089013567ffffffffffffffff81111561366757613666612905565b5b6136738b828c01613503565b9150509295985092959890939650565b600061368e8261290a565b9050919050565b61369e81613683565b82525050565b60006020820190506136b96000830184613695565b92915050565b600060c0820190506136d4600083018961299f565b81810360208301526136e68188612d13565b905081810360408301526136fa8187612d13565b9050613709606083018661299f565b613716608083018561299f565b61372360a0830184613319565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061377557607f821691505b602082108114156137895761378861372e565b5b50919050565b6137988161292a565b82525050565b60006020820190506137b3600083018461378f565b92915050565b600081905092915050565b50565b60006137d46000836137b9565b91506137df826137c4565b600082019050919050565b60006137f5826137c7565b9150819050919050565b6000819050919050565b600061382461381f61381a8461290a565b6137ff565b61290a565b9050919050565b600061383682613809565b9050919050565b60006138488261382b565b9050919050565b6138588161383d565b82525050565b6000604082019050613873600083018561384f565b613880602083018461378f565b9392505050565b60008151905061389681612e3f565b92915050565b6000602082840312156138b2576138b1612900565b5b60006138c084828501613887565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b60006138ff600883612d02565b915061390a826138c9565b602082019050919050565b6000602082019050818103600083015261392e816138f2565b9050919050565b60008190508160005260206000209050919050565b600081546139578161375d565b6139618186612d02565b9450600182166000811461397c576001811461398e576139c1565b60ff19831686526020860193506139c1565b61399785613935565b60005b838110156139b95781548189015260018201915060208101905061399a565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000613a00600283613333565b9150613a0b826139ca565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000613a4b613a46613a4184613a16565b6137ff565b613a20565b9050919050565b613a5b81613a30565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000613a9e613a99613a9484613a61565b6137ff565b613a6b565b9050919050565b613aae81613a83565b82525050565b6000610100820190508181036000830152613acf818861394a565b90508181036020830152613ae2816139f3565b9050613af1604083018761378f565b613afe6060830186613a52565b613b0b608083018561384f565b81810360a0830152613b1c816139f3565b905081810360c0830152613b2f816139f3565b9050613b3e60e0830184613aa5565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613b8282612995565b9150613b8d83612995565b925082821015613ba057613b9f613b48565b5b828203905092915050565b6000604082019050613bc0600083018561299f565b613bcd602083018461299f565b9392505050565b6000613bdf82612995565b9150613bea83612995565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c1f57613c1e613b48565b5b82820190509291505056fea2646970667358221220274b75986eea17cf3fc5ae1d80eec734c3b3bed3dc0753f6d401ca30414ce9ae64736f6c63430008080033a264697066735822122038c78afa475e5897aac24c2f9299ad5262da952cc38612be7327c9264ec12e2564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1540,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1545,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(Campaign)1464)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Campaign)1464": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(Campaign)1464)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign)",
        "numberOfBytes": "32",
        "value": "t_contract(Campaign)1464"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}