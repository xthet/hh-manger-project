{
  "address": "0xD7aCccc5Dd71F8bAE9eE478acDFa681C7eBECd20",
  "abi": [
    {
      "inputs": [],
      "name": "Crf_CSA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Crf_DonF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Crf_NotCrtr",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Crf_PubF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Crf_RefF",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignPublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignShrunk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_homeAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_sig",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_homeAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sig",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkToken",
          "type": "address"
        }
      ],
      "name": "publishCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refundFromCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "removeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x54a49016864a3df94ab2039768008a376ab41f88c337e51a9e0359baa2bb8c96",
  "receipt": {
    "to": null,
    "from": "0x3DAe272A6C397F8dF15A4ACe05E38c23C1787Dca",
    "contractAddress": "0xD7aCccc5Dd71F8bAE9eE478acDFa681C7eBECd20",
    "transactionIndex": 1,
    "gasUsed": "5306575",
    "logsBloom": "0x
    "blockHash": "0x0e2f8bf7823a5aabaef8df2a114ca42e56e7cc0015d707990534f0953c0b3005",
    "transactionHash": "0x54a49016864a3df94ab2039768008a376ab41f88c337e51a9e0359baa2bb8c96",
    "logs": [],
    "blockNumber": 20843366,
    "cumulativeGasUsed": "5335683",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 9,
  "solcInputHash": "4630bfec25de029e8c115b75cec13d9c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Crf_CSA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Crf_DonF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Crf_NotCrtr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Crf_PubF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Crf_RefF\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignShrunk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_homeAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_sig\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_homeAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sig\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkToken\",\"type\":\"address\"}],\"name\":\"publishCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refundFromCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"removeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"Crf_DonF()\":[{\"notice\":\"cmp still active \"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice OnchainConfig of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct OnchainConfig {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint32 maxCheckDataSize;\\n  uint32 maxPerformDataSize;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member totalPremium the total premium collected on registry so far\\n * @member numUpkeeps total number of upkeeps on the registry\\n * @member configCount ordinal number of current config, out of all configs applied to this contract so far\\n * @member latestConfigBlockNumber last block at which this config was set\\n * @member latestConfigDigest domain-separation tag for current config\\n * @member latestEpoch for which a report was transmitted\\n * @member paused freeze on execution scoped to the entire registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint96 totalPremium;\\n  uint256 numUpkeeps;\\n  uint32 configCount;\\n  uint32 latestConfigBlockNumber;\\n  bytes32 latestConfigDigest;\\n  uint32 latestEpoch;\\n  bool paused;\\n}\\n\\n/**\\n * @notice all information about an upkeep\\n * @dev only used in return values\\n * @member target the contract which needs to be serviced\\n * @member executeGas the gas limit of upkeep execution\\n * @member checkData the checkData bytes for this upkeep\\n * @member balance the balance of this upkeep\\n * @member admin for this upkeep\\n * @member maxValidBlocknumber until which block this upkeep is valid\\n * @member lastPerformBlockNumber the last block number when this upkeep was performed\\n * @member amountSpent the amount this upkeep has spent\\n * @member paused if this upkeep has been paused\\n * @member skipSigVerification skip signature verification in transmit for a low security low cost model\\n */\\nstruct UpkeepInfo {\\n  address target;\\n  uint32 executeGas;\\n  bytes checkData;\\n  uint96 balance;\\n  address admin;\\n  uint64 maxValidBlocknumber;\\n  uint32 lastPerformBlockNumber;\\n  uint96 amountSpent;\\n  bool paused;\\n  bytes offchainConfig;\\n}\\n\\nenum UpkeepFailureReason {\\n  NONE,\\n  UPKEEP_CANCELLED,\\n  UPKEEP_PAUSED,\\n  TARGET_CHECK_REVERTED,\\n  UPKEEP_NOT_NEEDED,\\n  PERFORM_DATA_EXCEEDS_LIMIT,\\n  INSUFFICIENT_BALANCE\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData,\\n    bytes calldata offchainConfig\\n  ) external returns (uint256 id);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function pauseUpkeep(uint256 id) external;\\n\\n  function unpauseUpkeep(uint256 id) external;\\n\\n  function transferUpkeepAdmin(uint256 id, address proposed) external;\\n\\n  function acceptUpkeepAdmin(uint256 id) external;\\n\\n  function updateCheckData(uint256 id, bytes calldata newCheckData) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function setUpkeepOffchainConfig(uint256 id, bytes calldata config) external;\\n\\n  function getUpkeep(uint256 id) external view returns (UpkeepInfo memory upkeepInfo);\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getTransmitterInfo(address query)\\n    external\\n    view\\n    returns (\\n      bool active,\\n      uint8 index,\\n      uint96 balance,\\n      uint96 lastCollected,\\n      address payee\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory state,\\n      OnchainConfig memory config,\\n      address[] memory signers,\\n      address[] memory transmitters,\\n      uint8 f\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    view\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\",\"keccak256\":\"0x9faf0551509440bd9c25a4a2f14b23bce2f82e5ab5691058b9664edab808468c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport { UpkeepIDConsumer } from \\\"./UpkeepIDConsumer.sol\\\";\\r\\nimport { LinkTokenInterface } from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Cmp_NIS(); /**not in state */\\r\\nerror Cmp_NotCrtr();\\r\\nerror Cmp_DIC(); /**donator is creator */\\r\\nerror Cmp_NoDns();\\r\\nerror Cmp_RefF();\\r\\nerror Cmp_UpkNN();\\r\\nerror Cmp_NotRef();\\r\\nerror Cmp_Bankrupt();\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  enum C_Mode {\\r\\n    Draft,\\r\\n    Published\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string[] public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_initTimeStamp;\\r\\n  uint256 private constant i_maxDur = 5184000;\\r\\n  uint256 public deadline;\\r\\n  C_Mode public c_mode = C_Mode.Draft;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string[] s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  struct reward {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n  }\\r\\n\\r\\n  mapping (uint256 => reward) public rewards;\\r\\n  mapping (address => uint256[]) public donations;\\r\\n  mapping (address => uint256) public aggrDonations;\\r\\n\\r\\n  uint256[] public rKeys;\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert Cmp_NotCrtr();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n  ) {\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_initTimeStamp = block.timestamp;\\r\\n    duration = _duration > i_maxDur ? i_maxDur : _duration;\\r\\n    deadline = i_initTimeStamp.add(duration);\\r\\n    s_imageURI = _imageURI;\\r\\n    currentBalance = 0;\\r\\n  }\\r\\n\\r\\n  function timeBox(address _upkeepCreatorAddress, address _linkTokenAddress) external isCreator {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(_upkeepCreatorAddress);\\r\\n    LinkTokenInterface token = LinkTokenInterface(_linkTokenAddress);\\r\\n    if(token.balanceOf(_upkeepCreatorAddress) == 0){revert(\\\"no funds\\\");}\\r\\n    rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", address(this), 500000, i_creator, \\\"0x\\\", \\\"0x\\\", 2000000000000000000);\\r\\n    c_mode = C_Mode.Published;\\r\\n  }\\r\\n\\r\\n  function donate() public payable {\\r\\n    if(c_state != C_State.Fundraising){revert Cmp_NIS();}\\r\\n    if(msg.sender == i_creator){revert Cmp_DIC();}\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    if(rewards[msg.value].price > 0 && !rewards[msg.value].infinite) //exists and is not infinite\\r\\n    {\\r\\n      rewards[msg.value].quantity.sub(1);\\r\\n      if(rewards[msg.value].quantity == 0){delete(rewards[msg.value]);}\\r\\n    }\\r\\n    donations[msg.sender].push(msg.value);\\r\\n    aggrDonations[msg.sender].add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp.sub(i_initTimeStamp)) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Cmp_UpkNN();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() external isCreator {\\r\\n    if(c_state != C_State.Expired){revert Cmp_NIS();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) external {\\r\\n    if(c_state == C_State.Expired){revert Cmp_NIS();}\\r\\n    if(aggrDonations[_donator] == 0 ){revert Cmp_NoDns();}\\r\\n    uint256 amountToRefund = aggrDonations[_donator];\\r\\n    delete(donations[_donator]);\\r\\n    delete(aggrDonations[_donator]);\\r\\n    if(currentBalance < amountToRefund){revert Cmp_Bankrupt();}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Cmp_RefF();}\\r\\n  }\\r\\n\\r\\n  function makeReward( \\r\\n    uint256 _price, string memory _title, \\r\\n    string memory _description, string[] memory _perks, \\r\\n    uint256 _deadline, uint256 _quantity, bool _infinite, string[] memory _shipsTo\\r\\n    ) external isCreator {\\r\\n    rKeys.push(_price);\\r\\n    // shipsto _NW, infinite true, quantitymax 100  (for digRewards)  shipsto _AITW for phyRewards\\r\\n    rewards[_price] = reward(_price, _title, _description, _perks, _deadline, _quantity, _infinite, _shipsTo);\\r\\n  }\\r\\n\\r\\n  function deleteReward(uint256 _priceID) external isCreator {\\r\\n    if(c_mode != C_Mode.Draft){revert();}\\r\\n    if(rewards[_priceID].price > 0){delete(rewards[_priceID]);}\\r\\n  }\\r\\n\\r\\n  function endCampaign() external isCreator {\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateCampaignURI(string memory _campaignURI) external isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  function updateDur(uint256 _addedDur) external isCreator {\\r\\n    duration = (duration.add(_addedDur) > i_maxDur) ? i_maxDur : duration.add(_addedDur);\\r\\n    deadline = i_initTimeStamp.add(duration);\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getDonations(address _donator) external view returns(uint256[] memory) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getRewardKeys() external view returns(uint256[] memory){\\r\\n    return rKeys;\\r\\n  }\\r\\n  \\r\\n  function getReward(uint256 _priceID) external view returns (reward memory) {\\r\\n    return rewards[_priceID];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() external view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title,\\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      deadline\\r\\n    );\\r\\n  }\\r\\n\\r\\n  // fallback functions\\r\\n  fallback() external payable {\\r\\n    donate();\\r\\n  }\\r\\n  receive() external payable {\\r\\n    donate();\\r\\n  }\\r\\n}\",\"keccak256\":\"0xb6fa7cb10a4e5f2750001fd162b91f5be7f62afa3c0869c145e0c28b30ef7631\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Crf_NotCrtr();\\r\\nerror Crf_CSA(); /** cmp still active */\\r\\nerror Crf_DonF();\\r\\nerror Crf_RefF();\\r\\nerror Crf_PubF();\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  event UserAdded(\\r\\n    address indexed _address,\\r\\n    string _username,\\r\\n    string _twitter,\\r\\n    string _email,\\r\\n    string _homeAddress,\\r\\n    string _sig\\r\\n  );\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator,\\r\\n    string _title,\\r\\n    string _description,\\r\\n    string _category,\\r\\n    string[] _tags\\r\\n  );\\r\\n\\r\\n  event CampaignFunded(\\r\\n    address indexed _funder,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignShrunk(\\r\\n    address indexed _withdrawer,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignRemoved(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignPublished(\\r\\n    address _campaignAddress\\r\\n  );\\r\\n\\r\\n  uint256 public campaignCounter;\\r\\n  mapping (address => Campaign) private campaigns;\\r\\n\\r\\n  function addUser(\\r\\n    address _address, string memory _username, \\r\\n    string memory _twitter, string memory _email, \\r\\n    string memory _homeAddress,\\r\\n    string memory _sig\\r\\n    ) external {\\r\\n    emit UserAdded(_address, _username, _twitter, _email, _homeAddress, _sig);\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n    ) external {\\r\\n    Campaign newCampaign = new Campaign(\\r\\n      payable(msg.sender), _title, \\r\\n      _description, _category, \\r\\n      _tags, _goalAmount, \\r\\n      _duration, _imageURI\\r\\n    );\\r\\n    campaigns[address(newCampaign)] = newCampaign;\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender, _title, _description, _category, _tags);\\r\\n  }\\r\\n\\r\\n  function donateToCampaign (address _campaignAddress) external payable {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"donate()\\\"));\\r\\n    if(success){\\r\\n      emit CampaignFunded(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert Crf_DonF();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function refundFromCampaign(address _campaignAddress, address _donator) external {\\r\\n    (bool success,) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"refund(address)\\\", _donator));\\r\\n    if(success){\\r\\n      emit CampaignShrunk(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert Crf_RefF();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function removeCampaign (address _campaignAddress) external {\\r\\n    if(campaigns[_campaignAddress].i_creator() != msg.sender){revert Crf_NotCrtr();}\\r\\n    if(uint(campaigns[_campaignAddress].c_state()) == 0){revert Crf_CSA();}\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    emit CampaignRemoved(_campaignAddress);\\r\\n  }\\r\\n\\r\\n  function publishCampaign(address _campaignAddress, address _upkeepCreator, address _linkToken) external {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"timeBox(address,address)\\\", _upkeepCreator, _linkToken));\\r\\n    if(success){\\r\\n      campaignCounter = campaignCounter.add(1);\\r\\n      emit CampaignPublished(_campaignAddress);\\r\\n    }else{revert Crf_PubF();}\\r\\n  }\\r\\n\\r\\n  fallback() external payable{}\\r\\n  receive() external payable{}\\r\\n}\",\"keccak256\":\"0x022cf4f5a909e7923f83d8b01de7ab4aee767a76d7b02b9af2708cebe4b83908\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n// UpkeepIDConsumerExample.sol imports functions from both ./AutomationRegistryInterface2_0.sol and\\r\\n// ./interfaces/LinkTokenInterface.sol\\r\\n\\r\\nimport {AutomationRegistryInterface, State, OnchainConfig} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n/**\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\\r\\n * DO NOT USE THIS CODE IN PRODUCTION.\\r\\n */\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n    function register(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount,\\r\\n        address sender\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n    LinkTokenInterface public immutable i_link;\\r\\n    address public immutable registrar;\\r\\n    AutomationRegistryInterface public immutable i_registry;\\r\\n    bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n    constructor(\\r\\n        LinkTokenInterface _link,\\r\\n        address _registrar,\\r\\n        AutomationRegistryInterface _registry\\r\\n    ) {\\r\\n        i_link = _link;\\r\\n        registrar = _registrar;\\r\\n        i_registry = _registry;\\r\\n    }\\r\\n\\r\\n    function registerAndPredictID(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount\\r\\n    ) public returns(uint256) {\\r\\n        (State memory state, , , , ) = i_registry.getState();\\r\\n        uint256 oldNonce = state.nonce;\\r\\n        bytes memory payload = abi.encode(\\r\\n            name,\\r\\n            encryptedEmail,\\r\\n            upkeepContract,\\r\\n            gasLimit,\\r\\n            adminAddress,\\r\\n            checkData,\\r\\n            offchainConfig,\\r\\n            amount,\\r\\n            address(this)\\r\\n        );\\r\\n\\r\\n        i_link.transferAndCall(\\r\\n            registrar,\\r\\n            amount,\\r\\n            bytes.concat(registerSig, payload)\\r\\n        );\\r\\n        (state, , , , ) = i_registry.getState();\\r\\n        uint256 newNonce = state.nonce;\\r\\n        if (newNonce == oldNonce + 1) {\\r\\n            uint256 upkeepID = uint256(\\r\\n                keccak256(\\r\\n                    abi.encodePacked(\\r\\n                        blockhash(block.number - 1),\\r\\n                        address(i_registry),\\r\\n                        uint32(oldNonce)\\r\\n                    )\\r\\n                )\\r\\n            );\\r\\n            // DEV - Use the upkeepID however you see fit\\r\\n            return upkeepID;\\r\\n        } else {\\r\\n            revert(\\\"auto-approve disabled\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1712d2ac002e57e74e5367f9a88c9466f935fada95bd9ad98111e434110f0b3f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615f80806100206000396000f3fe6080604052600436106200007f5760003560e01c80637c6abc8211620000555780637c6abc821462000113578063e4663a5b1462000133578063fab62a1d1462000161578063fca604d7146200018f5762000087565b80631a702aa01462000089578063359c4f3214620000b757806353a0d46914620000e55762000087565b366200008757005b005b3480156200009657600080fd5b50620000b56004803603810190620000af919062000d4b565b620001bf565b005b348015620000c457600080fd5b50620000e36004803603810190620000dd919062000e82565b6200021f565b005b348015620000f257600080fd5b506200011160048036038101906200010b919062001000565b620003bb565b005b6200013160048036038101906200012b91906200114e565b620004fb565b005b3480156200014057600080fd5b506200015f60048036038101906200015991906200114e565b62000689565b005b3480156200016e57600080fd5b506200018d600480360381019062000187919062001180565b620009a8565b005b3480156200019c57600080fd5b50620001a762000b44565b604051620001b69190620011ed565b60405180910390f35b8573ffffffffffffffffffffffffffffffffffffffff167f8a71481c426e212d085148853642cbd73769f57ca8e2a96eca998197465ab41686868686866040516200020f9594939291906200129d565b60405180910390a2505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516024016200024b91906200132e565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002d7919062001398565b600060405180830381855af49150503d806000811462000314576040519150601f19603f3d011682016040523d82523d6000602084013e62000319565b606091505b50509050801562000384578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a3620003b6565b6040517fda3e747c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60003388888888888888604051620003d39062000b62565b620003e69897969594939291906200153e565b604051809103906000f08015801562000403573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f1d014b278ee6be3e751a1310048f07c2b430ab85e9b2e9d7057455ce04b6d51e8a8a8a8a604051620004e99493929190620015ef565b60405180910390a35050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620005a6919062001398565b600060405180830381855af49150503d8060008114620005e3576040519150601f19603f3d011682016040523d82523d6000602084013e620005e8565b606091505b50509050801562000653578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a362000685565b6040517f6bfd065c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200074657600080fd5b505afa1580156200075b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078191906200169d565b73ffffffffffffffffffffffffffffffffffffffff1614620007cf576040517f06256c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b1580156200087757600080fd5b505afa1580156200088c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b29190620016f7565b6002811115620008c757620008c662001729565b5b141562000900576040517fb2032d6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a250565b60008373ffffffffffffffffffffffffffffffffffffffff168383604051602401620009d692919062001758565b6040516020818303038152906040527f6d869814000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405162000a62919062001398565b600060405180830381855af49150503d806000811462000a9f576040519150601f19603f3d011682016040523d82523d6000602084013e62000aa4565b606091505b50509050801562000b0c5762000ac7600160005462000b4a90919063ffffffff16565b6000819055507f73e8189383ff7624bab72264727986ddc2467ca0c07220dd78ffbc46122ce0d48460405162000afe91906200132e565b60405180910390a162000b3e565b6040517f7f42f20d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60005481565b6000818362000b5a9190620017b4565b905092915050565b614739806200181283390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000bb18262000b84565b9050919050565b62000bc38162000ba4565b811462000bcf57600080fd5b50565b60008135905062000be38162000bb8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000c3e8262000bf3565b810181811067ffffffffffffffff8211171562000c605762000c5f62000c04565b5b80604052505050565b600062000c7562000b70565b905062000c83828262000c33565b919050565b600067ffffffffffffffff82111562000ca65762000ca562000c04565b5b62000cb18262000bf3565b9050602081019050919050565b82818337600083830152505050565b600062000ce462000cde8462000c88565b62000c69565b90508281526020810184848401111562000d035762000d0262000bee565b5b62000d1084828562000cbe565b509392505050565b600082601f83011262000d305762000d2f62000be9565b5b813562000d4284826020860162000ccd565b91505092915050565b60008060008060008060c0878903121562000d6b5762000d6a62000b7a565b5b600062000d7b89828a0162000bd2565b965050602087013567ffffffffffffffff81111562000d9f5762000d9e62000b7f565b5b62000dad89828a0162000d18565b955050604087013567ffffffffffffffff81111562000dd15762000dd062000b7f565b5b62000ddf89828a0162000d18565b945050606087013567ffffffffffffffff81111562000e035762000e0262000b7f565b5b62000e1189828a0162000d18565b935050608087013567ffffffffffffffff81111562000e355762000e3462000b7f565b5b62000e4389828a0162000d18565b92505060a087013567ffffffffffffffff81111562000e675762000e6662000b7f565b5b62000e7589828a0162000d18565b9150509295509295509295565b6000806040838503121562000e9c5762000e9b62000b7a565b5b600062000eac8582860162000bd2565b925050602062000ebf8582860162000bd2565b9150509250929050565b600067ffffffffffffffff82111562000ee75762000ee662000c04565b5b602082029050602081019050919050565b600080fd5b600062000f1462000f0e8462000ec9565b62000c69565b9050808382526020820190506020840283018581111562000f3a5762000f3962000ef8565b5b835b8181101562000f8857803567ffffffffffffffff81111562000f635762000f6262000be9565b5b80860162000f72898262000d18565b8552602085019450505060208101905062000f3c565b5050509392505050565b600082601f83011262000faa5762000fa962000be9565b5b813562000fbc84826020860162000efd565b91505092915050565b6000819050919050565b62000fda8162000fc5565b811462000fe657600080fd5b50565b60008135905062000ffa8162000fcf565b92915050565b600080600080600080600060e0888a03121562001022576200102162000b7a565b5b600088013567ffffffffffffffff81111562001043576200104262000b7f565b5b620010518a828b0162000d18565b975050602088013567ffffffffffffffff81111562001075576200107462000b7f565b5b620010838a828b0162000d18565b965050604088013567ffffffffffffffff811115620010a757620010a662000b7f565b5b620010b58a828b0162000d18565b955050606088013567ffffffffffffffff811115620010d957620010d862000b7f565b5b620010e78a828b0162000f92565b9450506080620010fa8a828b0162000fe9565b93505060a06200110d8a828b0162000fe9565b92505060c088013567ffffffffffffffff81111562001131576200113062000b7f565b5b6200113f8a828b0162000d18565b91505092959891949750929550565b60006020828403121562001167576200116662000b7a565b5b6000620011778482850162000bd2565b91505092915050565b6000806000606084860312156200119c576200119b62000b7a565b5b6000620011ac8682870162000bd2565b9350506020620011bf8682870162000bd2565b9250506040620011d28682870162000bd2565b9150509250925092565b620011e78162000fc5565b82525050565b6000602082019050620012046000830184620011dc565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200124657808201518184015260208101905062001229565b8381111562001256576000848401525b50505050565b600062001269826200120a565b62001275818562001215565b93506200128781856020860162001226565b620012928162000bf3565b840191505092915050565b600060a0820190508181036000830152620012b981886200125c565b90508181036020830152620012cf81876200125c565b90508181036040830152620012e581866200125c565b90508181036060830152620012fb81856200125c565b905081810360808301526200131181846200125c565b90509695505050505050565b620013288162000ba4565b82525050565b60006020820190506200134560008301846200131d565b92915050565b600081519050919050565b600081905092915050565b60006200136e826200134b565b6200137a818562001356565b93506200138c81856020860162001226565b80840191505092915050565b6000620013a6828462001361565b915081905092915050565b6000819050919050565b6000620013dc620013d6620013d08462000b84565b620013b1565b62000b84565b9050919050565b6000620013f082620013bb565b9050919050565b60006200140482620013e3565b9050919050565b6200141681620013f7565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600062001466826200120a565b62001472818562001448565b93506200148481856020860162001226565b6200148f8162000bf3565b840191505092915050565b6000620014a8838362001459565b905092915050565b6000602082019050919050565b6000620014ca826200141c565b620014d6818562001427565b935083602082028501620014ea8562001438565b8060005b858110156200152c57848403895281516200150a85826200149a565b94506200151783620014b0565b925060208a01995050600181019050620014ee565b50829750879550505050505092915050565b60006101008201905062001556600083018b6200140b565b81810360208301526200156a818a6200125c565b905081810360408301526200158081896200125c565b905081810360608301526200159681886200125c565b90508181036080830152620015ac8187620014bd565b9050620015bd60a0830186620011dc565b620015cc60c0830185620011dc565b81810360e0830152620015e081846200125c565b90509998505050505050505050565b600060808201905081810360008301526200160b81876200125c565b905081810360208301526200162181866200125c565b905081810360408301526200163781856200125c565b905081810360608301526200164d8184620014bd565b905095945050505050565b6000620016658262000b84565b9050919050565b620016778162001658565b81146200168357600080fd5b50565b60008151905062001697816200166c565b92915050565b600060208284031215620016b657620016b562000b7a565b5b6000620016c68482850162001686565b91505092915050565b60038110620016dd57600080fd5b50565b600081519050620016f181620016cf565b92915050565b60006020828403121562001710576200170f62000b7a565b5b60006200172084828501620016e0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006040820190506200176f60008301856200131d565b6200177e60208301846200131d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620017c18262000fc5565b9150620017ce8362000fc5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562001806576200180562001785565b5b82820190509291505056fe60c06040526000600a60006101000a81548160ff021916908360018111156200002d576200002c6200034a565b5b02179055506000600a60016101000a81548160ff021916908360028111156200005b576200005a6200034a565b5b02179055503480156200006d57600080fd5b5060405162004739380380620047398339818101604052810190620000939190620006b2565b8773ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508660009080519060200190620000e2929190620001c5565b508560019080519060200190620000fb929190620001c5565b50846002908051906020019062000114929190620001c5565b5083600590805190602001906200012d92919062000256565b50826006819055504260a08181525050624f1a0082116200014f578162000154565b624f1a005b6007819055506200017860075460a051620001ad60201b6200279f1790919060201c565b600981905550806003908051906020019062000196929190620001c5565b506000600881905550505050505050505062000907565b60008183620001bd919062000845565b905092915050565b828054620001d390620008d1565b90600052602060002090601f016020900481019282620001f7576000855562000243565b82601f106200021257805160ff191683800117855562000243565b8280016001018555821562000243579182015b828111156200024257825182559160200191906001019062000225565b5b509050620002529190620002bd565b5090565b828054828255906000526020600020908101928215620002aa579160200282015b82811115620002a957825182908051906020019062000298929190620001c5565b509160200191906001019062000277565b5b509050620002b99190620002dc565b5090565b5b80821115620002d8576000816000905550600101620002be565b5090565b5b80821115620003005760008181620002f6919062000304565b50600101620002dd565b5090565b5080546200031290620008d1565b6000825580601f1062000326575062000347565b601f016020900490600052602060002090810190620003469190620002bd565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ba826200038d565b9050919050565b620003cc81620003ad565b8114620003d857600080fd5b50565b600081519050620003ec81620003c1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200044782620003fc565b810181811067ffffffffffffffff821117156200046957620004686200040d565b5b80604052505050565b60006200047e62000379565b90506200048c82826200043c565b919050565b600067ffffffffffffffff821115620004af57620004ae6200040d565b5b620004ba82620003fc565b9050602081019050919050565b60005b83811015620004e7578082015181840152602081019050620004ca565b83811115620004f7576000848401525b50505050565b6000620005146200050e8462000491565b62000472565b905082815260208101848484011115620005335762000532620003f7565b5b62000540848285620004c7565b509392505050565b600082601f83011262000560576200055f620003f2565b5b815162000572848260208601620004fd565b91505092915050565b600067ffffffffffffffff8211156200059957620005986200040d565b5b602082029050602081019050919050565b600080fd5b6000620005c6620005c0846200057b565b62000472565b90508083825260208201905060208402830185811115620005ec57620005eb620005aa565b5b835b818110156200063a57805167ffffffffffffffff811115620006155762000614620003f2565b5b80860162000624898262000548565b85526020850194505050602081019050620005ee565b5050509392505050565b600082601f8301126200065c576200065b620003f2565b5b81516200066e848260208601620005af565b91505092915050565b6000819050919050565b6200068c8162000677565b81146200069857600080fd5b50565b600081519050620006ac8162000681565b92915050565b600080600080600080600080610100898b031215620006d657620006d562000383565b5b6000620006e68b828c01620003db565b985050602089015167ffffffffffffffff8111156200070a576200070962000388565b5b620007188b828c0162000548565b975050604089015167ffffffffffffffff8111156200073c576200073b62000388565b5b6200074a8b828c0162000548565b965050606089015167ffffffffffffffff8111156200076e576200076d62000388565b5b6200077c8b828c0162000548565b955050608089015167ffffffffffffffff811115620007a0576200079f62000388565b5b620007ae8b828c0162000644565b94505060a0620007c18b828c016200069b565b93505060c0620007d48b828c016200069b565b92505060e089015167ffffffffffffffff811115620007f857620007f762000388565b5b620008068b828c0162000548565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008528262000677565b91506200085f8362000677565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000897576200089662000816565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008ea57607f821691505b60208210811415620009015762000900620008a2565b5b50919050565b60805160601c60a051613dae6200098b60003960008181611bd001526124b001526000818161080e01528181610b020152818161152f0152818161169301528181611796015281816118470152818161193901528181611ab701528181611c6201528181611e530152818161200f0152818161211f01526123e20152613dae6000f3fe6080604052600436106101e75760003560e01c80636d86981411610102578063bf66e2c811610095578063ed88c68e11610064578063ed88c68e14610701578063f301af421461070b578063fa6ded391461074d578063fa89401a14610776576101f6565b8063bf66e2c814610657578063ce2a057214610682578063ce845d1d146106ad578063e7cf1ab7146106d8576101f6565b806395086ed1116100d157806395086ed11461059b57806399a8502d146105d85780639a91379314610603578063b145603e1461062c576101f6565b80636d869814146104f25780636e04ff0d1461051b57806371aac7f914610559578063743857cb14610570576101f6565b80634278ac8b1161017a57806360fa9a721161014957806360fa9a72146104365780636235887a1461046157806363bd1d4a1461049e57806369066ae9146104b5576101f6565b80634278ac8b1461038e5780634585e33b146103b95780634d695bdb146103e25780634ef897191461040b576101f6565b80631910bdc2116101b65780631910bdc2146102be5780631c4b774b146102fb5780632636b9451461033857806329dcb0cf14610363576101f6565b806309917c50146102005780630c611f241461023d5780630fb5a6b41461026857806315a46ee614610293576101f6565b366101f6576101f461079f565b005b6101fe61079f565b005b34801561020c57600080fd5b5061022760048036038101906102229190612ab6565b610ad4565b6040516102349190612afc565b60405180910390f35b34801561024957600080fd5b50610252610aec565b60405161025f9190612e2e565b60405180910390f35b34801561027457600080fd5b5061027d610f2d565b60405161028a9190612afc565b60405180910390f35b34801561029f57600080fd5b506102a8610f33565b6040516102b59190612e9a565b60405180910390f35b3480156102ca57600080fd5b506102e560048036038101906102e09190612ab6565b610fc1565b6040516102f29190612f6b565b60405180910390f35b34801561030757600080fd5b50610322600480360381019061031d9190612fb9565b611058565b60405161032f91906130c6565b60405180910390f35b34801561034457600080fd5b5061034d611395565b60405161035a9190612afc565b60405180910390f35b34801561036f57600080fd5b5061037861139b565b6040516103859190612afc565b60405180910390f35b34801561039a57600080fd5b506103a36113a1565b6040516103b09190612e9a565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db919061314d565b61142f565b005b3480156103ee57600080fd5b50610409600480360381019061040491906132ca565b61152d565b005b34801561041757600080fd5b506104206115cc565b60405161042d9190612e9a565b60405180910390f35b34801561044257600080fd5b5061044b61165a565b6040516104589190613322565b60405180910390f35b34801561046d57600080fd5b5061048860048036038101906104839190612fb9565b61166d565b6040516104959190612afc565b60405180910390f35b3480156104aa57600080fd5b506104b3611691565b005b3480156104c157600080fd5b506104dc60048036038101906104d79190612fb9565b61188b565b6040516104e99190612e9a565b60405180910390f35b3480156104fe57600080fd5b506105196004803603810190610514919061333d565b611937565b005b34801561052757600080fd5b50610542600480360381019061053d919061341e565b611b88565b6040516105509291906134cb565b60405180910390f35b34801561056557600080fd5b5061056e611c60565b005b34801561057c57600080fd5b50610585611d7f565b6040516105929190613543565b60405180910390f35b3480156105a757600080fd5b506105c260048036038101906105bd919061355e565b611d92565b6040516105cf9190612afc565b60405180910390f35b3480156105e457600080fd5b506105ed611dc3565b6040516105fa9190612e9a565b60405180910390f35b34801561060f57600080fd5b5061062a600480360381019061062591906136ab565b611e51565b005b34801561063857600080fd5b5061064161200d565b60405161064e91906137f2565b60405180910390f35b34801561066357600080fd5b5061066c612031565b6040516106799190612f6b565b60405180910390f35b34801561068e57600080fd5b50610697612089565b6040516106a49190612e9a565b60405180910390f35b3480156106b957600080fd5b506106c2612117565b6040516106cf9190612afc565b60405180910390f35b3480156106e457600080fd5b506106ff60048036038101906106fa9190612fb9565b61211d565b005b61070961079f565b005b34801561071757600080fd5b50610732600480360381019061072d9190612fb9565b612287565b6040516107449695949392919061380d565b60405180910390f35b34801561075957600080fd5b50610774600480360381019061076f9190612fb9565b6123e0565b005b34801561078257600080fd5b5061079d60048036038101906107989190612ab6565b6124e6565b005b600060028111156107b3576107b2612c90565b5b600a60019054906101000a900460ff1660028111156107d5576107d4612c90565b5b1461080c576040517faeb8874900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610892576040517f1e4a120d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a73460085461279f90919063ffffffff16565b6008819055506000600c6000348152602001908152602001600020600001541180156108f45750600c600034815260200190815260200160002060060160009054906101000a900460ff16155b156109c7576109236001600c6000348152602001908152602001600020600501546127b590919063ffffffff16565b506000600c60003481526020019081526020016000206005015414156109c657600c600034815260200190815260200160002060008082016000905560018201600061096f91906127cb565b60028201600061097f91906127cb565b60038201600061098f919061280b565b600482016000905560058201600090556006820160006101000a81549060ff02191690556007820160006109c3919061280b565b50505b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020349080600181540180825580915050600190039060005260206000200160009091909190915055610a7f34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461279f90919063ffffffff16565b503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051610aca92919061387c565b60405180910390a2565b600e6020528060005260406000206000915090505481565b610af461282c565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200160008054610b49906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b75906138d4565b8015610bc25780601f10610b9757610100808354040283529160200191610bc2565b820191906000526020600020905b815481529060010190602001808311610ba557829003601f168201915b5050505050815260200160018054610bd9906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c05906138d4565b8015610c525780601f10610c2757610100808354040283529160200191610c52565b820191906000526020600020905b815481529060010190602001808311610c3557829003601f168201915b5050505050815260200160028054610c69906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c95906138d4565b8015610ce25780601f10610cb757610100808354040283529160200191610ce2565b820191906000526020600020905b815481529060010190602001808311610cc557829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b82821015610dba578382906000526020600020018054610d2d906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d59906138d4565b8015610da65780601f10610d7b57610100808354040283529160200191610da6565b820191906000526020600020905b815481529060010190602001808311610d8957829003601f168201915b505050505081526020019060010190610d0e565b505050508152602001600654815260200160075481526020016008548152602001600a60019054906101000a900460ff166002811115610dfd57610dfc612c90565b5b815260200160038054610e0f906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3b906138d4565b8015610e885780601f10610e5d57610100808354040283529160200191610e88565b820191906000526020600020905b815481529060010190602001808311610e6b57829003601f168201915b5050505050815260200160048054610e9f906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecb906138d4565b8015610f185780601f10610eed57610100808354040283529160200191610f18565b820191906000526020600020905b815481529060010190602001808311610efb57829003601f168201915b50505050508152602001600954815250905090565b60075481565b60048054610f40906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6c906138d4565b8015610fb95780601f10610f8e57610100808354040283529160200191610fb9565b820191906000526020600020905b815481529060010190602001808311610f9c57829003601f168201915b505050505081565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561104c57602002820191906000526020600020905b815481526020019060010190808311611038575b50505050509050919050565b6110606128b5565b600c60008381526020019081526020016000206040518061010001604052908160008201548152602001600182018054611099906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546110c5906138d4565b80156111125780601f106110e757610100808354040283529160200191611112565b820191906000526020600020905b8154815290600101906020018083116110f557829003601f168201915b5050505050815260200160028201805461112b906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611157906138d4565b80156111a45780601f10611179576101008083540402835291602001916111a4565b820191906000526020600020905b81548152906001019060200180831161118757829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561127e5783829060005260206000200180546111f1906138d4565b80601f016020809104026020016040519081016040528092919081815260200182805461121d906138d4565b801561126a5780601f1061123f5761010080835404028352916020019161126a565b820191906000526020600020905b81548152906001019060200180831161124d57829003601f168201915b5050505050815260200190600101906111d2565b50505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156113865783829060005260206000200180546112f9906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611325906138d4565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b5050505050815260200190600101906112da565b50505050815250509050919050565b60065481565b60095481565b600280546113ae906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546113da906138d4565b80156114275780601f106113fc57610100808354040283529160200191611427565b820191906000526020600020905b81548152906001019060200180831161140a57829003601f168201915b505050505081565b600061144960405180602001604052806000815250611b88565b50905080611483576040517fbc7a0a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60016101000a81548160ff021916908360028111156114a9576114a8612c90565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516114dd9190613915565b60405180910390a160065460085410611528577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc3060405161151f9190613915565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b2576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600490805190602001906115c89291906128fc565b5050565b600180546115d9906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611605906138d4565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b505050505081565b600a60019054906101000a900460ff1681565b600f818154811061167d57600080fd5b906000526020600020016000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611716576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561172a57611729612c90565b5b600a60019054906101000a900460ff16600281111561174c5761174b612c90565b5b14611783576040517faeb8874900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516117d890613961565b60006040518083038185875af1925050503d8060008114611815576040519150601f19603f3d011682016040523d82523d6000602084013e61181a565b606091505b505090508015611882577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516118759291906139d5565b60405180910390a1611887565b600080fd5b5050565b6005818154811061189b57600080fd5b9060005260206000200160009150905080546118b6906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546118e2906138d4565b801561192f5780601f106119045761010080835404028352916020019161192f565b820191906000526020600020905b81548152906001019060200180831161191257829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119bc576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000829050600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401611a019190613915565b60206040518083038186803b158015611a1957600080fd5b505afa158015611a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a519190613a13565b1415611a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8990613a8c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16634c7e9be36000306207a1207f0000000000000000000000000000000000000000000000000000000000000000671bc16d674ec800006040518663ffffffff1660e01b8152600401611aff959493929190613c2b565b602060405180830381600087803b158015611b1957600080fd5b505af1158015611b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b519190613a13565b600b819055506001600a60006101000a81548160ff02191690836001811115611b7d57611b7c612c90565b5b021790555050505050565b600060606000806002811115611ba157611ba0612c90565b5b600a60019054906101000a900460ff166002811115611bc357611bc2612c90565b5b1490506000600754611bfe7f0000000000000000000000000000000000000000000000000000000000000000426127b590919063ffffffff16565b11905060008047119050818015611c125750825b8015611c1b5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ce5576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002811115611cf957611cf8612c90565b5b600a60019054906101000a900460ff166002811115611d1b57611d1a612c90565b5b1415611d2657600080fd5b6002600a60016101000a81548160ff02191690836002811115611d4c57611d4b612c90565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600a60009054906101000a900460ff1681565b600d6020528160005260406000208181548110611dae57600080fd5b90600052602060002001600091509150505481565b60008054611dd0906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611dfc906138d4565b8015611e495780601f10611e1e57610100808354040283529160200191611e49565b820191906000526020600020905b815481529060010190602001808311611e2c57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ed6576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f889080600181540180825580915050600190039060005260206000200160009091909190915055604051806101000160405280898152602001888152602001878152602001868152602001858152602001848152602001831515815260200182815250600c60008a8152602001908152602001600020600082015181600001556020820151816001019080519060200190611f749291906128fc565b506040820151816002019080519060200190611f919291906128fc565b506060820151816003019080519060200190611fae929190612982565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e0820151816007019080519060200190611fff929190612982565b509050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600f80548060200260200160405190810160405280929190818152602001828054801561207f57602002820191906000526020600020905b81548152602001906001019080831161206b575b5050505050905090565b60038054612096906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546120c2906138d4565b801561210f5780601f106120e45761010080835404028352916020019161210f565b820191906000526020600020905b8154815290600101906020018083116120f257829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146121a2576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156121b6576121b5612c90565b5b600a60009054906101000a900460ff1660018111156121d8576121d7612c90565b5b146121e257600080fd5b6000600c600083815260200190815260200160002060000154111561228457600c600082815260200190815260200160002060008082016000905560018201600061222d91906127cb565b60028201600061223d91906127cb565b60038201600061224d919061280b565b600482016000905560058201600090556006820160006101000a81549060ff0219169055600782016000612281919061280b565b50505b50565b600c6020528060005260406000206000915090508060000154908060010180546122b0906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546122dc906138d4565b80156123295780601f106122fe57610100808354040283529160200191612329565b820191906000526020600020905b81548152906001019060200180831161230c57829003601f168201915b50505050509080600201805461233e906138d4565b80601f016020809104026020016040519081016040528092919081815260200182805461236a906138d4565b80156123b75780601f1061238c576101008083540402835291602001916123b7565b820191906000526020600020905b81548152906001019060200180831161239a57829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16905086565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612465576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b624f1a0061247e8260075461279f90919063ffffffff16565b1161249d576124988160075461279f90919063ffffffff16565b6124a2565b624f1a005b6007819055506124dd6007547f000000000000000000000000000000000000000000000000000000000000000061279f90919063ffffffff16565b60098190555050565b600160028111156124fa576124f9612c90565b5b600a60019054906101000a900460ff16600281111561251c5761251b612c90565b5b1415612554576040517faeb8874900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156125ce576040517f4cc8b68700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061265d91906129e2565b600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558060085410156126dc576040517f4d83c95000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126f1816008546127b590919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161271d90613961565b60006040518083038185875af1925050503d806000811461275a576040519150601f19603f3d011682016040523d82523d6000602084013e61275f565b606091505b505090508061279a576040517f0520edd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600081836127ad9190613cee565b905092915050565b600081836127c39190613d44565b905092915050565b5080546127d7906138d4565b6000825580601f106127e95750612808565b601f0160209004906000526020600020908101906128079190612a03565b5b50565b50805460008255906000526020600020908101906128299190612a20565b50565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000600281111561289a57612899612c90565b5b81526020016060815260200160608152602001600081525090565b604051806101000160405280600081526020016060815260200160608152602001606081526020016000815260200160008152602001600015158152602001606081525090565b828054612908906138d4565b90600052602060002090601f01602090048101928261292a5760008555612971565b82601f1061294357805160ff1916838001178555612971565b82800160010185558215612971579182015b82811115612970578251825591602001919060010190612955565b5b50905061297e9190612a03565b5090565b8280548282559060005260206000209081019282156129d1579160200282015b828111156129d05782518290805190602001906129c09291906128fc565b50916020019190600101906129a2565b5b5090506129de9190612a20565b5090565b5080546000825590600052602060002090810190612a009190612a03565b50565b5b80821115612a1c576000816000905550600101612a04565b5090565b5b80821115612a405760008181612a3791906127cb565b50600101612a21565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a8382612a58565b9050919050565b612a9381612a78565b8114612a9e57600080fd5b50565b600081359050612ab081612a8a565b92915050565b600060208284031215612acc57612acb612a4e565b5b6000612ada84828501612aa1565b91505092915050565b6000819050919050565b612af681612ae3565b82525050565b6000602082019050612b116000830184612aed565b92915050565b612b2081612a78565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612b60578082015181840152602081019050612b45565b83811115612b6f576000848401525b50505050565b6000601f19601f8301169050919050565b6000612b9182612b26565b612b9b8185612b31565b9350612bab818560208601612b42565b612bb481612b75565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612bf78383612b86565b905092915050565b6000602082019050919050565b6000612c1782612bbf565b612c218185612bca565b935083602082028501612c3385612bdb565b8060005b85811015612c6f5784840389528151612c508582612beb565b9450612c5b83612bff565b925060208a01995050600181019050612c37565b50829750879550505050505092915050565b612c8a81612ae3565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612cd057612ccf612c90565b5b50565b6000819050612ce182612cbf565b919050565b6000612cf182612cd3565b9050919050565b612d0181612ce6565b82525050565b600061018083016000830151612d206000860182612b17565b5060208301518482036020860152612d388282612b86565b91505060408301518482036040860152612d528282612b86565b91505060608301518482036060860152612d6c8282612b86565b91505060808301518482036080860152612d868282612c0c565b91505060a0830151612d9b60a0860182612c81565b5060c0830151612dae60c0860182612c81565b5060e0830151612dc160e0860182612c81565b50610100830151612dd6610100860182612cf8565b50610120830151848203610120860152612df08282612b86565b915050610140830151848203610140860152612e0c8282612b86565b915050610160830151612e23610160860182612c81565b508091505092915050565b60006020820190508181036000830152612e488184612d07565b905092915050565b600082825260208201905092915050565b6000612e6c82612b26565b612e768185612e50565b9350612e86818560208601612b42565b612e8f81612b75565b840191505092915050565b60006020820190508181036000830152612eb48184612e61565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612ef48383612c81565b60208301905092915050565b6000602082019050919050565b6000612f1882612ebc565b612f228185612ec7565b9350612f2d83612ed8565b8060005b83811015612f5e578151612f458882612ee8565b9750612f5083612f00565b925050600181019050612f31565b5085935050505092915050565b60006020820190508181036000830152612f858184612f0d565b905092915050565b612f9681612ae3565b8114612fa157600080fd5b50565b600081359050612fb381612f8d565b92915050565b600060208284031215612fcf57612fce612a4e565b5b6000612fdd84828501612fa4565b91505092915050565b60008115159050919050565b612ffb81612fe6565b82525050565b60006101008301600083015161301a6000860182612c81565b50602083015184820360208601526130328282612b86565b9150506040830151848203604086015261304c8282612b86565b915050606083015184820360608601526130668282612c0c565b915050608083015161307b6080860182612c81565b5060a083015161308e60a0860182612c81565b5060c08301516130a160c0860182612ff2565b5060e083015184820360e08601526130b98282612c0c565b9150508091505092915050565b600060208201905081810360008301526130e08184613001565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261310d5761310c6130e8565b5b8235905067ffffffffffffffff81111561312a576131296130ed565b5b602083019150836001820283011115613146576131456130f2565b5b9250929050565b6000806020838503121561316457613163612a4e565b5b600083013567ffffffffffffffff81111561318257613181612a53565b5b61318e858286016130f7565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131d782612b75565b810181811067ffffffffffffffff821117156131f6576131f561319f565b5b80604052505050565b6000613209612a44565b905061321582826131ce565b919050565b600067ffffffffffffffff8211156132355761323461319f565b5b61323e82612b75565b9050602081019050919050565b82818337600083830152505050565b600061326d6132688461321a565b6131ff565b9050828152602081018484840111156132895761328861319a565b5b61329484828561324b565b509392505050565b600082601f8301126132b1576132b06130e8565b5b81356132c184826020860161325a565b91505092915050565b6000602082840312156132e0576132df612a4e565b5b600082013567ffffffffffffffff8111156132fe576132fd612a53565b5b61330a8482850161329c565b91505092915050565b61331c81612ce6565b82525050565b60006020820190506133376000830184613313565b92915050565b6000806040838503121561335457613353612a4e565b5b600061336285828601612aa1565b925050602061337385828601612aa1565b9150509250929050565b600067ffffffffffffffff8211156133985761339761319f565b5b6133a182612b75565b9050602081019050919050565b60006133c16133bc8461337d565b6131ff565b9050828152602081018484840111156133dd576133dc61319a565b5b6133e884828561324b565b509392505050565b600082601f830112613405576134046130e8565b5b81356134158482602086016133ae565b91505092915050565b60006020828403121561343457613433612a4e565b5b600082013567ffffffffffffffff81111561345257613451612a53565b5b61345e848285016133f0565b91505092915050565b61347081612fe6565b82525050565b600081519050919050565b600082825260208201905092915050565b600061349d82613476565b6134a78185613481565b93506134b7818560208601612b42565b6134c081612b75565b840191505092915050565b60006040820190506134e06000830185613467565b81810360208301526134f28184613492565b90509392505050565b6002811061350c5761350b612c90565b5b50565b600081905061351d826134fb565b919050565b600061352d8261350f565b9050919050565b61353d81613522565b82525050565b60006020820190506135586000830184613534565b92915050565b6000806040838503121561357557613574612a4e565b5b600061358385828601612aa1565b925050602061359485828601612fa4565b9150509250929050565b600067ffffffffffffffff8211156135b9576135b861319f565b5b602082029050602081019050919050565b60006135dd6135d88461359e565b6131ff565b90508083825260208201905060208402830185811115613600576135ff6130f2565b5b835b8181101561364757803567ffffffffffffffff811115613625576136246130e8565b5b808601613632898261329c565b85526020850194505050602081019050613602565b5050509392505050565b600082601f830112613666576136656130e8565b5b81356136768482602086016135ca565b91505092915050565b61368881612fe6565b811461369357600080fd5b50565b6000813590506136a58161367f565b92915050565b600080600080600080600080610100898b0312156136cc576136cb612a4e565b5b60006136da8b828c01612fa4565b985050602089013567ffffffffffffffff8111156136fb576136fa612a53565b5b6137078b828c0161329c565b975050604089013567ffffffffffffffff81111561372857613727612a53565b5b6137348b828c0161329c565b965050606089013567ffffffffffffffff81111561375557613754612a53565b5b6137618b828c01613651565b95505060806137728b828c01612fa4565b94505060a06137838b828c01612fa4565b93505060c06137948b828c01613696565b92505060e089013567ffffffffffffffff8111156137b5576137b4612a53565b5b6137c18b828c01613651565b9150509295985092959890939650565b60006137dc82612a58565b9050919050565b6137ec816137d1565b82525050565b600060208201905061380760008301846137e3565b92915050565b600060c0820190506138226000830189612aed565b81810360208301526138348188612e61565b905081810360408301526138488187612e61565b90506138576060830186612aed565b6138646080830185612aed565b61387160a0830184613467565b979650505050505050565b60006040820190506138916000830185612aed565b61389e6020830184612aed565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806138ec57607f821691505b60208210811415613900576138ff6138a5565b5b50919050565b61390f81612a78565b82525050565b600060208201905061392a6000830184613906565b92915050565b600081905092915050565b50565b600061394b600083613930565b91506139568261393b565b600082019050919050565b600061396c8261393e565b9150819050919050565b6000819050919050565b600061399b61399661399184612a58565b613976565b612a58565b9050919050565b60006139ad82613980565b9050919050565b60006139bf826139a2565b9050919050565b6139cf816139b4565b82525050565b60006040820190506139ea60008301856139c6565b6139f76020830184613906565b9392505050565b600081519050613a0d81612f8d565b92915050565b600060208284031215613a2957613a28612a4e565b5b6000613a37848285016139fe565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b6000613a76600883612e50565b9150613a8182613a40565b602082019050919050565b60006020820190508181036000830152613aa581613a69565b9050919050565b60008190508160005260206000209050919050565b60008154613ace816138d4565b613ad88186612e50565b94506001821660008114613af35760018114613b0557613b38565b60ff1983168652602086019350613b38565b613b0e85613aac565b60005b83811015613b3057815481890152600182019150602081019050613b11565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000613b77600283613481565b9150613b8282613b41565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000613bc2613bbd613bb884613b8d565b613976565b613b97565b9050919050565b613bd281613ba7565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000613c15613c10613c0b84613bd8565b613976565b613be2565b9050919050565b613c2581613bfa565b82525050565b6000610100820190508181036000830152613c468188613ac1565b90508181036020830152613c5981613b6a565b9050613c686040830187613906565b613c756060830186613bc9565b613c8260808301856139c6565b81810360a0830152613c9381613b6a565b905081810360c0830152613ca681613b6a565b9050613cb560e0830184613c1c565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613cf982612ae3565b9150613d0483612ae3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613d3957613d38613cbf565b5b828201905092915050565b6000613d4f82612ae3565b9150613d5a83612ae3565b925082821015613d6d57613d6c613cbf565b5b82820390509291505056fea2646970667358221220c4f3a59e2d76c686f767f68cc22b4407f3be9937ba230436c35e7e8358b85afe64736f6c63430008080033a26469706673582212205351cedab50ee7d3503c10e521c937f6ec2bebe2c5aaf80b6196d6c042c734c764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106200007f5760003560e01c80637c6abc8211620000555780637c6abc821462000113578063e4663a5b1462000133578063fab62a1d1462000161578063fca604d7146200018f5762000087565b80631a702aa01462000089578063359c4f3214620000b757806353a0d46914620000e55762000087565b366200008757005b005b3480156200009657600080fd5b50620000b56004803603810190620000af919062000d4b565b620001bf565b005b348015620000c457600080fd5b50620000e36004803603810190620000dd919062000e82565b6200021f565b005b348015620000f257600080fd5b506200011160048036038101906200010b919062001000565b620003bb565b005b6200013160048036038101906200012b91906200114e565b620004fb565b005b3480156200014057600080fd5b506200015f60048036038101906200015991906200114e565b62000689565b005b3480156200016e57600080fd5b506200018d600480360381019062000187919062001180565b620009a8565b005b3480156200019c57600080fd5b50620001a762000b44565b604051620001b69190620011ed565b60405180910390f35b8573ffffffffffffffffffffffffffffffffffffffff167f8a71481c426e212d085148853642cbd73769f57ca8e2a96eca998197465ab41686868686866040516200020f9594939291906200129d565b60405180910390a2505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516024016200024b91906200132e565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002d7919062001398565b600060405180830381855af49150503d806000811462000314576040519150601f19603f3d011682016040523d82523d6000602084013e62000319565b606091505b50509050801562000384578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a3620003b6565b6040517fda3e747c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60003388888888888888604051620003d39062000b62565b620003e69897969594939291906200153e565b604051809103906000f08015801562000403573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f1d014b278ee6be3e751a1310048f07c2b430ab85e9b2e9d7057455ce04b6d51e8a8a8a8a604051620004e99493929190620015ef565b60405180910390a35050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620005a6919062001398565b600060405180830381855af49150503d8060008114620005e3576040519150601f19603f3d011682016040523d82523d6000602084013e620005e8565b606091505b50509050801562000653578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a362000685565b6040517f6bfd065c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200074657600080fd5b505afa1580156200075b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078191906200169d565b73ffffffffffffffffffffffffffffffffffffffff1614620007cf576040517f06256c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b1580156200087757600080fd5b505afa1580156200088c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b29190620016f7565b6002811115620008c757620008c662001729565b5b141562000900576040517fb2032d6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a250565b60008373ffffffffffffffffffffffffffffffffffffffff168383604051602401620009d692919062001758565b6040516020818303038152906040527f6d869814000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405162000a62919062001398565b600060405180830381855af49150503d806000811462000a9f576040519150601f19603f3d011682016040523d82523d6000602084013e62000aa4565b606091505b50509050801562000b0c5762000ac7600160005462000b4a90919063ffffffff16565b6000819055507f73e8189383ff7624bab72264727986ddc2467ca0c07220dd78ffbc46122ce0d48460405162000afe91906200132e565b60405180910390a162000b3e565b6040517f7f42f20d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60005481565b6000818362000b5a9190620017b4565b905092915050565b614739806200181283390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000bb18262000b84565b9050919050565b62000bc38162000ba4565b811462000bcf57600080fd5b50565b60008135905062000be38162000bb8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000c3e8262000bf3565b810181811067ffffffffffffffff8211171562000c605762000c5f62000c04565b5b80604052505050565b600062000c7562000b70565b905062000c83828262000c33565b919050565b600067ffffffffffffffff82111562000ca65762000ca562000c04565b5b62000cb18262000bf3565b9050602081019050919050565b82818337600083830152505050565b600062000ce462000cde8462000c88565b62000c69565b90508281526020810184848401111562000d035762000d0262000bee565b5b62000d1084828562000cbe565b509392505050565b600082601f83011262000d305762000d2f62000be9565b5b813562000d4284826020860162000ccd565b91505092915050565b60008060008060008060c0878903121562000d6b5762000d6a62000b7a565b5b600062000d7b89828a0162000bd2565b965050602087013567ffffffffffffffff81111562000d9f5762000d9e62000b7f565b5b62000dad89828a0162000d18565b955050604087013567ffffffffffffffff81111562000dd15762000dd062000b7f565b5b62000ddf89828a0162000d18565b945050606087013567ffffffffffffffff81111562000e035762000e0262000b7f565b5b62000e1189828a0162000d18565b935050608087013567ffffffffffffffff81111562000e355762000e3462000b7f565b5b62000e4389828a0162000d18565b92505060a087013567ffffffffffffffff81111562000e675762000e6662000b7f565b5b62000e7589828a0162000d18565b9150509295509295509295565b6000806040838503121562000e9c5762000e9b62000b7a565b5b600062000eac8582860162000bd2565b925050602062000ebf8582860162000bd2565b9150509250929050565b600067ffffffffffffffff82111562000ee75762000ee662000c04565b5b602082029050602081019050919050565b600080fd5b600062000f1462000f0e8462000ec9565b62000c69565b9050808382526020820190506020840283018581111562000f3a5762000f3962000ef8565b5b835b8181101562000f8857803567ffffffffffffffff81111562000f635762000f6262000be9565b5b80860162000f72898262000d18565b8552602085019450505060208101905062000f3c565b5050509392505050565b600082601f83011262000faa5762000fa962000be9565b5b813562000fbc84826020860162000efd565b91505092915050565b6000819050919050565b62000fda8162000fc5565b811462000fe657600080fd5b50565b60008135905062000ffa8162000fcf565b92915050565b600080600080600080600060e0888a03121562001022576200102162000b7a565b5b600088013567ffffffffffffffff81111562001043576200104262000b7f565b5b620010518a828b0162000d18565b975050602088013567ffffffffffffffff81111562001075576200107462000b7f565b5b620010838a828b0162000d18565b965050604088013567ffffffffffffffff811115620010a757620010a662000b7f565b5b620010b58a828b0162000d18565b955050606088013567ffffffffffffffff811115620010d957620010d862000b7f565b5b620010e78a828b0162000f92565b9450506080620010fa8a828b0162000fe9565b93505060a06200110d8a828b0162000fe9565b92505060c088013567ffffffffffffffff81111562001131576200113062000b7f565b5b6200113f8a828b0162000d18565b91505092959891949750929550565b60006020828403121562001167576200116662000b7a565b5b6000620011778482850162000bd2565b91505092915050565b6000806000606084860312156200119c576200119b62000b7a565b5b6000620011ac8682870162000bd2565b9350506020620011bf8682870162000bd2565b9250506040620011d28682870162000bd2565b9150509250925092565b620011e78162000fc5565b82525050565b6000602082019050620012046000830184620011dc565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200124657808201518184015260208101905062001229565b8381111562001256576000848401525b50505050565b600062001269826200120a565b62001275818562001215565b93506200128781856020860162001226565b620012928162000bf3565b840191505092915050565b600060a0820190508181036000830152620012b981886200125c565b90508181036020830152620012cf81876200125c565b90508181036040830152620012e581866200125c565b90508181036060830152620012fb81856200125c565b905081810360808301526200131181846200125c565b90509695505050505050565b620013288162000ba4565b82525050565b60006020820190506200134560008301846200131d565b92915050565b600081519050919050565b600081905092915050565b60006200136e826200134b565b6200137a818562001356565b93506200138c81856020860162001226565b80840191505092915050565b6000620013a6828462001361565b915081905092915050565b6000819050919050565b6000620013dc620013d6620013d08462000b84565b620013b1565b62000b84565b9050919050565b6000620013f082620013bb565b9050919050565b60006200140482620013e3565b9050919050565b6200141681620013f7565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600062001466826200120a565b62001472818562001448565b93506200148481856020860162001226565b6200148f8162000bf3565b840191505092915050565b6000620014a8838362001459565b905092915050565b6000602082019050919050565b6000620014ca826200141c565b620014d6818562001427565b935083602082028501620014ea8562001438565b8060005b858110156200152c57848403895281516200150a85826200149a565b94506200151783620014b0565b925060208a01995050600181019050620014ee565b50829750879550505050505092915050565b60006101008201905062001556600083018b6200140b565b81810360208301526200156a818a6200125c565b905081810360408301526200158081896200125c565b905081810360608301526200159681886200125c565b90508181036080830152620015ac8187620014bd565b9050620015bd60a0830186620011dc565b620015cc60c0830185620011dc565b81810360e0830152620015e081846200125c565b90509998505050505050505050565b600060808201905081810360008301526200160b81876200125c565b905081810360208301526200162181866200125c565b905081810360408301526200163781856200125c565b905081810360608301526200164d8184620014bd565b905095945050505050565b6000620016658262000b84565b9050919050565b620016778162001658565b81146200168357600080fd5b50565b60008151905062001697816200166c565b92915050565b600060208284031215620016b657620016b562000b7a565b5b6000620016c68482850162001686565b91505092915050565b60038110620016dd57600080fd5b50565b600081519050620016f181620016cf565b92915050565b60006020828403121562001710576200170f62000b7a565b5b60006200172084828501620016e0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006040820190506200176f60008301856200131d565b6200177e60208301846200131d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620017c18262000fc5565b9150620017ce8362000fc5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562001806576200180562001785565b5b82820190509291505056fe60c06040526000600a60006101000a81548160ff021916908360018111156200002d576200002c6200034a565b5b02179055506000600a60016101000a81548160ff021916908360028111156200005b576200005a6200034a565b5b02179055503480156200006d57600080fd5b5060405162004739380380620047398339818101604052810190620000939190620006b2565b8773ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508660009080519060200190620000e2929190620001c5565b508560019080519060200190620000fb929190620001c5565b50846002908051906020019062000114929190620001c5565b5083600590805190602001906200012d92919062000256565b50826006819055504260a08181525050624f1a0082116200014f578162000154565b624f1a005b6007819055506200017860075460a051620001ad60201b6200279f1790919060201c565b600981905550806003908051906020019062000196929190620001c5565b506000600881905550505050505050505062000907565b60008183620001bd919062000845565b905092915050565b828054620001d390620008d1565b90600052602060002090601f016020900481019282620001f7576000855562000243565b82601f106200021257805160ff191683800117855562000243565b8280016001018555821562000243579182015b828111156200024257825182559160200191906001019062000225565b5b509050620002529190620002bd565b5090565b828054828255906000526020600020908101928215620002aa579160200282015b82811115620002a957825182908051906020019062000298929190620001c5565b509160200191906001019062000277565b5b509050620002b99190620002dc565b5090565b5b80821115620002d8576000816000905550600101620002be565b5090565b5b80821115620003005760008181620002f6919062000304565b50600101620002dd565b5090565b5080546200031290620008d1565b6000825580601f1062000326575062000347565b601f016020900490600052602060002090810190620003469190620002bd565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ba826200038d565b9050919050565b620003cc81620003ad565b8114620003d857600080fd5b50565b600081519050620003ec81620003c1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200044782620003fc565b810181811067ffffffffffffffff821117156200046957620004686200040d565b5b80604052505050565b60006200047e62000379565b90506200048c82826200043c565b919050565b600067ffffffffffffffff821115620004af57620004ae6200040d565b5b620004ba82620003fc565b9050602081019050919050565b60005b83811015620004e7578082015181840152602081019050620004ca565b83811115620004f7576000848401525b50505050565b6000620005146200050e8462000491565b62000472565b905082815260208101848484011115620005335762000532620003f7565b5b62000540848285620004c7565b509392505050565b600082601f83011262000560576200055f620003f2565b5b815162000572848260208601620004fd565b91505092915050565b600067ffffffffffffffff8211156200059957620005986200040d565b5b602082029050602081019050919050565b600080fd5b6000620005c6620005c0846200057b565b62000472565b90508083825260208201905060208402830185811115620005ec57620005eb620005aa565b5b835b818110156200063a57805167ffffffffffffffff811115620006155762000614620003f2565b5b80860162000624898262000548565b85526020850194505050602081019050620005ee565b5050509392505050565b600082601f8301126200065c576200065b620003f2565b5b81516200066e848260208601620005af565b91505092915050565b6000819050919050565b6200068c8162000677565b81146200069857600080fd5b50565b600081519050620006ac8162000681565b92915050565b600080600080600080600080610100898b031215620006d657620006d562000383565b5b6000620006e68b828c01620003db565b985050602089015167ffffffffffffffff8111156200070a576200070962000388565b5b620007188b828c0162000548565b975050604089015167ffffffffffffffff8111156200073c576200073b62000388565b5b6200074a8b828c0162000548565b965050606089015167ffffffffffffffff8111156200076e576200076d62000388565b5b6200077c8b828c0162000548565b955050608089015167ffffffffffffffff811115620007a0576200079f62000388565b5b620007ae8b828c0162000644565b94505060a0620007c18b828c016200069b565b93505060c0620007d48b828c016200069b565b92505060e089015167ffffffffffffffff811115620007f857620007f762000388565b5b620008068b828c0162000548565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008528262000677565b91506200085f8362000677565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000897576200089662000816565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008ea57607f821691505b60208210811415620009015762000900620008a2565b5b50919050565b60805160601c60a051613dae6200098b60003960008181611bd001526124b001526000818161080e01528181610b020152818161152f0152818161169301528181611796015281816118470152818161193901528181611ab701528181611c6201528181611e530152818161200f0152818161211f01526123e20152613dae6000f3fe6080604052600436106101e75760003560e01c80636d86981411610102578063bf66e2c811610095578063ed88c68e11610064578063ed88c68e14610701578063f301af421461070b578063fa6ded391461074d578063fa89401a14610776576101f6565b8063bf66e2c814610657578063ce2a057214610682578063ce845d1d146106ad578063e7cf1ab7146106d8576101f6565b806395086ed1116100d157806395086ed11461059b57806399a8502d146105d85780639a91379314610603578063b145603e1461062c576101f6565b80636d869814146104f25780636e04ff0d1461051b57806371aac7f914610559578063743857cb14610570576101f6565b80634278ac8b1161017a57806360fa9a721161014957806360fa9a72146104365780636235887a1461046157806363bd1d4a1461049e57806369066ae9146104b5576101f6565b80634278ac8b1461038e5780634585e33b146103b95780634d695bdb146103e25780634ef897191461040b576101f6565b80631910bdc2116101b65780631910bdc2146102be5780631c4b774b146102fb5780632636b9451461033857806329dcb0cf14610363576101f6565b806309917c50146102005780630c611f241461023d5780630fb5a6b41461026857806315a46ee614610293576101f6565b366101f6576101f461079f565b005b6101fe61079f565b005b34801561020c57600080fd5b5061022760048036038101906102229190612ab6565b610ad4565b6040516102349190612afc565b60405180910390f35b34801561024957600080fd5b50610252610aec565b60405161025f9190612e2e565b60405180910390f35b34801561027457600080fd5b5061027d610f2d565b60405161028a9190612afc565b60405180910390f35b34801561029f57600080fd5b506102a8610f33565b6040516102b59190612e9a565b60405180910390f35b3480156102ca57600080fd5b506102e560048036038101906102e09190612ab6565b610fc1565b6040516102f29190612f6b565b60405180910390f35b34801561030757600080fd5b50610322600480360381019061031d9190612fb9565b611058565b60405161032f91906130c6565b60405180910390f35b34801561034457600080fd5b5061034d611395565b60405161035a9190612afc565b60405180910390f35b34801561036f57600080fd5b5061037861139b565b6040516103859190612afc565b60405180910390f35b34801561039a57600080fd5b506103a36113a1565b6040516103b09190612e9a565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db919061314d565b61142f565b005b3480156103ee57600080fd5b50610409600480360381019061040491906132ca565b61152d565b005b34801561041757600080fd5b506104206115cc565b60405161042d9190612e9a565b60405180910390f35b34801561044257600080fd5b5061044b61165a565b6040516104589190613322565b60405180910390f35b34801561046d57600080fd5b5061048860048036038101906104839190612fb9565b61166d565b6040516104959190612afc565b60405180910390f35b3480156104aa57600080fd5b506104b3611691565b005b3480156104c157600080fd5b506104dc60048036038101906104d79190612fb9565b61188b565b6040516104e99190612e9a565b60405180910390f35b3480156104fe57600080fd5b506105196004803603810190610514919061333d565b611937565b005b34801561052757600080fd5b50610542600480360381019061053d919061341e565b611b88565b6040516105509291906134cb565b60405180910390f35b34801561056557600080fd5b5061056e611c60565b005b34801561057c57600080fd5b50610585611d7f565b6040516105929190613543565b60405180910390f35b3480156105a757600080fd5b506105c260048036038101906105bd919061355e565b611d92565b6040516105cf9190612afc565b60405180910390f35b3480156105e457600080fd5b506105ed611dc3565b6040516105fa9190612e9a565b60405180910390f35b34801561060f57600080fd5b5061062a600480360381019061062591906136ab565b611e51565b005b34801561063857600080fd5b5061064161200d565b60405161064e91906137f2565b60405180910390f35b34801561066357600080fd5b5061066c612031565b6040516106799190612f6b565b60405180910390f35b34801561068e57600080fd5b50610697612089565b6040516106a49190612e9a565b60405180910390f35b3480156106b957600080fd5b506106c2612117565b6040516106cf9190612afc565b60405180910390f35b3480156106e457600080fd5b506106ff60048036038101906106fa9190612fb9565b61211d565b005b61070961079f565b005b34801561071757600080fd5b50610732600480360381019061072d9190612fb9565b612287565b6040516107449695949392919061380d565b60405180910390f35b34801561075957600080fd5b50610774600480360381019061076f9190612fb9565b6123e0565b005b34801561078257600080fd5b5061079d60048036038101906107989190612ab6565b6124e6565b005b600060028111156107b3576107b2612c90565b5b600a60019054906101000a900460ff1660028111156107d5576107d4612c90565b5b1461080c576040517faeb8874900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610892576040517f1e4a120d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a73460085461279f90919063ffffffff16565b6008819055506000600c6000348152602001908152602001600020600001541180156108f45750600c600034815260200190815260200160002060060160009054906101000a900460ff16155b156109c7576109236001600c6000348152602001908152602001600020600501546127b590919063ffffffff16565b506000600c60003481526020019081526020016000206005015414156109c657600c600034815260200190815260200160002060008082016000905560018201600061096f91906127cb565b60028201600061097f91906127cb565b60038201600061098f919061280b565b600482016000905560058201600090556006820160006101000a81549060ff02191690556007820160006109c3919061280b565b50505b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020349080600181540180825580915050600190039060005260206000200160009091909190915055610a7f34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461279f90919063ffffffff16565b503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051610aca92919061387c565b60405180910390a2565b600e6020528060005260406000206000915090505481565b610af461282c565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200160008054610b49906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b75906138d4565b8015610bc25780601f10610b9757610100808354040283529160200191610bc2565b820191906000526020600020905b815481529060010190602001808311610ba557829003601f168201915b5050505050815260200160018054610bd9906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c05906138d4565b8015610c525780601f10610c2757610100808354040283529160200191610c52565b820191906000526020600020905b815481529060010190602001808311610c3557829003601f168201915b5050505050815260200160028054610c69906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c95906138d4565b8015610ce25780601f10610cb757610100808354040283529160200191610ce2565b820191906000526020600020905b815481529060010190602001808311610cc557829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b82821015610dba578382906000526020600020018054610d2d906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d59906138d4565b8015610da65780601f10610d7b57610100808354040283529160200191610da6565b820191906000526020600020905b815481529060010190602001808311610d8957829003601f168201915b505050505081526020019060010190610d0e565b505050508152602001600654815260200160075481526020016008548152602001600a60019054906101000a900460ff166002811115610dfd57610dfc612c90565b5b815260200160038054610e0f906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3b906138d4565b8015610e885780601f10610e5d57610100808354040283529160200191610e88565b820191906000526020600020905b815481529060010190602001808311610e6b57829003601f168201915b5050505050815260200160048054610e9f906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecb906138d4565b8015610f185780601f10610eed57610100808354040283529160200191610f18565b820191906000526020600020905b815481529060010190602001808311610efb57829003601f168201915b50505050508152602001600954815250905090565b60075481565b60048054610f40906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6c906138d4565b8015610fb95780601f10610f8e57610100808354040283529160200191610fb9565b820191906000526020600020905b815481529060010190602001808311610f9c57829003601f168201915b505050505081565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561104c57602002820191906000526020600020905b815481526020019060010190808311611038575b50505050509050919050565b6110606128b5565b600c60008381526020019081526020016000206040518061010001604052908160008201548152602001600182018054611099906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546110c5906138d4565b80156111125780601f106110e757610100808354040283529160200191611112565b820191906000526020600020905b8154815290600101906020018083116110f557829003601f168201915b5050505050815260200160028201805461112b906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611157906138d4565b80156111a45780601f10611179576101008083540402835291602001916111a4565b820191906000526020600020905b81548152906001019060200180831161118757829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561127e5783829060005260206000200180546111f1906138d4565b80601f016020809104026020016040519081016040528092919081815260200182805461121d906138d4565b801561126a5780601f1061123f5761010080835404028352916020019161126a565b820191906000526020600020905b81548152906001019060200180831161124d57829003601f168201915b5050505050815260200190600101906111d2565b50505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156113865783829060005260206000200180546112f9906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611325906138d4565b80156113725780601f1061134757610100808354040283529160200191611372565b820191906000526020600020905b81548152906001019060200180831161135557829003601f168201915b5050505050815260200190600101906112da565b50505050815250509050919050565b60065481565b60095481565b600280546113ae906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546113da906138d4565b80156114275780601f106113fc57610100808354040283529160200191611427565b820191906000526020600020905b81548152906001019060200180831161140a57829003601f168201915b505050505081565b600061144960405180602001604052806000815250611b88565b50905080611483576040517fbc7a0a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60016101000a81548160ff021916908360028111156114a9576114a8612c90565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516114dd9190613915565b60405180910390a160065460085410611528577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc3060405161151f9190613915565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b2576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600490805190602001906115c89291906128fc565b5050565b600180546115d9906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611605906138d4565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b505050505081565b600a60019054906101000a900460ff1681565b600f818154811061167d57600080fd5b906000526020600020016000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611716576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561172a57611729612c90565b5b600a60019054906101000a900460ff16600281111561174c5761174b612c90565b5b14611783576040517faeb8874900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516117d890613961565b60006040518083038185875af1925050503d8060008114611815576040519150601f19603f3d011682016040523d82523d6000602084013e61181a565b606091505b505090508015611882577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516118759291906139d5565b60405180910390a1611887565b600080fd5b5050565b6005818154811061189b57600080fd5b9060005260206000200160009150905080546118b6906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546118e2906138d4565b801561192f5780601f106119045761010080835404028352916020019161192f565b820191906000526020600020905b81548152906001019060200180831161191257829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119bc576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000829050600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401611a019190613915565b60206040518083038186803b158015611a1957600080fd5b505afa158015611a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a519190613a13565b1415611a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8990613a8c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16634c7e9be36000306207a1207f0000000000000000000000000000000000000000000000000000000000000000671bc16d674ec800006040518663ffffffff1660e01b8152600401611aff959493929190613c2b565b602060405180830381600087803b158015611b1957600080fd5b505af1158015611b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b519190613a13565b600b819055506001600a60006101000a81548160ff02191690836001811115611b7d57611b7c612c90565b5b021790555050505050565b600060606000806002811115611ba157611ba0612c90565b5b600a60019054906101000a900460ff166002811115611bc357611bc2612c90565b5b1490506000600754611bfe7f0000000000000000000000000000000000000000000000000000000000000000426127b590919063ffffffff16565b11905060008047119050818015611c125750825b8015611c1b5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ce5576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002811115611cf957611cf8612c90565b5b600a60019054906101000a900460ff166002811115611d1b57611d1a612c90565b5b1415611d2657600080fd5b6002600a60016101000a81548160ff02191690836002811115611d4c57611d4b612c90565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600a60009054906101000a900460ff1681565b600d6020528160005260406000208181548110611dae57600080fd5b90600052602060002001600091509150505481565b60008054611dd0906138d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611dfc906138d4565b8015611e495780601f10611e1e57610100808354040283529160200191611e49565b820191906000526020600020905b815481529060010190602001808311611e2c57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ed6576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600f889080600181540180825580915050600190039060005260206000200160009091909190915055604051806101000160405280898152602001888152602001878152602001868152602001858152602001848152602001831515815260200182815250600c60008a8152602001908152602001600020600082015181600001556020820151816001019080519060200190611f749291906128fc565b506040820151816002019080519060200190611f919291906128fc565b506060820151816003019080519060200190611fae929190612982565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e0820151816007019080519060200190611fff929190612982565b509050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600f80548060200260200160405190810160405280929190818152602001828054801561207f57602002820191906000526020600020905b81548152602001906001019080831161206b575b5050505050905090565b60038054612096906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546120c2906138d4565b801561210f5780601f106120e45761010080835404028352916020019161210f565b820191906000526020600020905b8154815290600101906020018083116120f257829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146121a2576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156121b6576121b5612c90565b5b600a60009054906101000a900460ff1660018111156121d8576121d7612c90565b5b146121e257600080fd5b6000600c600083815260200190815260200160002060000154111561228457600c600082815260200190815260200160002060008082016000905560018201600061222d91906127cb565b60028201600061223d91906127cb565b60038201600061224d919061280b565b600482016000905560058201600090556006820160006101000a81549060ff0219169055600782016000612281919061280b565b50505b50565b600c6020528060005260406000206000915090508060000154908060010180546122b0906138d4565b80601f01602080910402602001604051908101604052809291908181526020018280546122dc906138d4565b80156123295780601f106122fe57610100808354040283529160200191612329565b820191906000526020600020905b81548152906001019060200180831161230c57829003601f168201915b50505050509080600201805461233e906138d4565b80601f016020809104026020016040519081016040528092919081815260200182805461236a906138d4565b80156123b75780601f1061238c576101008083540402835291602001916123b7565b820191906000526020600020905b81548152906001019060200180831161239a57829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16905086565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612465576040517fb167e90c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b624f1a0061247e8260075461279f90919063ffffffff16565b1161249d576124988160075461279f90919063ffffffff16565b6124a2565b624f1a005b6007819055506124dd6007547f000000000000000000000000000000000000000000000000000000000000000061279f90919063ffffffff16565b60098190555050565b600160028111156124fa576124f9612c90565b5b600a60019054906101000a900460ff16600281111561251c5761251b612c90565b5b1415612554576040517faeb8874900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156125ce576040517f4cc8b68700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061265d91906129e2565b600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558060085410156126dc576040517f4d83c95000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126f1816008546127b590919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161271d90613961565b60006040518083038185875af1925050503d806000811461275a576040519150601f19603f3d011682016040523d82523d6000602084013e61275f565b606091505b505090508061279a576040517f0520edd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600081836127ad9190613cee565b905092915050565b600081836127c39190613d44565b905092915050565b5080546127d7906138d4565b6000825580601f106127e95750612808565b601f0160209004906000526020600020908101906128079190612a03565b5b50565b50805460008255906000526020600020908101906128299190612a20565b50565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000600281111561289a57612899612c90565b5b81526020016060815260200160608152602001600081525090565b604051806101000160405280600081526020016060815260200160608152602001606081526020016000815260200160008152602001600015158152602001606081525090565b828054612908906138d4565b90600052602060002090601f01602090048101928261292a5760008555612971565b82601f1061294357805160ff1916838001178555612971565b82800160010185558215612971579182015b82811115612970578251825591602001919060010190612955565b5b50905061297e9190612a03565b5090565b8280548282559060005260206000209081019282156129d1579160200282015b828111156129d05782518290805190602001906129c09291906128fc565b50916020019190600101906129a2565b5b5090506129de9190612a20565b5090565b5080546000825590600052602060002090810190612a009190612a03565b50565b5b80821115612a1c576000816000905550600101612a04565b5090565b5b80821115612a405760008181612a3791906127cb565b50600101612a21565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a8382612a58565b9050919050565b612a9381612a78565b8114612a9e57600080fd5b50565b600081359050612ab081612a8a565b92915050565b600060208284031215612acc57612acb612a4e565b5b6000612ada84828501612aa1565b91505092915050565b6000819050919050565b612af681612ae3565b82525050565b6000602082019050612b116000830184612aed565b92915050565b612b2081612a78565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612b60578082015181840152602081019050612b45565b83811115612b6f576000848401525b50505050565b6000601f19601f8301169050919050565b6000612b9182612b26565b612b9b8185612b31565b9350612bab818560208601612b42565b612bb481612b75565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612bf78383612b86565b905092915050565b6000602082019050919050565b6000612c1782612bbf565b612c218185612bca565b935083602082028501612c3385612bdb565b8060005b85811015612c6f5784840389528151612c508582612beb565b9450612c5b83612bff565b925060208a01995050600181019050612c37565b50829750879550505050505092915050565b612c8a81612ae3565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612cd057612ccf612c90565b5b50565b6000819050612ce182612cbf565b919050565b6000612cf182612cd3565b9050919050565b612d0181612ce6565b82525050565b600061018083016000830151612d206000860182612b17565b5060208301518482036020860152612d388282612b86565b91505060408301518482036040860152612d528282612b86565b91505060608301518482036060860152612d6c8282612b86565b91505060808301518482036080860152612d868282612c0c565b91505060a0830151612d9b60a0860182612c81565b5060c0830151612dae60c0860182612c81565b5060e0830151612dc160e0860182612c81565b50610100830151612dd6610100860182612cf8565b50610120830151848203610120860152612df08282612b86565b915050610140830151848203610140860152612e0c8282612b86565b915050610160830151612e23610160860182612c81565b508091505092915050565b60006020820190508181036000830152612e488184612d07565b905092915050565b600082825260208201905092915050565b6000612e6c82612b26565b612e768185612e50565b9350612e86818560208601612b42565b612e8f81612b75565b840191505092915050565b60006020820190508181036000830152612eb48184612e61565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612ef48383612c81565b60208301905092915050565b6000602082019050919050565b6000612f1882612ebc565b612f228185612ec7565b9350612f2d83612ed8565b8060005b83811015612f5e578151612f458882612ee8565b9750612f5083612f00565b925050600181019050612f31565b5085935050505092915050565b60006020820190508181036000830152612f858184612f0d565b905092915050565b612f9681612ae3565b8114612fa157600080fd5b50565b600081359050612fb381612f8d565b92915050565b600060208284031215612fcf57612fce612a4e565b5b6000612fdd84828501612fa4565b91505092915050565b60008115159050919050565b612ffb81612fe6565b82525050565b60006101008301600083015161301a6000860182612c81565b50602083015184820360208601526130328282612b86565b9150506040830151848203604086015261304c8282612b86565b915050606083015184820360608601526130668282612c0c565b915050608083015161307b6080860182612c81565b5060a083015161308e60a0860182612c81565b5060c08301516130a160c0860182612ff2565b5060e083015184820360e08601526130b98282612c0c565b9150508091505092915050565b600060208201905081810360008301526130e08184613001565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261310d5761310c6130e8565b5b8235905067ffffffffffffffff81111561312a576131296130ed565b5b602083019150836001820283011115613146576131456130f2565b5b9250929050565b6000806020838503121561316457613163612a4e565b5b600083013567ffffffffffffffff81111561318257613181612a53565b5b61318e858286016130f7565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131d782612b75565b810181811067ffffffffffffffff821117156131f6576131f561319f565b5b80604052505050565b6000613209612a44565b905061321582826131ce565b919050565b600067ffffffffffffffff8211156132355761323461319f565b5b61323e82612b75565b9050602081019050919050565b82818337600083830152505050565b600061326d6132688461321a565b6131ff565b9050828152602081018484840111156132895761328861319a565b5b61329484828561324b565b509392505050565b600082601f8301126132b1576132b06130e8565b5b81356132c184826020860161325a565b91505092915050565b6000602082840312156132e0576132df612a4e565b5b600082013567ffffffffffffffff8111156132fe576132fd612a53565b5b61330a8482850161329c565b91505092915050565b61331c81612ce6565b82525050565b60006020820190506133376000830184613313565b92915050565b6000806040838503121561335457613353612a4e565b5b600061336285828601612aa1565b925050602061337385828601612aa1565b9150509250929050565b600067ffffffffffffffff8211156133985761339761319f565b5b6133a182612b75565b9050602081019050919050565b60006133c16133bc8461337d565b6131ff565b9050828152602081018484840111156133dd576133dc61319a565b5b6133e884828561324b565b509392505050565b600082601f830112613405576134046130e8565b5b81356134158482602086016133ae565b91505092915050565b60006020828403121561343457613433612a4e565b5b600082013567ffffffffffffffff81111561345257613451612a53565b5b61345e848285016133f0565b91505092915050565b61347081612fe6565b82525050565b600081519050919050565b600082825260208201905092915050565b600061349d82613476565b6134a78185613481565b93506134b7818560208601612b42565b6134c081612b75565b840191505092915050565b60006040820190506134e06000830185613467565b81810360208301526134f28184613492565b90509392505050565b6002811061350c5761350b612c90565b5b50565b600081905061351d826134fb565b919050565b600061352d8261350f565b9050919050565b61353d81613522565b82525050565b60006020820190506135586000830184613534565b92915050565b6000806040838503121561357557613574612a4e565b5b600061358385828601612aa1565b925050602061359485828601612fa4565b9150509250929050565b600067ffffffffffffffff8211156135b9576135b861319f565b5b602082029050602081019050919050565b60006135dd6135d88461359e565b6131ff565b90508083825260208201905060208402830185811115613600576135ff6130f2565b5b835b8181101561364757803567ffffffffffffffff811115613625576136246130e8565b5b808601613632898261329c565b85526020850194505050602081019050613602565b5050509392505050565b600082601f830112613666576136656130e8565b5b81356136768482602086016135ca565b91505092915050565b61368881612fe6565b811461369357600080fd5b50565b6000813590506136a58161367f565b92915050565b600080600080600080600080610100898b0312156136cc576136cb612a4e565b5b60006136da8b828c01612fa4565b985050602089013567ffffffffffffffff8111156136fb576136fa612a53565b5b6137078b828c0161329c565b975050604089013567ffffffffffffffff81111561372857613727612a53565b5b6137348b828c0161329c565b965050606089013567ffffffffffffffff81111561375557613754612a53565b5b6137618b828c01613651565b95505060806137728b828c01612fa4565b94505060a06137838b828c01612fa4565b93505060c06137948b828c01613696565b92505060e089013567ffffffffffffffff8111156137b5576137b4612a53565b5b6137c18b828c01613651565b9150509295985092959890939650565b60006137dc82612a58565b9050919050565b6137ec816137d1565b82525050565b600060208201905061380760008301846137e3565b92915050565b600060c0820190506138226000830189612aed565b81810360208301526138348188612e61565b905081810360408301526138488187612e61565b90506138576060830186612aed565b6138646080830185612aed565b61387160a0830184613467565b979650505050505050565b60006040820190506138916000830185612aed565b61389e6020830184612aed565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806138ec57607f821691505b60208210811415613900576138ff6138a5565b5b50919050565b61390f81612a78565b82525050565b600060208201905061392a6000830184613906565b92915050565b600081905092915050565b50565b600061394b600083613930565b91506139568261393b565b600082019050919050565b600061396c8261393e565b9150819050919050565b6000819050919050565b600061399b61399661399184612a58565b613976565b612a58565b9050919050565b60006139ad82613980565b9050919050565b60006139bf826139a2565b9050919050565b6139cf816139b4565b82525050565b60006040820190506139ea60008301856139c6565b6139f76020830184613906565b9392505050565b600081519050613a0d81612f8d565b92915050565b600060208284031215613a2957613a28612a4e565b5b6000613a37848285016139fe565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b6000613a76600883612e50565b9150613a8182613a40565b602082019050919050565b60006020820190508181036000830152613aa581613a69565b9050919050565b60008190508160005260206000209050919050565b60008154613ace816138d4565b613ad88186612e50565b94506001821660008114613af35760018114613b0557613b38565b60ff1983168652602086019350613b38565b613b0e85613aac565b60005b83811015613b3057815481890152600182019150602081019050613b11565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000613b77600283613481565b9150613b8282613b41565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000613bc2613bbd613bb884613b8d565b613976565b613b97565b9050919050565b613bd281613ba7565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000613c15613c10613c0b84613bd8565b613976565b613be2565b9050919050565b613c2581613bfa565b82525050565b6000610100820190508181036000830152613c468188613ac1565b90508181036020830152613c5981613b6a565b9050613c686040830187613906565b613c756060830186613bc9565b613c8260808301856139c6565b81810360a0830152613c9381613b6a565b905081810360c0830152613ca681613b6a565b9050613cb560e0830184613c1c565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613cf982612ae3565b9150613d0483612ae3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613d3957613d38613cbf565b5b828201905092915050565b6000613d4f82612ae3565b9150613d5a83612ae3565b925082821015613d6d57613d6c613cbf565b5b82820390509291505056fea2646970667358221220c4f3a59e2d76c686f767f68cc22b4407f3be9937ba230436c35e7e8358b85afe64736f6c63430008080033a26469706673582212205351cedab50ee7d3503c10e521c937f6ec2bebe2c5aaf80b6196d6c042c734c764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "Crf_DonF()": [
        {
          "notice": "cmp still active "
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1587,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1592,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(Campaign)1518)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Campaign)1518": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(Campaign)1518)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign)",
        "numberOfBytes": "32",
        "value": "t_contract(Campaign)1518"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}