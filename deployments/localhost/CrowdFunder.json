{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_tags",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_val",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_c_creator",
          "type": "address"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "CampaignPublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_val",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_c_creator",
          "type": "address"
        }
      ],
      "name": "CampaignShrunk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_shipAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_pfp",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tags",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_shipAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pfp",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_rewardable",
          "type": "bool"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkToken",
          "type": "address"
        }
      ],
      "name": "publishCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "refundFromCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "removeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x63e744877e291c593b151c9faebf4ad6da074f04fbc36b2e054404b6d1d2bfbe",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "5143985",
    "logsBloom": "0x
    "blockHash": "0xe5322e87191b7ff325783c685bbd197d726641eda32a52f4f867a8f62ef9a2de",
    "transactionHash": "0x63e744877e291c593b151c9faebf4ad6da074f04fbc36b2e054404b6d1d2bfbe",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "5143985",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6787d92669c7261024cd51da5bfbb4ec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_tags\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_c_creator\",\"type\":\"address\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"CampaignPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_c_creator\",\"type\":\"address\"}],\"name\":\"CampaignShrunk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_shipAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_pfp\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tags\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_shipAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pfp\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_rewardable\",\"type\":\"bool\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkToken\",\"type\":\"address\"}],\"name\":\"publishCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"refundFromCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"removeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice OnchainConfig of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct OnchainConfig {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint32 maxCheckDataSize;\\n  uint32 maxPerformDataSize;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member totalPremium the total premium collected on registry so far\\n * @member numUpkeeps total number of upkeeps on the registry\\n * @member configCount ordinal number of current config, out of all configs applied to this contract so far\\n * @member latestConfigBlockNumber last block at which this config was set\\n * @member latestConfigDigest domain-separation tag for current config\\n * @member latestEpoch for which a report was transmitted\\n * @member paused freeze on execution scoped to the entire registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint96 totalPremium;\\n  uint256 numUpkeeps;\\n  uint32 configCount;\\n  uint32 latestConfigBlockNumber;\\n  bytes32 latestConfigDigest;\\n  uint32 latestEpoch;\\n  bool paused;\\n}\\n\\n/**\\n * @notice all information about an upkeep\\n * @dev only used in return values\\n * @member target the contract which needs to be serviced\\n * @member executeGas the gas limit of upkeep execution\\n * @member checkData the checkData bytes for this upkeep\\n * @member balance the balance of this upkeep\\n * @member admin for this upkeep\\n * @member maxValidBlocknumber until which block this upkeep is valid\\n * @member lastPerformBlockNumber the last block number when this upkeep was performed\\n * @member amountSpent the amount this upkeep has spent\\n * @member paused if this upkeep has been paused\\n * @member skipSigVerification skip signature verification in transmit for a low security low cost model\\n */\\nstruct UpkeepInfo {\\n  address target;\\n  uint32 executeGas;\\n  bytes checkData;\\n  uint96 balance;\\n  address admin;\\n  uint64 maxValidBlocknumber;\\n  uint32 lastPerformBlockNumber;\\n  uint96 amountSpent;\\n  bool paused;\\n  bytes offchainConfig;\\n}\\n\\nenum UpkeepFailureReason {\\n  NONE,\\n  UPKEEP_CANCELLED,\\n  UPKEEP_PAUSED,\\n  TARGET_CHECK_REVERTED,\\n  UPKEEP_NOT_NEEDED,\\n  PERFORM_DATA_EXCEEDS_LIMIT,\\n  INSUFFICIENT_BALANCE\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData,\\n    bytes calldata offchainConfig\\n  ) external returns (uint256 id);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function pauseUpkeep(uint256 id) external;\\n\\n  function unpauseUpkeep(uint256 id) external;\\n\\n  function transferUpkeepAdmin(uint256 id, address proposed) external;\\n\\n  function acceptUpkeepAdmin(uint256 id) external;\\n\\n  function updateCheckData(uint256 id, bytes calldata newCheckData) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function setUpkeepOffchainConfig(uint256 id, bytes calldata config) external;\\n\\n  function getUpkeep(uint256 id) external view returns (UpkeepInfo memory upkeepInfo);\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getTransmitterInfo(address query)\\n    external\\n    view\\n    returns (\\n      bool active,\\n      uint8 index,\\n      uint96 balance,\\n      uint96 lastCollected,\\n      address payee\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory state,\\n      OnchainConfig memory config,\\n      address[] memory signers,\\n      address[] memory transmitters,\\n      uint8 f\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    view\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\",\"keccak256\":\"0x9faf0551509440bd9c25a4a2f14b23bce2f82e5ab5691058b9664edab808468c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport { Reward } from \\\"./Reward.sol\\\";\\r\\n\\r\\n// errors\\r\\n// error Cmp_NIS(); /**not in state */\\r\\n// error Cmp_NotCrtr();\\r\\n// error Cmp_DIC(); /**donator is creator */\\r\\n// error Cmp_NoDns();\\r\\n// error Cmp_RefF();\\r\\n// error Cmp_UpkNN();\\r\\n// error Cmp_NotRef();\\r\\n// error Cmp_Bankrupt();\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface, ReentrancyGuard{\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address immutable private i_crf;\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_initTimeStamp;\\r\\n  uint256 private constant i_maxDur = 5184000;\\r\\n  uint256 public deadline;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  // mapping (uint256 => reward) public rewards;\\r\\n  mapping (uint256 => address) public rewards;\\r\\n  mapping (address => uint256[]) public entDonations;\\r\\n  mapping (address => uint256) public aggrDonations;\\r\\n\\r\\n  uint256[] public rKeys;\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (\\r\\n    address _crowdfunder,\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n  ) {\\r\\n    i_crf = _crowdfunder;\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_initTimeStamp = block.timestamp;\\r\\n    duration = _duration > i_maxDur ? i_maxDur : _duration;\\r\\n    deadline = i_initTimeStamp + duration;\\r\\n    s_imageURI = _imageURI;\\r\\n    currentBalance = 0;\\r\\n  }\\r\\n\\r\\n  // function timeBox(address _upkeepCreatorAddress, address _linkTokenAddress, address _campaignAddress) external isCreator {\\r\\n  //   // UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(_upkeepCreatorAddress);\\r\\n  //   // LinkTokenInterface token = LinkTokenInterface(_linkTokenAddress);\\r\\n  //   // if(token.balanceOf(_upkeepCreatorAddress) == 0){revert(\\\"no funds\\\");}\\r\\n  //   // rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", _campaignAddress, 500000, i_creator, \\\"0x\\\", \\\"0x\\\", 2000000000000000000);\\r\\n  // }\\r\\n\\r\\n  function donate(address _donator, bool _rewardable) public payable nonReentrant{\\r\\n    if(msg.sender != i_crf){revert();}\\r\\n    if(c_state != C_State.Fundraising){revert();}\\r\\n    if(_donator == i_creator){revert();}\\r\\n    currentBalance = currentBalance + msg.value;\\r\\n    if(_rewardable){\\r\\n      if(rewards[msg.value] != address(0)){\\r\\n        (bool success, ) = rewards[msg.value].call(abi.encodeWithSignature(\\\"addDonator(address)\\\", _donator));\\r\\n        if(!success){revert();}\\r\\n        entDonations[_donator].push(msg.value);\\r\\n      }\\r\\n    }\\r\\n    aggrDonations[_donator] = aggrDonations[_donator] + msg.value; \\r\\n    emit FundingRecieved(_donator, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - i_initTimeStamp) > duration);\\r\\n    upkeepNeeded = (timePassed && isOpen);\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  function payout() external isCreator{\\r\\n    if(c_state != C_State.Expired){revert();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) external nonReentrant{\\r\\n    if(msg.sender != i_crf){revert();}\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    if(aggrDonations[_donator] == 0 ){revert();}\\r\\n    uint256 amountToRefund = aggrDonations[_donator];\\r\\n    if(currentBalance < amountToRefund){revert();}\\r\\n    currentBalance = currentBalance - amountToRefund;\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert();}\\r\\n    delete aggrDonations[_donator];\\r\\n    if(entDonations[_donator].length > 0){    \\r\\n      for(uint i=0; i<entDonations[_donator].length; i++){\\r\\n        if(!(rewards[entDonations[_donator][i]] != address(0))){\\r\\n          Reward(rewards[entDonations[_donator][i]]).removeDonator(_donator);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    delete entDonations[_donator];\\r\\n  }\\r\\n\\r\\n  function makeReward( \\r\\n    uint256 _price, string memory _title, \\r\\n    // string memory _detsLink,\\r\\n    string memory _description, string memory _rpic,\\r\\n    string[] memory _perks, \\r\\n    uint256 _deadline, uint256 _quantity, bool _infinite, \\r\\n    string[] memory _shipsTo\\r\\n    ) external isCreator {\\r\\n    if(rewards[_price] != address(0)){revert();}\\r\\n    rKeys.push(_price);\\r\\n    Reward newReward = new Reward(address(this), i_creator, _price, _title,\\r\\n    _description, _rpic, _perks, _deadline, _quantity, _infinite, _shipsTo);\\r\\n    rewards[_price] = address(newReward);\\r\\n  }\\r\\n\\r\\n  function endCampaign() external isCreator {\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateCampaignURI(string memory _campaignURI) external isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  function updateDur(uint256 _addedDur) external isCreator {\\r\\n    duration = (((duration + _addedDur)) > i_maxDur) ? i_maxDur : (duration + _addedDur);\\r\\n    deadline = i_initTimeStamp + duration;\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getRewardKeys() external view returns(uint256[] memory){\\r\\n    return rKeys;\\r\\n  }\\r\\n  \\r\\n  function getReward(uint256 _priceID) external view returns(Reward.RewardObject memory) {\\r\\n    Reward reward = Reward(rewards[_priceID]);\\r\\n    return reward.getRewardDetails();\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() external view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title, \\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      deadline\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x00dc5da454b0b85c286eaea1612c759b0641619bbf52bd5afcd027a2afc6caf9\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport { UpkeepIDConsumer } from \\\"./UpkeepIDConsumer.sol\\\";\\r\\nimport { LinkTokenInterface } from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\n// error Crf_NotCrtr();\\r\\n// error Crf_CSA(); /** cmp still active */\\r\\n// error Crf_DonF();\\r\\n// error Crf_RefF();\\r\\n// error Crf_PubF();\\r\\n\\r\\n// contract CampaignFactory {\\r\\n//   function createCampaign() external returns(Campaign) {\\r\\n//     return new Campaign();\\r\\n//   }\\r\\n// }\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  // using SafeMath for uint256;\\r\\n\\r\\n  event UserAdded(\\r\\n    address indexed _address,\\r\\n    string _username,\\r\\n    string _email,\\r\\n    string _shipAddress,\\r\\n    string _pfp\\r\\n  );\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator,\\r\\n    string _title,\\r\\n    string _description,\\r\\n    string _category,\\r\\n    string _tags,\\r\\n    string _imageURI\\r\\n  );\\r\\n\\r\\n  event CampaignFunded(\\r\\n    address indexed _funder,\\r\\n    address indexed _campaignAddress,\\r\\n    uint256 _val,\\r\\n    address indexed _c_creator\\r\\n  );\\r\\n\\r\\n  event CampaignShrunk(\\r\\n    address indexed _withdrawer,\\r\\n    address indexed _campaignAddress,\\r\\n    uint256 _val,\\r\\n    address indexed _c_creator\\r\\n  );\\r\\n\\r\\n  event CampaignRemoved(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignPublished(\\r\\n    address _campaignAddress,\\r\\n    address _creator\\r\\n  );\\r\\n\\r\\n  uint256 public campaignCounter;\\r\\n  mapping (address => address) private campaigns;\\r\\n\\r\\n  function addUser(\\r\\n    address _address, string memory _username, \\r\\n    string memory _email, \\r\\n    string memory _shipAddress,\\r\\n    string memory _pfp\\r\\n    ) external {\\r\\n    emit UserAdded(_address, _username, _email, _shipAddress, _pfp);\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string calldata _imageURI\\r\\n    ) external {\\r\\n    Campaign newCampaign = new Campaign(\\r\\n      address(this),\\r\\n      payable(msg.sender), _title, \\r\\n      _description, _category, \\r\\n      _tags, _goalAmount, \\r\\n      _duration, _imageURI\\r\\n    );\\r\\n    campaigns[address(newCampaign)] = address(newCampaign);\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender, _title, _description, _category, _tags, _imageURI);\\r\\n  }\\r\\n\\r\\n  function donateToCampaign(address _campaignAddress, bool _rewardable) external payable {\\r\\n    address c_creator = Campaign(campaigns[_campaignAddress]).i_creator();\\r\\n    (bool success, ) = _campaignAddress.call{value:msg.value}(abi.encodeWithSignature(\\\"donate(address,bool)\\\",msg.sender,_rewardable));\\r\\n    if(success){\\r\\n      emit CampaignFunded(msg.sender, _campaignAddress, msg.value, c_creator);\\r\\n    }else{\\r\\n      revert();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function refundFromCampaign(address _campaignAddress) external {\\r\\n    address c_creator = Campaign(campaigns[_campaignAddress]).i_creator();\\r\\n    uint256 refVal = Campaign(campaigns[_campaignAddress]).aggrDonations(msg.sender);\\r\\n    if(!(refVal > 0)){revert();}\\r\\n    (bool success,) = _campaignAddress.call(abi.encodeWithSignature(\\\"refund(address)\\\", msg.sender));\\r\\n    if(success){\\r\\n      emit CampaignShrunk(msg.sender, _campaignAddress, refVal, c_creator);\\r\\n    }else{\\r\\n      revert();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function removeCampaign (address _campaignAddress) external {\\r\\n    if(Campaign(campaigns[_campaignAddress]).i_creator() != msg.sender){revert();}\\r\\n    if(Campaign(campaigns[_campaignAddress]).currentBalance() > 0){revert();}\\r\\n    // either payout or leave for refunds\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    emit CampaignRemoved(_campaignAddress);\\r\\n  }\\r\\n\\r\\n  function publishCampaign(address _campaignAddress, address _upkeepCreator, address _linkToken) external {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(_upkeepCreator);\\r\\n    LinkTokenInterface token = LinkTokenInterface(_linkToken);\\r\\n    if(token.balanceOf(_upkeepCreator) == 0){revert(\\\"no funds\\\");}\\r\\n    newUpkeepCreator.registerAndPredictID(Campaign(_campaignAddress).s_title(), \\\"0x\\\", _campaignAddress, 500000, Campaign(_campaignAddress).i_creator(), \\\"0x\\\", \\\"0x\\\", 2000000000000000000);\\r\\n    campaignCounter = campaignCounter + 1;\\r\\n    emit CampaignPublished(_campaignAddress, msg.sender);\\r\\n    // (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"timeBox(address,address,address)\\\", _upkeepCreator, _linkToken, _campaignAddress));\\r\\n    // if(success){\\r\\n    // }else{revert();}\\r\\n  }\\r\\n}\",\"keccak256\":\"0x73fbcafccefd688f1368942d3fcb59c9b493fbbfaf6473a1530bf90049c4ebc1\",\"license\":\"MIT\"},\"contracts/Reward.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\ncontract Reward {\\r\\n  address public immutable i_campaignAddress;\\r\\n  // address public immutable i_crf;\\r\\n  address public immutable i_creator;\\r\\n\\r\\n  uint256 public immutable i_price;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string public rpic;\\r\\n  string[] public perks;\\r\\n  uint256 public delDate;\\r\\n  uint256 public quantity;\\r\\n  bool public infinite = true;\\r\\n  string[] public shipsTo;\\r\\n  address[] public donators;\\r\\n  string public surveyLink;\\r\\n\\r\\n  struct RewardObject {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string rpic;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n    address[] donators;\\r\\n    string surveyLink;\\r\\n  }\\r\\n\\r\\n  mapping (address => uint256) public true_donator;  \\r\\n  mapping (address => string) public surveyResponses;\\r\\n\\r\\n  constructor ( \\r\\n    address _campaignAddress, \\r\\n    address _creator,\\r\\n    uint256 _price, \\r\\n    string memory _title, \\r\\n    // string memory _detsLink,\\r\\n    string memory _description, \\r\\n    string memory _rpic,\\r\\n    string[] memory _perks, \\r\\n    uint256 _deadline, \\r\\n    uint256 _quantity, \\r\\n    bool _infinite, \\r\\n    string[] memory _shipsTo\\r\\n    ) {\\r\\n    i_price = _price;\\r\\n    i_campaignAddress = _campaignAddress;\\r\\n    i_creator = _creator;\\r\\n\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    rpic = _rpic;\\r\\n    perks = _perks;\\r\\n    delDate = _deadline;\\r\\n    quantity = _quantity;\\r\\n    infinite = _infinite;\\r\\n    shipsTo = _shipsTo;\\r\\n  }\\r\\n\\r\\n  function updateSurveyLink(string memory _surveylink) external {\\r\\n    if(msg.sender != i_creator){revert();}\\r\\n    surveyLink = _surveylink;\\r\\n  }\\r\\n\\r\\n  function addDonator(address _donator) external {\\r\\n    if(msg.sender != i_campaignAddress){revert();}\\r\\n    if((true_donator[_donator] > 0)){revert();} // already has id ...has therefor donated for this reward before\\r\\n\\r\\n    if(!infinite){\\r\\n      if(quantity > 0){\\r\\n        quantity = quantity - 1;\\r\\n        uint256 currNo = donators.length; // get array length\\r\\n        true_donator[_donator] = currNo + 1; \\r\\n        donators.push(_donator);\\r\\n      }else{revert();} // rwd has finished no longer available\\r\\n    }else{\\r\\n      uint256 currNo = donators.length; // get array length\\r\\n      true_donator[_donator] = currNo + 1; \\r\\n      donators.push(_donator);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getDonators() external view returns(address[] memory){\\r\\n    return donators;\\r\\n  }\\r\\n\\r\\n  function removeDonator(address _donator) external {\\r\\n    if(msg.sender != i_campaignAddress){revert();}\\r\\n    if(!(true_donator[_donator] > 0)){revert();} // not a donator\\r\\n    uint256 index = true_donator[_donator] - 1;\\r\\n    delete donators[index];\\r\\n    delete true_donator[_donator];\\r\\n  }\\r\\n\\r\\n  function respondToSurvey(string memory _response) external {\\r\\n    if(!(true_donator[msg.sender] > 0)){revert();} // not a donator\\r\\n    surveyResponses[msg.sender] = _response;\\r\\n  }\\r\\n\\r\\n  function getRewardDetails() external view returns(RewardObject memory){\\r\\n    return RewardObject(\\r\\n      i_price,\\r\\n      title,\\r\\n      description,\\r\\n      rpic,\\r\\n      perks,\\r\\n      delDate,\\r\\n      quantity,\\r\\n      infinite,\\r\\n      shipsTo,\\r\\n      donators,\\r\\n      surveyLink\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x1d4c3e1b08514abaac8fef42052bea81619142c8e19cb65f813f2c13d817668e\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n// UpkeepIDConsumerExample.sol imports functions from both ./AutomationRegistryInterface2_0.sol and\\r\\n// ./interfaces/LinkTokenInterface.sol\\r\\n\\r\\nimport {AutomationRegistryInterface, State, OnchainConfig} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n/**\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\\r\\n * DO NOT USE THIS CODE IN PRODUCTION.\\r\\n */\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n    function register(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount,\\r\\n        address sender\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n    LinkTokenInterface public immutable i_link;\\r\\n    address public immutable registrar;\\r\\n    AutomationRegistryInterface public immutable i_registry;\\r\\n    bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n    constructor(\\r\\n        LinkTokenInterface _link,\\r\\n        address _registrar,\\r\\n        AutomationRegistryInterface _registry\\r\\n    ) {\\r\\n        i_link = _link;\\r\\n        registrar = _registrar;\\r\\n        i_registry = _registry;\\r\\n    }\\r\\n\\r\\n    function registerAndPredictID(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount\\r\\n    ) public returns(uint256) {\\r\\n        (State memory state, , , , ) = i_registry.getState();\\r\\n        uint256 oldNonce = state.nonce;\\r\\n        bytes memory payload = abi.encode(\\r\\n            name,\\r\\n            encryptedEmail,\\r\\n            upkeepContract,\\r\\n            gasLimit,\\r\\n            adminAddress,\\r\\n            checkData,\\r\\n            offchainConfig,\\r\\n            amount,\\r\\n            address(this)\\r\\n        );\\r\\n\\r\\n        i_link.transferAndCall(\\r\\n            registrar,\\r\\n            amount,\\r\\n            bytes.concat(registerSig, payload)\\r\\n        );\\r\\n        (state, , , , ) = i_registry.getState();\\r\\n        uint256 newNonce = state.nonce;\\r\\n        if (newNonce == oldNonce + 1) {\\r\\n            uint256 upkeepID = uint256(\\r\\n                keccak256(\\r\\n                    abi.encodePacked(\\r\\n                        blockhash(block.number - 1),\\r\\n                        address(i_registry),\\r\\n                        uint32(oldNonce)\\r\\n                    )\\r\\n                )\\r\\n            );\\r\\n            // DEV - Use the upkeepID however you see fit\\r\\n            return upkeepID;\\r\\n        } else {\\r\\n            revert(\\\"auto-approve disabled\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1712d2ac002e57e74e5367f9a88c9466f935fada95bd9ad98111e434110f0b3f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610620000795760003560e01c8063cd274a401162000054578063cd274a4014620000e1578063e4663a5b1462000106578063fab62a1d146200012b578063fca604d7146200015057600080fd5b80639083ef58146200007e578063ac3d15fb1462000097578063bbfade3e14620000bc575b600080fd5b620000956200008f36600462000a3d565b62000180565b005b348015620000a457600080fd5b5062000095620000b636600462000a80565b62000306565b348015620000c957600080fd5b5062000095620000db36600462000c26565b62000510565b348015620000ee57600080fd5b50620000956200010036600462000d64565b620005d9565b3480156200011357600080fd5b50620000956200012536600462000a80565b62000629565b3480156200013857600080fd5b50620000956200014a36600462000e58565b62000797565b3480156200015d57600080fd5b506200016860005481565b60405162000177919062000eb8565b60405180910390f35b6001600160a01b0380831660009081526001602090815260408083205481516358a2b01f60e11b815291519394169263b145603e926004808401939192918290030181865afa158015620001d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fe919062000ed5565b90506000836001600160a01b03163433856040516024016200022292919062000f0e565b60408051601f198184030181529181526020820180516001600160e01b0316637be4bae160e01b1790525162000259919062000f88565b60006040518083038185875af1925050503d806000811462000298576040519150601f19603f3d011682016040523d82523d6000602084013e6200029d565b606091505b5050905080156200007957816001600160a01b0316846001600160a01b0316336001600160a01b03167f5f0f580a49a433afc0cd61faf31f545ff739f7874dd091ba39ecfd0383c8462c34604051620002f7919062000eb8565b60405180910390a45b50505050565b6001600160a01b0380821660009081526001602090815260408083205481516358a2b01f60e11b815291519394169263b145603e926004808401939192918290030181865afa1580156200035e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000384919062000ed5565b6001600160a01b03808416600090815260016020526040808220549051629917c560e41b815293945090929116906309917c5090620003c890339060040162000f96565b602060405180830381865afa158015620003e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040c919062000fb3565b9050600081116200041c57600080fd5b6000836001600160a01b0316336040516024016200043b919062000f96565b60408051601f198184030181529181526020820180516001600160e01b0316637d44a00d60e11b1790525162000472919062000f88565b6000604051808303816000865af19150503d8060008114620004b1576040519150601f19603f3d011682016040523d82523d6000602084013e620004b6565b606091505b5050905080156200007957826001600160a01b0316846001600160a01b0316336001600160a01b03167fe627e40c5979c5da4cf94d4b3ce15ce68a4103b1480ec047eec9736d39a0123d85604051620002f7919062000eb8565b600030338a8a8a8a8a8a8a8a6040516200052a90620009df565b6200053f9a999897969594939291906200106c565b604051809103906000f0801580156200055c573d6000803e3d6000fd5b506001600160a01b0381166000818152600160205260409081902080546001600160a01b031916831790555191925033917fce55db2394471943657aaa63a10999909b55d5948702c94255bb9ba41ad07e2890620005c6908d908d908d908d908b908b9062001128565b60405180910390a3505050505050505050565b846001600160a01b03167f10bb073e1ce0977d8bf7b641de8a59b02dd9c9d1c4badc9b30e5a48ac9fc8cb9858585856040516200061a9493929190620011a0565b60405180910390a25050505050565b6001600160a01b038181166000908152600160209081526040918290205482516358a2b01f60e11b815292513394919091169263b145603e9260048083019391928290030181865afa15801562000684573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006aa919062000ed5565b6001600160a01b031614620006be57600080fd5b6001600160a01b03808216600090815260016020908152604080832054815163ce845d1d60e01b815291519394169263ce845d1d926004808401939192918290030181865afa15801562000716573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200073c919062000fb3565b11156200074857600080fd5b6001600160a01b03811660008181526001602052604080822080546001600160a01b0319169055517fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb7935369190a250565b6040516370a0823160e01b8152829082906001600160a01b038216906370a0823190620007c990859060040162000f96565b602060405180830381865afa158015620007e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080d919062000fb3565b620008355760405162461bcd60e51b81526004016200082c9062001221565b60405180910390fd5b816001600160a01b0316634c7e9be3866001600160a01b03166399a8502d6040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000883573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008ad919081019062001296565b876207a120896001600160a01b031663b145603e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000917919062000ed5565b671bc16d674ec800006040518663ffffffff1660e01b8152600401620009429594939291906200132c565b6020604051808303816000875af115801562000962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000988919062000fb3565b5060005462000999906001620013d3565b6000556040517f4ee76a1c89ccbef26f098ac48c95b7da87fe34749fea8758a71a3dc4ccc28bcd90620009d09087903390620013ee565b60405180910390a15050505050565b614849806200140e83390190565b60006001600160a01b0382165b92915050565b62000a0b81620009ed565b811462000a1757600080fd5b50565b8035620009fa8162000a00565b80151562000a0b565b8035620009fa8162000a27565b6000806040838503121562000a555762000a55600080fd5b600062000a63858562000a1a565b925050602062000a768582860162000a30565b9150509250929050565b60006020828403121562000a975762000a97600080fd5b600062000aa5848462000a1a565b949350505050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171562000aeb5762000aeb62000aad565b6040525050565b600062000afe60405190565b905062000b0c828262000ac3565b919050565b60006001600160401b0382111562000b2d5762000b2d62000aad565b601f19601f83011660200192915050565b82818337506000910152565b600062000b6162000b5b8462000b11565b62000af2565b90508281526020810184848401111562000b7e5762000b7e600080fd5b62000b8b84828562000b3e565b509392505050565b600082601f83011262000ba95762000ba9600080fd5b813562000aa584826020860162000b4a565b8062000a0b565b8035620009fa8162000bbb565b60008083601f84011262000be65762000be6600080fd5b5081356001600160401b0381111562000c025762000c02600080fd5b60208301915083600182028301111562000c1f5762000c1f600080fd5b9250929050565b60008060008060008060008060e0898b03121562000c475762000c47600080fd5b88356001600160401b0381111562000c625762000c62600080fd5b62000c708b828c0162000b93565b98505060208901356001600160401b0381111562000c915762000c91600080fd5b62000c9f8b828c0162000b93565b97505060408901356001600160401b0381111562000cc05762000cc0600080fd5b62000cce8b828c0162000b93565b96505060608901356001600160401b0381111562000cef5762000cef600080fd5b62000cfd8b828c0162000b93565b955050608062000d108b828c0162000bc2565b94505060a062000d238b828c0162000bc2565b93505060c08901356001600160401b0381111562000d445762000d44600080fd5b62000d528b828c0162000bcf565b92509250509295985092959890939650565b600080600080600060a0868803121562000d815762000d81600080fd5b600062000d8f888862000a1a565b95505060208601356001600160401b0381111562000db05762000db0600080fd5b62000dbe8882890162000b93565b94505060408601356001600160401b0381111562000ddf5762000ddf600080fd5b62000ded8882890162000b93565b93505060608601356001600160401b0381111562000e0e5762000e0e600080fd5b62000e1c8882890162000b93565b92505060808601356001600160401b0381111562000e3d5762000e3d600080fd5b62000e4b8882890162000b93565b9150509295509295909350565b60008060006060848603121562000e725762000e72600080fd5b600062000e80868662000a1a565b935050602062000e938682870162000a1a565b925050604062000ea68682870162000a1a565b9150509250925092565b805b82525050565b60208101620009fa828462000eb0565b8051620009fa8162000a00565b60006020828403121562000eec5762000eec600080fd5b600062000aa5848462000ec8565b62000eb281620009ed565b80151562000eb2565b6040810162000f1e828562000efa565b62000f2d602083018462000f05565b9392505050565b60005b8381101562000f5157818101518382015260200162000f37565b83811115620003005750506000910152565b600062000f6e825190565b62000f7e81856020860162000f34565b9290920192915050565b600062000f2d828462000f63565b60208101620009fa828462000efa565b8051620009fa8162000bbb565b60006020828403121562000fca5762000fca600080fd5b600062000aa5848462000fa6565b60006001600160a01b038216620009fa565b6000620009fa8262000fd8565b6000620009fa8262000fea565b62000eb28162000ff7565b60006200101a825190565b8084526020840193506200103381856020860162000f34565b601f19601f8201165b9093019392505050565b81835260006020840193506200105e83858462000b3e565b601f19601f8401166200103c565b61012081016200107d828d62000efa565b6200108c602083018c62001004565b8181036040830152620010a0818b6200100f565b90508181036060830152620010b6818a6200100f565b90508181036080830152620010cc81896200100f565b905081810360a0830152620010e281886200100f565b9050620010f360c083018762000eb0565b6200110260e083018662000eb0565b8181036101008301526200111881848662001046565b9c9b505050505050505050505050565b60a080825281016200113b81896200100f565b905081810360208301526200115181886200100f565b905081810360408301526200116781876200100f565b905081810360608301526200117d81866200100f565b905081810360808301526200119481848662001046565b98975050505050505050565b60808082528101620011b381876200100f565b90508181036020830152620011c981866200100f565b90508181036040830152620011df81856200100f565b90508181036060830152620011f581846200100f565b9695505050505050565b60088152600060208201676e6f2066756e647360c01b815291505b5060200190565b60208082528101620009fa81620011ff565b60006200124462000b5b8462000b11565b905082815260208101848484011115620012615762001261600080fd5b62000b8b84828562000f34565b600082601f830112620012845762001284600080fd5b815162000aa584826020860162001233565b600060208284031215620012ad57620012ad600080fd5b81516001600160401b03811115620012c857620012c8600080fd5b62000aa5848285016200126e565b6002815260006020820161060f60f31b815291506200121a565b600063ffffffff8216620009fa565b62000eb281620012f0565b60006bffffffffffffffffffffffff8216620009fa565b62000eb2816200130a565b61010080825281016200134081886200100f565b905081810360208301526200135581620012d6565b905062001366604083018762000efa565b620013756060830186620012ff565b62001384608083018562001004565b81810360a08301526200139781620012d6565b905081810360c0830152620013ac81620012d6565b9050620011f560e083018462001321565b634e487b7160e01b600052601160045260246000fd5b60008219821115620013e957620013e9620013bd565b500190565b60408101620013fe828562000efa565b62000f2d602083018462000efa56fe60e0604052600b805460ff191690553480156200001b57600080fd5b5060405162004849380380620048498339810160408190526200003e9162000341565b600160008190556001600160a01b03808b16608052891660a05287516200006b919060208a019062000110565b5085516200008190600290602089019062000110565b5084516200009790600390602088019062000110565b508351620000ad90600690602087019062000110565b5060078390554260c052624f1a008211620000c95781620000ce565b624f1a005b600881905560c051620000e29190620004be565b600a558051620000fa90600490602084019062000110565b5050600060095550620005209650505050505050565b8280546200011e90620004ef565b90600052602060002090601f0160209004810192826200014257600085556200018d565b82601f106200015d57805160ff19168380011785556200018d565b828001600101855582156200018d579182015b828111156200018d57825182559160200191906001019062000170565b506200019b9291506200019f565b5090565b5b808211156200019b5760008155600101620001a0565b60006001600160a01b0382165b92915050565b620001d481620001b6565b8114620001e057600080fd5b50565b8051620001c381620001c9565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156200022e576200022e620001f0565b6040525050565b60006200024160405190565b90506200024f828262000206565b919050565b60006001600160401b03821115620002705762000270620001f0565b601f19601f83011660200192915050565b60005b838110156200029e57818101518382015260200162000284565b83811115620002ae576000848401525b50505050565b6000620002cb620002c58462000254565b62000235565b905082815260208101848484011115620002e857620002e8600080fd5b620002f584828562000281565b509392505050565b600082601f830112620003135762000313600080fd5b815162000325848260208601620002b4565b949350505050565b80620001d4565b8051620001c3816200032d565b60008060008060008060008060006101208a8c031215620003655762000365600080fd5b6000620003738c8c620001e3565b9950506020620003868c828d01620001e3565b98505060408a01516001600160401b03811115620003a757620003a7600080fd5b620003b58c828d01620002fd565b97505060608a01516001600160401b03811115620003d657620003d6600080fd5b620003e48c828d01620002fd565b96505060808a01516001600160401b03811115620004055762000405600080fd5b620004138c828d01620002fd565b95505060a08a01516001600160401b03811115620004345762000434600080fd5b620004428c828d01620002fd565b94505060c0620004558c828d0162000334565b93505060e0620004688c828d0162000334565b9250506101008a01516001600160401b038111156200048a576200048a600080fd5b620004988c828d01620002fd565b9150509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b60008219821115620004d457620004d4620004a8565b500190565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806200050457607f821691505b602082108114156200051a576200051a620004d9565b50919050565b60805160a05160c0516142a5620005a460003960008181610e2001526113cc0152600081816104b1015281816105ed01528181610c2c01528181610cac01528181610d1101528181610dba01528181610e8b01528181610f1401528181610fc8015281816110e60152611360015260008181611092015261142d01526142a56000f3fe608060405260043610620001db5760003560e01c806363bd1d4a11620000ff578063bf66e2c81162000095578063ce845d1d116200006c578063ce845d1d1462000539578063f301af421462000551578063fa6ded39146200058b578063fa89401a14620005b057600080fd5b8063bf66e2c814620004e2578063c5cd50781462000509578063ce2a0572146200052157600080fd5b806371aac7f911620000d657806371aac7f914620004565780637be4bae1146200046e57806399a8502d1462000485578063b145603e146200049d57600080fd5b806363bd1d4a14620003e45780636e04ff0d14620003fc5780636e60eef7146200043157600080fd5b806329dcb0cf11620001755780634d695bdb116200014c5780634d695bdb14620003575780634ef89719146200037c57806360fa9a7214620003945780636235887a14620003bf57600080fd5b806329dcb0cf14620003005780634278ac8b14620003185780634585e33b146200033057600080fd5b806315a46ee611620001b657806315a46ee614620002685780631774d960146200028f5780631c4b774b14620002b45780632636b94514620002e857600080fd5b806309917c5014620001e05780630c611f2414620002295780630fb5a6b41462000250575b600080fd5b348015620001ed57600080fd5b5062000211620001ff36600462001882565b600f6020526000908152604090205481565b604051620002209190620018b7565b60405180910390f35b3480156200023657600080fd5b5062000241620005d5565b60405162000220919062001ac4565b3480156200025d57600080fd5b506200021160085481565b3480156200027557600080fd5b5062000280620009f0565b60405162000220919062001ad7565b3480156200029c57600080fd5b5062000211620002ae36600462001afe565b62000a86565b348015620002c157600080fd5b50620002d9620002d336600462001b41565b62000ab8565b60405162000220919062001d74565b348015620002f557600080fd5b506200021160075481565b3480156200030d57600080fd5b5062000211600a5481565b3480156200032557600080fd5b506200028062000b9c565b3480156200033d57600080fd5b50620003556200034f36600462001dde565b62000bab565b005b3480156200036457600080fd5b50620003556200037636600462001f2c565b62000c21565b3480156200038957600080fd5b506200028062000c70565b348015620003a157600080fd5b50600b54620003b09060ff1681565b60405162000220919062001f6c565b348015620003cc57600080fd5b5062000211620003de36600462001b41565b62000c7f565b348015620003f157600080fd5b506200035562000ca1565b3480156200040957600080fd5b50620004216200041b36600462001f2c565b62000df6565b6040516200022092919062001f7c565b3480156200043e57600080fd5b50620003556200045036600462002086565b62000e80565b3480156200046357600080fd5b506200035562000fbd565b620003556200047f366004620021ed565b62001053565b3480156200049257600080fd5b5062000280620012ce565b348015620004aa57600080fd5b50620004d37f000000000000000000000000000000000000000000000000000000000000000081565b60405162000220919062002226565b348015620004ef57600080fd5b50620004fa620012dd565b60405162000220919062002287565b3480156200051657600080fd5b506200028062001337565b3480156200052e57600080fd5b506200028062001346565b3480156200054657600080fd5b506200021160095481565b3480156200055e57600080fd5b50620004d36200057036600462001b41565b600d602052600090815260409020546001600160a01b031681565b3480156200059857600080fd5b5062000355620005aa36600462001b41565b62001355565b348015620005bd57600080fd5b5062000355620005cf36600462001882565b620013f7565b620005df620016f6565b6040518061018001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600180546200062990620022b0565b80601f01602080910402602001604051908101604052809291908181526020018280546200065790620022b0565b8015620006a85780601f106200067c57610100808354040283529160200191620006a8565b820191906000526020600020905b8154815290600101906020018083116200068a57829003601f168201915b5050505050815260200160028054620006c190620022b0565b80601f0160208091040260200160405190810160405280929190818152602001828054620006ef90620022b0565b8015620007405780601f10620007145761010080835404028352916020019162000740565b820191906000526020600020905b8154815290600101906020018083116200072257829003601f168201915b50505050508152602001600380546200075990620022b0565b80601f01602080910402602001604051908101604052809291908181526020018280546200078790620022b0565b8015620007d85780601f10620007ac57610100808354040283529160200191620007d8565b820191906000526020600020905b815481529060010190602001808311620007ba57829003601f168201915b5050505050815260200160068054620007f190620022b0565b80601f01602080910402602001604051908101604052809291908181526020018280546200081f90620022b0565b8015620008705780601f10620008445761010080835404028352916020019162000870565b820191906000526020600020905b8154815290600101906020018083116200085257829003601f168201915b5050509183525050600754602082015260085460408201526009546060820152600b5460809091019060ff166002811115620008b057620008b06200193a565b815260200160048054620008c490620022b0565b80601f0160208091040260200160405190810160405280929190818152602001828054620008f290620022b0565b8015620009435780601f10620009175761010080835404028352916020019162000943565b820191906000526020600020905b8154815290600101906020018083116200092557829003601f168201915b50505050508152602001600580546200095c90620022b0565b80601f01602080910402602001604051908101604052809291908181526020018280546200098a90620022b0565b8015620009db5780601f10620009af57610100808354040283529160200191620009db565b820191906000526020600020905b815481529060010190602001808311620009bd57829003601f168201915b50505050508152602001600a54815250905090565b60058054620009ff90620022b0565b80601f016020809104026020016040519081016040528092919081815260200182805462000a2d90620022b0565b801562000a7e5780601f1062000a525761010080835404028352916020019162000a7e565b820191906000526020600020905b81548152906001019060200180831162000a6057829003601f168201915b505050505081565b600e602052816000526040600020818154811062000aa357600080fd5b90600052602060002001600091509150505481565b62000b18604051806101600160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581526020016060815260200160608152602001606081525090565b6000828152600d6020526040808220548151636862013b60e11b815291516001600160a01b0390911692839263d0c4027692600480830193928290030181865afa15801562000b6b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b95919081019062002671565b9392505050565b60038054620009ff90620022b0565b600062000bc76040518060200160405280600081525062000df6565b5090508062000bd557600080fd5b600b805460ff191660011790556040517f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d9062000c1490309062002226565b60405180910390a1505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000c5757600080fd5b805162000c6c90600590602084019062001774565b5050565b60028054620009ff90620022b0565b6010818154811062000c9057600080fd5b600091825260209091200154905081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000cd757600080fd5b6001600b5460ff16600281111562000cf35762000cf36200193a565b1462000cfe57600080fd5b60006009549050600060098190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405162000d4890620026b1565b60006040518083038185875af1925050503d806000811462000d87576040519150601f19603f3d011682016040523d82523d6000602084013e62000d8c565b606091505b505090508015620001db577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f00000000000000000000000000000000000000000000000000000000000000003060405162000dea929190620026f1565b60405180910390a15050565b600060608180600b5460ff16600281111562000e165762000e166200193a565b14905060006008547f00000000000000000000000000000000000000000000000000000000000000004262000e4c919062002726565b11905080801562000e5a5750815b60408051808201909152600381526203078360ec1b602082015290969095509350505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000eb657600080fd5b6000898152600d60205260409020546001600160a01b03161562000ed957600080fd5b6010805460018101825560009182527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672018a905560405130907f0000000000000000000000000000000000000000000000000000000000000000908c908c908c908c908c908c908c908c908c9062000f519062001803565b62000f679b9a999897969594939291906200279f565b604051809103906000f08015801562000f84573d6000803e3d6000fd5b5060009a8b52600d6020526040909a2080546001600160a01b0319166001600160a01b03909b169a909a17909955505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000ff357600080fd5b6001600b5460ff1660028111156200100f576200100f6200193a565b14156200101b57600080fd5b600b805460ff191660021790556040517fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5190600090a1565b60026000541415620010825760405162461bcd60e51b815260040162001079906200287b565b60405180910390fd5b6002600055336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620010bd57600080fd5b6000600b5460ff166002811115620010d957620010d96200193a565b14620010e457600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156200112457600080fd5b34600954620011349190620028b7565b60095580156200124357346000908152600d60205260409020546001600160a01b0316156200124357346000908152600d60205260408082205490516001600160a01b03909116906200118c90859060240162002226565b60408051601f198184030181529181526020820180516001600160e01b0316632814bc0960e21b17905251620011c39190620028f7565b6000604051808303816000865af19150503d806000811462001202576040519150601f19603f3d011682016040523d82523d6000602084013e62001207565b606091505b50509050806200121657600080fd5b506001600160a01b0382166000908152600e60209081526040822080546001810182559083529120349101555b6001600160a01b0382166000908152600f602052604090205462001269903490620028b7565b6001600160a01b0383166000818152600f60205260409081902092909255600954915190917fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120891620012bd91349162002905565b60405180910390a250506001600055565b60018054620009ff90620022b0565b606060108054806020026020016040519081016040528092919081815260200182805480156200132d57602002820191906000526020600020905b81548152602001906001019080831162001318575b5050505050905090565b60068054620009ff90620022b0565b60048054620009ff90620022b0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200138b57600080fd5b624f1a00816008546200139f9190620028b7565b11620013bb5780600854620013b59190620028b7565b620013c0565b624f1a005b6008819055620013f1907f0000000000000000000000000000000000000000000000000000000000000000620028b7565b600a5550565b600260005414156200141d5760405162461bcd60e51b815260040162001079906200287b565b6002600055336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200145857600080fd5b6001600b5460ff1660028111156200147457620014746200193a565b14156200148057600080fd5b6001600160a01b0381166000908152600f6020526040902054620014a357600080fd5b6001600160a01b0381166000908152600f6020526040902054600954811115620014cc57600080fd5b80600954620014dc919062002726565b6009819055506000826001600160a01b031682604051620014fd90620026b1565b60006040518083038185875af1925050503d80600081146200153c576040519150601f19603f3d011682016040523d82523d6000602084013e62001541565b606091505b50509050806200155057600080fd5b6001600160a01b0383166000908152600f60209081526040808320839055600e90915290205415620016c95760005b6001600160a01b0384166000908152600e6020526040902054811015620016c7576001600160a01b0384166000908152600e602052604081208054600d91839185908110620015d257620015d262002924565b600091825260208083209091015483528201929092526040019020546001600160a01b03161415620016b2576001600160a01b0384166000908152600e602052604081208054600d9291908490811062001630576200163062002924565b60009182526020808320909101548352820192909252604090810190912054905163c91e986d60e01b81526001600160a01b039091169063c91e986d906200167d90879060040162002226565b600060405180830381600087803b1580156200169857600080fd5b505af1158015620016ad573d6000803e3d6000fd5b505050505b80620016be816200293a565b9150506200157f565b505b6001600160a01b0383166000908152600e60205260408120620016ec9162001811565b5050600160005550565b60405180610180016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156200175957620017596200193a565b81526020016060815260200160608152602001600081525090565b8280546200178290620022b0565b90600052602060002090601f016020900481019282620017a65760008555620017f1565b82601f10620017c157805160ff1916838001178555620017f1565b82800160010185558215620017f1579182015b82811115620017f1578251825591602001919060010190620017d4565b50620017ff92915062001834565b5090565b611917806200295983390190565b508054600082559060005260206000209081019062001831919062001834565b50565b5b80821115620017ff576000815560010162001835565b60006001600160a01b0382165b92915050565b62001869816200184b565b81146200183157600080fd5b803562001858816200185e565b600060208284031215620018995762001899600080fd5b6000620018a7848462001875565b949350505050565b805b82525050565b60208101620018588284620018af565b620018b1816200184b565b60005b83811015620018ef578181015183820152602001620018d5565b83811115620018ff576000848401525b50505050565b600062001910825190565b80845260208401935062001929818560208601620018d2565b601f01601f19169290920192915050565b634e487b7160e01b600052602160045260246000fd5b600381106200183157620018316200193a565b806200196f8162001950565b919050565b6000620018588262001963565b620018b18162001974565b8051600090610180840190620019a38582620018c7565b5060208301518482036020860152620019bd828262001905565b91505060408301518482036040860152620019d9828262001905565b91505060608301518482036060860152620019f5828262001905565b9150506080830151848203608086015262001a11828262001905565b91505060a083015162001a2860a0860182620018af565b5060c083015162001a3d60c0860182620018af565b5060e083015162001a5260e0860182620018af565b5061010083015162001a6961010086018262001981565b5061012083015184820361012086015262001a85828262001905565b91505061014083015184820361014086015262001aa3828262001905565b91505061016083015162001abc610160860182620018af565b509392505050565b6020808252810162000b9581846200198c565b6020808252810162000b95818462001905565b8062001869565b8035620018588162001aea565b6000806040838503121562001b165762001b16600080fd5b600062001b24858562001875565b925050602062001b378582860162001af1565b9150509250929050565b60006020828403121562001b585762001b58600080fd5b6000620018a7848462001af1565b600062000b95838362001905565b600062001b7f825190565b8084526020840193508360208202850162001b9a8560200190565b8060005b8581101562001bd3578484038952815162001bba858262001b66565b94506020830160209a909a019992505060010162001b9e565b5091979650505050505050565b801515620018b1565b600062001bf78383620018c7565b505060200190565b600062001c0a825190565b80845260209384019383018060005b8381101562001c4257815162001c30888262001be9565b97506020830192505060010162001c19565b509495945050505050565b805160009061016084019062001c648582620018af565b506020830151848203602086015262001c7e828262001905565b9150506040830151848203604086015262001c9a828262001905565b9150506060830151848203606086015262001cb6828262001905565b9150506080830151848203608086015262001cd2828262001b74565b91505060a083015162001ce960a0860182620018af565b5060c083015162001cfe60c0860182620018af565b5060e083015162001d1360e086018262001be0565b5061010083015184820361010086015262001d2f828262001b74565b91505061012083015184820361012086015262001d4d828262001bff565b91505061014083015184820361014086015262001d6b828262001905565b95945050505050565b6020808252810162000b95818462001c4d565b60008083601f84011262001d9e5762001d9e600080fd5b5081356001600160401b0381111562001dba5762001dba600080fd5b60208301915083600182028301111562001dd75762001dd7600080fd5b9250929050565b6000806020838503121562001df65762001df6600080fd5b82356001600160401b0381111562001e115762001e11600080fd5b62001e1f8582860162001d87565b92509250509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171562001e695762001e6962001e2b565b6040525050565b600062001e7c60405190565b90506200196f828262001e41565b60006001600160401b0382111562001ea65762001ea662001e2b565b601f19601f83011660200192915050565b82818337506000910152565b600062001eda62001ed48462001e8a565b62001e70565b90508281526020810184848401111562001ef75762001ef7600080fd5b62001abc84828562001eb7565b600082601f83011262001f1a5762001f1a600080fd5b8135620018a784826020860162001ec3565b60006020828403121562001f435762001f43600080fd5b81356001600160401b0381111562001f5e5762001f5e600080fd5b620018a78482850162001f04565b6020810162001858828462001981565b6040810162001f8c828562001be0565b8181036020830152620018a7818462001905565b60006001600160401b0382111562001fbc5762001fbc62001e2b565b5060209081020190565b600062001fd762001ed48462001fa0565b8381529050602080820190840283018581111562001ff85762001ff8600080fd5b835b818110156200203e5780356001600160401b038111156200201e576200201e600080fd5b8086016200202d898262001f04565b855250506020928301920162001ffa565b5050509392505050565b600082601f8301126200205e576200205e600080fd5b8135620018a784826020860162001fc6565b80151562001869565b8035620018588162002070565b60008060008060008060008060006101208a8c031215620020aa57620020aa600080fd5b6000620020b88c8c62001af1565b99505060208a01356001600160401b03811115620020d957620020d9600080fd5b620020e78c828d0162001f04565b98505060408a01356001600160401b03811115620021085762002108600080fd5b620021168c828d0162001f04565b97505060608a01356001600160401b03811115620021375762002137600080fd5b620021458c828d0162001f04565b96505060808a01356001600160401b03811115620021665762002166600080fd5b620021748c828d0162002048565b95505060a0620021878c828d0162001af1565b94505060c06200219a8c828d0162001af1565b93505060e0620021ad8c828d0162002079565b9250506101008a01356001600160401b03811115620021cf57620021cf600080fd5b620021dd8c828d0162002048565b9150509295985092959850929598565b60008060408385031215620022055762002205600080fd5b600062002213858562001875565b925050602062001b378582860162002079565b60208101620018588284620018c7565b600062001bf78383620018af565b60006200224f825190565b80845260209384019383018060005b8381101562001c4257815162002275888262002236565b9750602083019250506001016200225e565b6020808252810162000b95818462002244565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620022c557607f821691505b60208210811415620022db57620022db6200229a565b50919050565b8051620018588162001aea565b6000620022ff62001ed48462001e8a565b9050828152602081018484840111156200231c576200231c600080fd5b62001abc848285620018d2565b600082601f8301126200233f576200233f600080fd5b8151620018a7848260208601620022ee565b60006200236262001ed48462001fa0565b83815290506020808201908402830185811115620023835762002383600080fd5b835b818110156200203e5780516001600160401b03811115620023a957620023a9600080fd5b808601620023b8898262002329565b855250506020928301920162002385565b600082601f830112620023df57620023df600080fd5b8151620018a784826020860162002351565b8051620018588162002070565b805162001858816200185e565b60006200241c62001ed48462001fa0565b838152905060208082019084028301858111156200243d576200243d600080fd5b835b818110156200203e5780620024558882620023fe565b845250602092830192016200243f565b600082601f8301126200247b576200247b600080fd5b8151620018a78482602086016200240b565b60006101608284031215620024a557620024a5600080fd5b620024b261016062001e70565b90506000620024c28484620022e1565b82525060208201516001600160401b03811115620024e357620024e3600080fd5b620024f18482850162002329565b60208301525060408201516001600160401b03811115620025155762002515600080fd5b620025238482850162002329565b60408301525060608201516001600160401b03811115620025475762002547600080fd5b620025558482850162002329565b60608301525060808201516001600160401b03811115620025795762002579600080fd5b6200258784828501620023c9565b60808301525060a06200259d84828501620022e1565b60a08301525060c0620025b384828501620022e1565b60c08301525060e0620025c984828501620023f1565b60e0830152506101008201516001600160401b03811115620025ee57620025ee600080fd5b620025fc84828501620023c9565b610100830152506101208201516001600160401b03811115620026225762002622600080fd5b620026308482850162002465565b610120830152506101408201516001600160401b03811115620026565762002656600080fd5b620026648482850162002329565b6101408301525092915050565b600060208284031215620026885762002688600080fd5b81516001600160401b03811115620026a357620026a3600080fd5b620018a7848285016200248d565b60008162001858565b60006001600160a01b03821662001858565b60006200185882620026ba565b60006200185882620026cc565b620018b181620026d9565b60408101620027018285620026e6565b62000b956020830184620018c7565b634e487b7160e01b600052601160045260246000fd5b6000828210156200273b576200273b62002710565b500390565b60006200274b825190565b80845260208401935083602082028501620027668560200190565b8060005b8581101562001bd3578484038952815162002786858262001b66565b94506020830160209a909a01999250506001016200276a565b6101608101620027b0828e620018c7565b620027bf602083018d620026e6565b620027ce604083018c620018af565b8181036060830152620027e2818b62001905565b90508181036080830152620027f8818a62001905565b905081810360a08301526200280e818962001905565b905081810360c083015262002824818862002740565b90506200283560e0830187620018af565b62002845610100830186620018af565b6200285561012083018562001be0565b8181036101408301526200286a818462002740565b9d9c50505050505050505050505050565b602080825281016200185881601f81527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00602082015260400190565b60008219821115620028cd57620028cd62002710565b500190565b6000620028dd825190565b620028ed818560208601620018d2565b9290920192915050565b600062000b958284620028d2565b60408101620029158285620018af565b62000b956020830184620018af565b634e487b7160e01b600052603260045260246000fd5b600060001982141562002951576200295162002710565b506001019056fe60e06040526006805460ff191660011790553480156200001e57600080fd5b5060405162001917380380620019178339810160408190526200004191620004c7565b60c08990526001600160a01b03808c166080528a1660a05287516200006e9060009060208b0190620000f0565b508651620000849060019060208a0190620000f0565b5085516200009a906002906020890190620000f0565b508451620000b09060039060208801906200017f565b50600484905560058390556006805460ff19168315151790558051620000de9060079060208401906200017f565b505050505050505050505050620006a3565b828054620000fe9062000672565b90600052602060002090601f0160209004810192826200012257600085556200016d565b82601f106200013d57805160ff19168380011785556200016d565b828001600101855582156200016d579182015b828111156200016d57825182559160200191906001019062000150565b506200017b929150620001df565b5090565b828054828255906000526020600020908101928215620001d1579160200282015b82811115620001d15782518051620001c0918491602090910190620000f0565b5091602001919060010190620001a0565b506200017b929150620001f6565b5b808211156200017b5760008155600101620001e0565b808211156200017b5760006200020d828262000217565b50600101620001f6565b508054620002259062000672565b6000825580601f1062000236575050565b601f016020900490600052602060002090810190620002569190620001df565b50565b60006001600160a01b0382165b92915050565b620002778162000259565b81146200025657600080fd5b805162000266816200026c565b8062000277565b8051620002668162000290565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715620002e257620002e2620002a4565b6040525050565b6000620002f560405190565b9050620003038282620002ba565b919050565b60006001600160401b03821115620003245762000324620002a4565b601f19601f83011660200192915050565b60005b838110156200035257818101518382015260200162000338565b8381111562000362576000848401525b50505050565b60006200037f620003798462000308565b620002e9565b9050828152602081018484840111156200039c576200039c600080fd5b620003a984828562000335565b509392505050565b600082601f830112620003c757620003c7600080fd5b8151620003d984826020860162000368565b949350505050565b60006001600160401b03821115620003fd57620003fd620002a4565b5060209081020190565b6000620004186200037984620003e1565b83815290506020808201908402830185811115620004395762000439600080fd5b835b818110156200047f5780516001600160401b038111156200045f576200045f600080fd5b8086016200046e8982620003b1565b85525050602092830192016200043b565b5050509392505050565b600082601f8301126200049f576200049f600080fd5b8151620003d984826020860162000407565b80151562000277565b80516200026681620004b1565b60008060008060008060008060008060006101608c8e031215620004ee57620004ee600080fd5b6000620004fc8e8e62000283565b9b505060206200050f8e828f0162000283565b9a50506040620005228e828f0162000297565b99505060608c01516001600160401b03811115620005435762000543600080fd5b620005518e828f01620003b1565b98505060808c01516001600160401b03811115620005725762000572600080fd5b620005808e828f01620003b1565b97505060a08c01516001600160401b03811115620005a157620005a1600080fd5b620005af8e828f01620003b1565b96505060c08c01516001600160401b03811115620005d057620005d0600080fd5b620005de8e828f0162000489565b95505060e0620005f18e828f0162000297565b945050610100620006058e828f0162000297565b935050610120620006198e828f01620004ba565b9250506101408c01516001600160401b038111156200063b576200063b600080fd5b620006498e828f0162000489565b9150509295989b509295989b9093969950565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806200068757607f821691505b602082108114156200069d576200069d6200065c565b50919050565b60805160a05160c051611228620006ef600039600081816101c4015261074e01526000818161029701526106a40152600081816102700152818161044501526105dd01526112286000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637284e416116100b8578063b145603e1161007c578063b145603e14610292578063bf1482fa146102b9578063c91e986d146102ce578063cb21efde146102e1578063d0c40276146102f4578063e959e2601461030957600080fd5b80637284e4161461021d578063a052f02414610225578063ac62f56614610238578063accff55214610258578063ae33dd171461026b57600080fd5b80632e968e3e116100ff5780632e968e3e1461019f57806334d19469146101bf5780633dda094d146101e65780634a79d50c146101fb5780635bec9e671461020357600080fd5b8063147c2c5a1461013c57806314b410a51461015b57806317fc45e21461017b578063299f8e4614610184578063299fa1501461018c575b600080fd5b61014560045481565b6040516101529190610c98565b60405180910390f35b61016e610169366004610cdc565b610311565b6040516101529190610d67565b61014560055481565b61016e6103ab565b61016e61019a366004610d90565b6103b8565b6101456101ad366004610cdc565b600a6020526000908152604090205481565b6101457f000000000000000000000000000000000000000000000000000000000000000081565b6101f96101f4366004610eac565b6103e3565b005b61016e610420565b6006546102109060ff1681565b6040516101529190610eef565b61016e61042d565b6101f9610233366004610cdc565b61043a565b61024b610246366004610d90565b610536565b6040516101529190610f06565b61016e610266366004610d90565b610560565b61024b7f000000000000000000000000000000000000000000000000000000000000000081565b61024b7f000000000000000000000000000000000000000000000000000000000000000081565b6102c1610570565b6040516101529190610f71565b6101f96102dc366004610cdc565b6105d2565b6101f96102ef366004610eac565b610699565b6102fc6106e1565b6040516101529190611143565b61016e610bea565b600b602052600090815260409020805461032a9061116a565b80601f01602080910402602001604051908101604052809291908181526020018280546103569061116a565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b505050505081565b6009805461032a9061116a565b600781815481106103c857600080fd5b90600052602060002001600091509050805461032a9061116a565b336000908152600a60205260409020546103fc57600080fd5b336000908152600b60209081526040909120825161041c92840190610bf7565b5050565b6000805461032a9061116a565b6001805461032a9061116a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461046f57600080fd5b6001600160a01b0381166000908152600a60205260409020541561049257600080fd5b60065460ff1661052557600554156101375760016005546104b391906111ad565b6005556008546104c48160016111c4565b6001600160a01b0383166000818152600a60205260408120929092556008805460018101825592527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390910180546001600160a01b03191690911790555050565b6008546104c48160016111c4565b50565b6008818154811061054657600080fd5b6000918252602090912001546001600160a01b0316905081565b600381815481106103c857600080fd5b606060088054806020026020016040519081016040528092919081815260200182805480156105c857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105aa575b5050505050905090565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461060757600080fd5b6001600160a01b0381166000908152600a602052604090205461062957600080fd5b6001600160a01b0381166000908152600a602052604081205461064e906001906111ad565b905060088181548110610663576106636111dc565b6000918252602080832090910180546001600160a01b03191690556001600160a01b03939093168152600a909252506040812055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106ce57600080fd5b805161041c906009906020840190610bf7565b610740604051806101600160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581526020016060815260200160608152602001606081525090565b6040518061016001604052807f000000000000000000000000000000000000000000000000000000000000000081526020016000805461077f9061116a565b80601f01602080910402602001604051908101604052809291908181526020018280546107ab9061116a565b80156107f85780601f106107cd576101008083540402835291602001916107f8565b820191906000526020600020905b8154815290600101906020018083116107db57829003601f168201915b505050505081526020016001805461080f9061116a565b80601f016020809104026020016040519081016040528092919081815260200182805461083b9061116a565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b505050505081526020016002805461089f9061116a565b80601f01602080910402602001604051908101604052809291908181526020018280546108cb9061116a565b80156109185780601f106108ed57610100808354040283529160200191610918565b820191906000526020600020905b8154815290600101906020018083116108fb57829003601f168201915b505050505081526020016003805480602002602001604051908101604052809291908181526020016000905b828210156109f05783829060005260206000200180546109639061116a565b80601f016020809104026020016040519081016040528092919081815260200182805461098f9061116a565b80156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b505050505081526020019060010190610944565b50505050815260200160045481526020016005548152602001600660009054906101000a900460ff16151581526020016007805480602002602001604051908101604052809291908181526020016000905b82821015610aee578382906000526020600020018054610a619061116a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8d9061116a565b8015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505050505081526020019060010190610a42565b5050505081526020016008805480602002602001604051908101604052809291908181526020018280548015610b4d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b2f575b5050505050815260200160098054610b649061116a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b909061116a565b8015610bdd5780601f10610bb257610100808354040283529160200191610bdd565b820191906000526020600020905b815481529060010190602001808311610bc057829003601f168201915b5050505050815250905090565b6002805461032a9061116a565b828054610c039061116a565b90600052602060002090601f016020900481019282610c255760008555610c6b565b82601f10610c3e57805160ff1916838001178555610c6b565b82800160010185558215610c6b579182015b82811115610c6b578251825591602001919060010190610c50565b50610c77929150610c7b565b5090565b5b80821115610c775760008155600101610c7c565b805b82525050565b60208101610ca68284610c90565b92915050565b60006001600160a01b038216610ca6565b610cc681610cac565b811461053357600080fd5b8035610ca681610cbd565b600060208284031215610cf157610cf1600080fd5b6000610cfd8484610cd1565b949350505050565b60005b83811015610d20578181015183820152602001610d08565b83811115610d2f576000848401525b50505050565b6000610d3f825190565b808452602084019350610d56818560208601610d05565b601f01601f19169290920192915050565b60208082528101610d788184610d35565b9392505050565b80610cc6565b8035610ca681610d7f565b600060208284031215610da557610da5600080fd5b6000610cfd8484610d85565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610ded57610ded610db1565b6040525050565b6000610dff60405190565b9050610e0b8282610dc7565b919050565b600067ffffffffffffffff821115610e2a57610e2a610db1565b601f19601f83011660200192915050565b82818337506000910152565b6000610e5a610e5584610e10565b610df4565b905082815260208101848484011115610e7557610e75600080fd5b610e80848285610e3b565b509392505050565b600082601f830112610e9c57610e9c600080fd5b8135610cfd848260208601610e47565b600060208284031215610ec157610ec1600080fd5b813567ffffffffffffffff811115610edb57610edb600080fd5b610cfd84828501610e88565b801515610c92565b60208101610ca68284610ee7565b610c9281610cac565b60208101610ca68284610efd565b6000610f208383610efd565b505060200190565b6000610f32825190565b80845260209384019383018060005b83811015610f66578151610f558882610f14565b975060208301925050600101610f41565b509495945050505050565b60208082528101610d788184610f28565b6000610d788383610d35565b6000610f98825190565b80845260208401935083602082028501610fb28560200190565b8060005b85811015610fe75784840389528151610fcf8582610f82565b94506020830160209a909a0199925050600101610fb6565b5091979650505050505050565b6000610ffe825190565b80845260209384019383018060005b83811015610f665781516110218882610f14565b97506020830192505060010161100d565b80516000906101608401906110478582610c90565b506020830151848203602086015261105f8282610d35565b915050604083015184820360408601526110798282610d35565b915050606083015184820360608601526110938282610d35565b915050608083015184820360808601526110ad8282610f8e565b91505060a08301516110c260a0860182610c90565b5060c08301516110d560c0860182610c90565b5060e08301516110e860e0860182610ee7565b506101008301518482036101008601526111028282610f8e565b91505061012083015184820361012086015261111e8282610ff4565b91505061014083015184820361014086015261113a8282610d35565b95945050505050565b60208082528101610d788184611032565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061117e57607f821691505b6020821081141561119157611191611154565b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111bf576111bf611197565b500390565b600082198211156111d7576111d7611197565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e37d634245aefc9957a59e1d24925cd99470a47dbc70a7c52245f653929435db64736f6c634300080b0033a2646970667358221220284b6c7c7b80ce24160c08ec9d93393fb15f2cd37c3258c9ac6ab12815d8b69464736f6c634300080b0033a264697066735822122000a2c96cdf40dad1f9f4acbc722653e2ef3aa21f85e6ec4ff7ff6eacfac0d51964736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1230,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1234,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}