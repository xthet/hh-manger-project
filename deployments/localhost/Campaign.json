{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_crowdfunder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tags",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CampaignCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CreatorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        }
      ],
      "name": "FundingRecieved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aggrDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "c_state",
      "outputs": [
        {
          "internalType": "enum Campaign.C_State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_rewardable",
          "type": "bool"
        }
      ],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "entDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "i_creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "s_title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s_description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s_category",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s_tags",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "enum Campaign.C_State",
              "name": "currentC_State",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "s_imageURI",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s_campaignURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct Campaign.CampaignObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceID",
          "type": "uint256"
        }
      ],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardKeys",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_creator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_rpic",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_perks",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_infinite",
          "type": "bool"
        },
        {
          "internalType": "string[]",
          "name": "_shipsTo",
          "type": "string[]"
        }
      ],
      "name": "makeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_campaignURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_category",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_imageURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_tags",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_upkeepCreatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "timeBox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        }
      ],
      "name": "updateCampaignURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_addedDur",
          "type": "uint256"
        }
      ],
      "name": "updateDur",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf637eaea1dcd7221a1366f56fa31ba0534562ca476c91b593c62ff7428164254",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "6016811",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x1e3980a2436e87307af6b9b39a901bfdf55bfcc741c9c5f008cc42689699cea4",
    "transactionHash": "0xf637eaea1dcd7221a1366f56fa31ba0534562ca476c91b593c62ff7428164254",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "6016811",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "Piratopia: Raiders of Pirate Bay",
    "A P2E masterpiece on the AVAX chain",
    "P2E",
    "arcade games/adventure games/web3 gaming",
    "6750000000000000000",
    "1296000",
    "ipfs://QmV9inF2YC5MFUHWwWaCBEVJzj9aGSKmpay7mPSJDjBC4w"
  ],
  "numDeployments": 1,
  "solcInputHash": "117923f66ed2b3a03d795762766996ad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_crowdfunder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tags\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CampaignCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CreatorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"FundingRecieved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aggrDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"c_state\",\"outputs\":[{\"internalType\":\"enum Campaign.C_State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_rewardable\",\"type\":\"bool\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"i_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"s_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s_category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s_tags\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Campaign.C_State\",\"name\":\"currentC_State\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"s_imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s_campaignURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct Campaign.CampaignObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceID\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardKeys\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_creator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_rpic\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_perks\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_infinite\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"_shipsTo\",\"type\":\"string[]\"}],\"name\":\"makeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_campaignURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_category\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_imageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_upkeepCreatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"timeBox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"}],\"name\":\"updateCampaignURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_addedDur\",\"type\":\"uint256\"}],\"name\":\"updateDur\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice OnchainConfig of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct OnchainConfig {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint32 maxCheckDataSize;\\n  uint32 maxPerformDataSize;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member totalPremium the total premium collected on registry so far\\n * @member numUpkeeps total number of upkeeps on the registry\\n * @member configCount ordinal number of current config, out of all configs applied to this contract so far\\n * @member latestConfigBlockNumber last block at which this config was set\\n * @member latestConfigDigest domain-separation tag for current config\\n * @member latestEpoch for which a report was transmitted\\n * @member paused freeze on execution scoped to the entire registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint96 totalPremium;\\n  uint256 numUpkeeps;\\n  uint32 configCount;\\n  uint32 latestConfigBlockNumber;\\n  bytes32 latestConfigDigest;\\n  uint32 latestEpoch;\\n  bool paused;\\n}\\n\\n/**\\n * @notice all information about an upkeep\\n * @dev only used in return values\\n * @member target the contract which needs to be serviced\\n * @member executeGas the gas limit of upkeep execution\\n * @member checkData the checkData bytes for this upkeep\\n * @member balance the balance of this upkeep\\n * @member admin for this upkeep\\n * @member maxValidBlocknumber until which block this upkeep is valid\\n * @member lastPerformBlockNumber the last block number when this upkeep was performed\\n * @member amountSpent the amount this upkeep has spent\\n * @member paused if this upkeep has been paused\\n * @member skipSigVerification skip signature verification in transmit for a low security low cost model\\n */\\nstruct UpkeepInfo {\\n  address target;\\n  uint32 executeGas;\\n  bytes checkData;\\n  uint96 balance;\\n  address admin;\\n  uint64 maxValidBlocknumber;\\n  uint32 lastPerformBlockNumber;\\n  uint96 amountSpent;\\n  bool paused;\\n  bytes offchainConfig;\\n}\\n\\nenum UpkeepFailureReason {\\n  NONE,\\n  UPKEEP_CANCELLED,\\n  UPKEEP_PAUSED,\\n  TARGET_CHECK_REVERTED,\\n  UPKEEP_NOT_NEEDED,\\n  PERFORM_DATA_EXCEEDS_LIMIT,\\n  INSUFFICIENT_BALANCE\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData,\\n    bytes calldata offchainConfig\\n  ) external returns (uint256 id);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function pauseUpkeep(uint256 id) external;\\n\\n  function unpauseUpkeep(uint256 id) external;\\n\\n  function transferUpkeepAdmin(uint256 id, address proposed) external;\\n\\n  function acceptUpkeepAdmin(uint256 id) external;\\n\\n  function updateCheckData(uint256 id, bytes calldata newCheckData) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function setUpkeepOffchainConfig(uint256 id, bytes calldata config) external;\\n\\n  function getUpkeep(uint256 id) external view returns (UpkeepInfo memory upkeepInfo);\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getTransmitterInfo(address query)\\n    external\\n    view\\n    returns (\\n      bool active,\\n      uint8 index,\\n      uint96 balance,\\n      uint96 lastCollected,\\n      address payee\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory state,\\n      OnchainConfig memory config,\\n      address[] memory signers,\\n      address[] memory transmitters,\\n      uint8 f\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    view\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId)\\n    external\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory performData,\\n      UpkeepFailureReason upkeepFailureReason,\\n      uint256 gasUsed,\\n      uint256 fastGasWei,\\n      uint256 linkNative\\n    );\\n}\\n\",\"keccak256\":\"0x9faf0551509440bd9c25a4a2f14b23bce2f82e5ab5691058b9664edab808468c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport { UpkeepIDConsumer } from \\\"./UpkeepIDConsumer.sol\\\";\\r\\nimport { Reward } from \\\"./Reward.sol\\\";\\r\\nimport { LinkTokenInterface } from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\n// error Cmp_NIS(); /**not in state */\\r\\n// error Cmp_NotCrtr();\\r\\n// error Cmp_DIC(); /**donator is creator */\\r\\n// error Cmp_NoDns();\\r\\n// error Cmp_RefF();\\r\\n// error Cmp_UpkNN();\\r\\n// error Cmp_NotRef();\\r\\n// error Cmp_Bankrupt();\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface, ReentrancyGuard{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address immutable private i_crf;\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_initTimeStamp;\\r\\n  uint256 private constant i_maxDur = 5184000;\\r\\n  uint256 public deadline;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  // mapping (uint256 => reward) public rewards;\\r\\n  mapping (uint256 => address) public rewards;\\r\\n  mapping (address => uint256[]) public entDonations;\\r\\n  mapping (address => uint256) public aggrDonations;\\r\\n\\r\\n  uint256[] public rKeys;\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (\\r\\n    address _crowdfunder,\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n  ) {\\r\\n    i_crf = _crowdfunder;\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_initTimeStamp = block.timestamp;\\r\\n    duration = _duration > i_maxDur ? i_maxDur : _duration;\\r\\n    deadline = i_initTimeStamp.add(duration);\\r\\n    s_imageURI = _imageURI;\\r\\n    currentBalance = 0;\\r\\n  }\\r\\n\\r\\n  function timeBox(address _upkeepCreatorAddress, address _linkTokenAddress, address _campaignAddress) external isCreator {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(_upkeepCreatorAddress);\\r\\n    LinkTokenInterface token = LinkTokenInterface(_linkTokenAddress);\\r\\n    if(token.balanceOf(_upkeepCreatorAddress) == 0){revert(\\\"no funds\\\");}\\r\\n    rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", _campaignAddress, 500000, i_creator, \\\"0x\\\", \\\"0x\\\", 2000000000000000000);\\r\\n  }\\r\\n\\r\\n  function donate(address _donator, bool _rewardable) public payable nonReentrant{\\r\\n    if(msg.sender != i_crf){revert();}\\r\\n    if(c_state != C_State.Fundraising){revert();}\\r\\n    if(_donator == i_creator){revert();}\\r\\n    if(_rewardable){\\r\\n      if(rewards[msg.value] != address(0)){\\r\\n        (bool success, ) = rewards[msg.value].call(abi.encodeWithSignature(\\\"addDonator(address)\\\", _donator));\\r\\n        if(!success){revert();}\\r\\n        entDonations[_donator].push(msg.value);\\r\\n      }\\r\\n    }\\r\\n    aggrDonations[_donator] = aggrDonations[_donator].add(msg.value); \\r\\n    emit FundingRecieved(_donator, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp.sub(i_initTimeStamp)) > duration);\\r\\n    upkeepNeeded = (timePassed && isOpen);\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  function payout() external isCreator{\\r\\n    if(c_state != C_State.Expired){revert();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) external nonReentrant{\\r\\n    if(msg.sender != i_crf){revert();}\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    if(aggrDonations[_donator] == 0 ){revert();}\\r\\n    uint256 amountToRefund = aggrDonations[_donator];\\r\\n    if(currentBalance < amountToRefund){revert();}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert();}\\r\\n    delete(aggrDonations[_donator]);\\r\\n    if(entDonations[_donator].length > 0){    for(uint i=0; i<entDonations[_donator].length; i++){\\r\\n      Reward(rewards[i]).removeDonator(_donator);\\r\\n    }}\\r\\n    delete entDonations[_donator];\\r\\n  }\\r\\n\\r\\n  function makeReward( \\r\\n    uint256 _price, string memory _title, \\r\\n    string memory _description, string memory _rpic,\\r\\n    string[] memory _perks, \\r\\n    uint256 _deadline, uint256 _quantity, bool _infinite, \\r\\n    string[] memory _shipsTo\\r\\n    ) external isCreator {\\r\\n    if(rewards[_price] != address(0)){revert();}\\r\\n    rKeys.push(_price);\\r\\n    Reward newReward = new Reward(address(this), i_creator, _price, _title, _description, _rpic, _perks, _deadline, _quantity, _infinite, _shipsTo);\\r\\n    rewards[_price] = address(newReward);\\r\\n  }\\r\\n\\r\\n  function endCampaign() external isCreator {\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateCampaignURI(string memory _campaignURI) external isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  function updateDur(uint256 _addedDur) external isCreator {\\r\\n    duration = ((duration.add(_addedDur)) > i_maxDur) ? i_maxDur : duration.add(_addedDur);\\r\\n    deadline = i_initTimeStamp.add(duration);\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getRewardKeys() external view returns(uint256[] memory){\\r\\n    return rKeys;\\r\\n  }\\r\\n  \\r\\n  function getReward(uint256 _priceID) external view {\\r\\n    Reward reward = Reward(rewards[_priceID]);\\r\\n    reward.getRewardDetails();\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() external view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title,\\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      deadline\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x0c2f3525f61aa983a5aacd42b5a0edfa0f64f65d0d86d030d5b0c672a1cb641c\",\"license\":\"MIT\"},\"contracts/Reward.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\ncontract Reward {\\r\\n  address public immutable i_campaignAddress;\\r\\n  // address public immutable i_crf;\\r\\n  address public immutable i_creator;\\r\\n\\r\\n  uint256 public immutable i_price;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string public rpic;\\r\\n  string[] public perks;\\r\\n  uint256 public delDate;\\r\\n  uint256 public quantity;\\r\\n  bool public infinite = true;\\r\\n  string[] public shipsTo;\\r\\n  address[] public donators;\\r\\n  string public surveyLink;\\r\\n\\r\\n  struct rewardObject {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string rpic;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n    address[] donators;\\r\\n    string surveyLink;\\r\\n  }\\r\\n\\r\\n  mapping (address => uint256) public true_donator;  \\r\\n  mapping (address => string) public surveyResponses;\\r\\n\\r\\n  constructor ( \\r\\n    address _campaignAddress, \\r\\n    address _creator,\\r\\n    uint256 _price, \\r\\n    string memory _title, \\r\\n    string memory _description, \\r\\n    string memory _rpic,\\r\\n    string[] memory _perks, \\r\\n    uint256 _deadline, \\r\\n    uint256 _quantity, \\r\\n    bool _infinite, \\r\\n    string[] memory _shipsTo\\r\\n    ) {\\r\\n    i_price = _price;\\r\\n    i_campaignAddress = _campaignAddress;\\r\\n    i_creator = _creator;\\r\\n\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    rpic = _rpic;\\r\\n    perks = _perks;\\r\\n    delDate = _deadline;\\r\\n    quantity = _quantity;\\r\\n    infinite = _infinite;\\r\\n    shipsTo = _shipsTo;\\r\\n  }\\r\\n\\r\\n  function updateSurveyLink(string memory _surveylink) external {\\r\\n    if(msg.sender != i_creator){revert();}\\r\\n    surveyLink = _surveylink;\\r\\n  }\\r\\n\\r\\n  function addDonator(address _donator) external {\\r\\n    if(msg.sender != i_campaignAddress){revert();}\\r\\n    if((true_donator[_donator] > 0)){revert();} // already has id ...has therefor donated for this reward before\\r\\n\\r\\n    if(!infinite){\\r\\n      if(quantity > 0){\\r\\n        quantity = quantity - 1;\\r\\n        uint256 currNo = donators.length; // get array length\\r\\n        true_donator[_donator] = currNo + 1; \\r\\n        donators.push(_donator);\\r\\n      }else{revert();} // rwd has finished no longer available\\r\\n    }else{\\r\\n      uint256 currNo = donators.length; // get array length\\r\\n      true_donator[_donator] = currNo + 1; \\r\\n      donators.push(_donator);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getDonators() external view returns(address[] memory){\\r\\n    return donators;\\r\\n  }\\r\\n\\r\\n  function removeDonator(address _donator) external {\\r\\n    if(msg.sender != i_campaignAddress){revert();}\\r\\n    if(!(true_donator[_donator] > 0)){revert();} // not a donator\\r\\n    uint256 index = true_donator[_donator] - 1;\\r\\n    delete donators[index];\\r\\n    delete true_donator[_donator];\\r\\n  }\\r\\n\\r\\n  // function getValidDonator(address _donator) external view returns(bool) {\\r\\n  //   if((true_donator[_donator] > 0)){\\r\\n  //     return false;\\r\\n  //   }else{return true;}\\r\\n  // }\\r\\n\\r\\n  function respondToSurvey(string memory _response) external {\\r\\n    if(!(true_donator[msg.sender] > 0)){revert();} // not a donator\\r\\n    surveyResponses[msg.sender] = _response;\\r\\n  }\\r\\n\\r\\n  function getRewardDetails() external view returns(rewardObject memory){\\r\\n    return rewardObject(\\r\\n      i_price,\\r\\n      title,\\r\\n      description,\\r\\n      rpic,\\r\\n      perks,\\r\\n      delDate,\\r\\n      quantity,\\r\\n      infinite,\\r\\n      shipsTo,\\r\\n      donators,\\r\\n      surveyLink\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x70f2e8af5a77a7e0ff870182a65f31b7bf736f46cef90583db5c3375ead59989\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n// UpkeepIDConsumerExample.sol imports functions from both ./AutomationRegistryInterface2_0.sol and\\r\\n// ./interfaces/LinkTokenInterface.sol\\r\\n\\r\\nimport {AutomationRegistryInterface, State, OnchainConfig} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface2_0.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\n/**\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\\r\\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\\r\\n * DO NOT USE THIS CODE IN PRODUCTION.\\r\\n */\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n    function register(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount,\\r\\n        address sender\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n    LinkTokenInterface public immutable i_link;\\r\\n    address public immutable registrar;\\r\\n    AutomationRegistryInterface public immutable i_registry;\\r\\n    bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n    constructor(\\r\\n        LinkTokenInterface _link,\\r\\n        address _registrar,\\r\\n        AutomationRegistryInterface _registry\\r\\n    ) {\\r\\n        i_link = _link;\\r\\n        registrar = _registrar;\\r\\n        i_registry = _registry;\\r\\n    }\\r\\n\\r\\n    function registerAndPredictID(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        bytes calldata offchainConfig,\\r\\n        uint96 amount\\r\\n    ) public returns(uint256) {\\r\\n        (State memory state, , , , ) = i_registry.getState();\\r\\n        uint256 oldNonce = state.nonce;\\r\\n        bytes memory payload = abi.encode(\\r\\n            name,\\r\\n            encryptedEmail,\\r\\n            upkeepContract,\\r\\n            gasLimit,\\r\\n            adminAddress,\\r\\n            checkData,\\r\\n            offchainConfig,\\r\\n            amount,\\r\\n            address(this)\\r\\n        );\\r\\n\\r\\n        i_link.transferAndCall(\\r\\n            registrar,\\r\\n            amount,\\r\\n            bytes.concat(registerSig, payload)\\r\\n        );\\r\\n        (state, , , , ) = i_registry.getState();\\r\\n        uint256 newNonce = state.nonce;\\r\\n        if (newNonce == oldNonce + 1) {\\r\\n            uint256 upkeepID = uint256(\\r\\n                keccak256(\\r\\n                    abi.encodePacked(\\r\\n                        blockhash(block.number - 1),\\r\\n                        address(i_registry),\\r\\n                        uint32(oldNonce)\\r\\n                    )\\r\\n                )\\r\\n            );\\r\\n            // DEV - Use the upkeepID however you see fit\\r\\n            return upkeepID;\\r\\n        } else {\\r\\n            revert(\\\"auto-approve disabled\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1712d2ac002e57e74e5367f9a88c9466f935fada95bd9ad98111e434110f0b3f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610620001ee5760003560e01c80636235887a116200010f578063b145603e11620000a3578063ce845d1d116200006d578063ce845d1d14620006ae578063f301af4214620006de578063fa6ded391462000722578063fa89401a146200075057620001ee565b8063b145603e14620005ee578063bf66e2c8146200061e578063c5cd5078146200064e578063ce2a0572146200067e57620001ee565b80636e60eef711620000e55780636e60eef7146200055657806371aac7f914620005845780637be4bae1146200059e57806399a8502d14620005be57620001ee565b80636235887a14620004b357806363bd1d4a14620004f75780636e04ff0d146200051157620001ee565b806329dcb0cf11620001875780634d695bdb116200015d5780634d695bdb14620003f75780634ef8971914620004255780635f700266146200045557806360fa9a72146200048357620001ee565b806329dcb0cf14620003695780634278ac8b14620003995780634585e33b14620003c957620001ee565b806315a46ee611620001c957806315a46ee614620002975780631774d96014620002c75780631c4b774b146200030b5780632636b945146200033957620001ee565b806309917c5014620001f35780630c611f2414620002375780630fb5a6b41462000267575b600080fd5b3480156200020057600080fd5b506200021f6004803603810190620002199190620024fd565b6200077e565b6040516200022e91906200254a565b60405180910390f35b3480156200024457600080fd5b506200024f62000796565b6040516200025e9190620027ec565b60405180910390f35b3480156200027457600080fd5b506200027f62000bc5565b6040516200028e91906200254a565b60405180910390f35b348015620002a457600080fd5b50620002af62000bcb565b604051620002be919062002862565b60405180910390f35b348015620002d457600080fd5b50620002f36004803603810190620002ed9190620028b7565b62000c61565b6040516200030291906200254a565b60405180910390f35b3480156200031857600080fd5b50620003376004803603810190620003319190620028fe565b62000c93565b005b3480156200034657600080fd5b506200035162000d57565b6040516200036091906200254a565b60405180910390f35b3480156200037657600080fd5b506200038162000d5d565b6040516200039091906200254a565b60405180910390f35b348015620003a657600080fd5b50620003b162000d63565b604051620003c0919062002862565b60405180910390f35b348015620003d657600080fd5b50620003f56004803603810190620003ef91906200299e565b62000df9565b005b3480156200040457600080fd5b506200042360048036038101906200041d919062002b3f565b62000e8f565b005b3480156200043257600080fd5b506200043d62000f04565b6040516200044c919062002862565b60405180910390f35b3480156200046257600080fd5b506200048160048036038101906200047b919062002b90565b62000f9a565b005b3480156200049057600080fd5b506200049b620011a4565b604051620004aa919062002bfd565b60405180910390f35b348015620004c057600080fd5b50620004df6004803603810190620004d99190620028fe565b620011b7565b604051620004ee91906200254a565b60405180910390f35b3480156200050457600080fd5b506200050f620011dc565b005b3480156200051e57600080fd5b506200053d600480360381019062000537919062002cce565b6200138c565b6040516200054d92919062002d99565b60405180910390f35b3480156200056357600080fd5b506200058260048036038101906200057c919062002ef5565b6200145c565b005b3480156200059157600080fd5b506200059c6200161a565b005b620005bc6004803603810190620005b691906200306f565b62001717565b005b348015620005cb57600080fd5b50620005d662001b6f565b604051620005e5919062002862565b60405180910390f35b348015620005fb57600080fd5b506200060662001c05565b604051620006159190620030db565b60405180910390f35b3480156200062b57600080fd5b506200063662001c29565b604051620006459190620031b5565b60405180910390f35b3480156200065b57600080fd5b506200066662001c83565b60405162000675919062002862565b60405180910390f35b3480156200068b57600080fd5b506200069662001d19565b604051620006a5919062002862565b60405180910390f35b348015620006bb57600080fd5b50620006c662001daf565b604051620006d591906200254a565b60405180910390f35b348015620006eb57600080fd5b506200070a6004803603810190620007049190620028fe565b62001db5565b604051620007199190620031ea565b60405180910390f35b3480156200072f57600080fd5b506200074e6004803603810190620007489190620028fe565b62001de8565b005b3480156200075d57600080fd5b506200077c6004803603810190620007769190620024fd565b62001eca565b005b600f6020528060005260406000206000915090505481565b620007a062002317565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200160018054620007f79062003236565b80601f0160208091040260200160405190810160405280929190818152602001828054620008259062003236565b8015620008765780601f106200084a5761010080835404028352916020019162000876565b820191906000526020600020905b8154815290600101906020018083116200085857829003601f168201915b50505050508152602001600280546200088f9062003236565b80601f0160208091040260200160405190810160405280929190818152602001828054620008bd9062003236565b80156200090e5780601f10620008e2576101008083540402835291602001916200090e565b820191906000526020600020905b815481529060010190602001808311620008f057829003601f168201915b5050505050815260200160038054620009279062003236565b80601f0160208091040260200160405190810160405280929190818152602001828054620009559062003236565b8015620009a65780601f106200097a57610100808354040283529160200191620009a6565b820191906000526020600020905b8154815290600101906020018083116200098857829003601f168201915b5050505050815260200160068054620009bf9062003236565b80601f0160208091040260200160405190810160405280929190818152602001828054620009ed9062003236565b801562000a3e5780601f1062000a125761010080835404028352916020019162000a3e565b820191906000526020600020905b81548152906001019060200180831162000a2057829003601f168201915b50505050508152602001600754815260200160085481526020016009548152602001600b60009054906101000a900460ff16600281111562000a855762000a846200262d565b5b81526020016004805462000a999062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462000ac79062003236565b801562000b185780601f1062000aec5761010080835404028352916020019162000b18565b820191906000526020600020905b81548152906001019060200180831162000afa57829003601f168201915b505050505081526020016005805462000b319062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462000b5f9062003236565b801562000bb05780601f1062000b845761010080835404028352916020019162000bb0565b820191906000526020600020905b81548152906001019060200180831162000b9257829003601f168201915b50505050508152602001600a54815250905090565b60085481565b6005805462000bda9062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462000c089062003236565b801562000c595780601f1062000c2d5761010080835404028352916020019162000c59565b820191906000526020600020905b81548152906001019060200180831162000c3b57829003601f168201915b505050505081565b600e602052816000526040600020818154811062000c7e57600080fd5b90600052602060002001600091509150505481565b6000600d600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663d0c402766040518163ffffffff1660e01b815260040160006040518083038186803b15801562000d1257600080fd5b505afa15801562000d27573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000d529190620036d7565b505050565b60075481565b600a5481565b6003805462000d729062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462000da09062003236565b801562000df15780601f1062000dc55761010080835404028352916020019162000df1565b820191906000526020600020905b81548152906001019060200180831162000dd357829003601f168201915b505050505081565b600062000e15604051806020016040528060008152506200138c565b5090508062000e2357600080fd5b6001600b60006101000a81548160ff0219169083600281111562000e4c5762000e4b6200262d565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d3060405162000e829190620031ea565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000ee857600080fd5b806005908051906020019062000f00929190620023a3565b5050565b6002805462000f139062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462000f419062003236565b801562000f925780601f1062000f665761010080835404028352916020019162000f92565b820191906000526020600020905b81548152906001019060200180831162000f7457829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000ff357600080fd5b6000839050600083905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016200103a9190620031ea565b60206040518083038186803b1580156200105357600080fd5b505afa15801562001068573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200108e919062003728565b1415620010d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620010c990620037aa565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16634c7e9be36001856207a1207f0000000000000000000000000000000000000000000000000000000000000000671bc16d674ec800006040518663ffffffff1660e01b815260040162001141959493929190620039d6565b602060405180830381600087803b1580156200115c57600080fd5b505af115801562001171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001197919062003728565b600c819055505050505050565b600b60009054906101000a900460ff1681565b60108181548110620011c857600080fd5b906000526020600020016000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200123557600080fd5b600160028111156200124c576200124b6200262d565b5b600b60009054906101000a900460ff1660028111156200127157620012706200262d565b5b146200127c57600080fd5b60006009549050600060098190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051620012d39062003aaf565b60006040518083038185875af1925050503d806000811462001312576040519150601f19603f3d011682016040523d82523d6000602084013e62001317565b606091505b50509050801562001383577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516200137592919062003ac6565b60405180910390a162001388565b600080fd5b5050565b600060606000806002811115620013a857620013a76200262d565b5b600b60009054906101000a900460ff166002811115620013cd57620013cc6200262d565b5b14905060006008546200140a7f000000000000000000000000000000000000000000000000000000000000000042620022ff90919063ffffffff16565b119050808015620014185750815b9350836040518060400160405280600381526020017f3078300000000000000000000000000000000000000000000000000000000000815250935093505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620014b557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600d60008b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200152257600080fd5b60108990806001815401808255809150506001900390600052602060002001600090919091909150556000307f00000000000000000000000000000000000000000000000000000000000000008b8b8b8b8b8b8b8b8b604051620015869062002434565b6200159c9b9a9998979695949392919062003bc3565b604051809103906000f080158015620015b9573d6000803e3d6000fd5b50905080600d60008c815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200167357600080fd5b600160028111156200168a57620016896200262d565b5b600b60009054906101000a900460ff166002811115620016af57620016ae6200262d565b5b1415620016bb57600080fd5b6002600b60006101000a81548160ff02191690836002811115620016e457620016e36200262d565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b6002600054141562001760576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017579062003cf7565b60405180910390fd5b60026000819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620017c157600080fd5b60006002811115620017d857620017d76200262d565b5b600b60009054906101000a900460ff166002811115620017fd57620017fc6200262d565b5b146200180857600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200186257600080fd5b801562001a7857600073ffffffffffffffffffffffffffffffffffffffff16600d600034815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462001a77576000600d600034815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051602401620019309190620031ea565b6040516020818303038152906040527fa052f024000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620019bc919062003d50565b6000604051808303816000865af19150503d8060008114620019fb576040519150601f19603f3d011682016040523d82523d6000602084013e62001a00565b606091505b505090508062001a0f57600080fd5b600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020349080600181540180825580915050600190039060005260206000200160009091909190915055505b5b62001acc34600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620022e790919063ffffffff16565b600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca26749235512083460095460405162001b5b92919062003d69565b60405180910390a260016000819055505050565b6001805462001b7e9062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462001bac9062003236565b801562001bfd5780601f1062001bd15761010080835404028352916020019162001bfd565b820191906000526020600020905b81548152906001019060200180831162001bdf57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060601080548060200260200160405190810160405280929190818152602001828054801562001c7957602002820191906000526020600020905b81548152602001906001019080831162001c64575b5050505050905090565b6006805462001c929062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462001cc09062003236565b801562001d115780601f1062001ce55761010080835404028352916020019162001d11565b820191906000526020600020905b81548152906001019060200180831162001cf357829003601f168201915b505050505081565b6004805462001d289062003236565b80601f016020809104026020016040519081016040528092919081815260200182805462001d569062003236565b801562001da75780601f1062001d7b5761010080835404028352916020019162001da7565b820191906000526020600020905b81548152906001019060200180831162001d8957829003601f168201915b505050505081565b60095481565b600d6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001e4157600080fd5b624f1a0062001e5c82600854620022e790919063ffffffff16565b1162001e7f5762001e7981600854620022e790919063ffffffff16565b62001e84565b624f1a005b60088190555062001ec16008547f0000000000000000000000000000000000000000000000000000000000000000620022e790919063ffffffff16565b600a8190555050565b6002600054141562001f13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001f0a9062003cf7565b60405180910390fd5b60026000819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001f7457600080fd5b6001600281111562001f8b5762001f8a6200262d565b5b600b60009054906101000a900460ff16600281111562001fb05762001faf6200262d565b5b141562001fbc57600080fd5b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156200200a57600080fd5b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060095410156200205e57600080fd5b6200207581600954620022ff90919063ffffffff16565b60098190555060008273ffffffffffffffffffffffffffffffffffffffff1682604051620020a39062003aaf565b60006040518083038185875af1925050503d8060008114620020e2576040519150601f19603f3d011682016040523d82523d6000602084013e620020e7565b606091505b5050905080620020f657600080fd5b600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556000600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011156200228d5760005b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156200228b57600d600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c91e986d856040518263ffffffff1660e01b8152600401620022419190620031ea565b600060405180830381600087803b1580156200225c57600080fd5b505af115801562002271573d6000803e3d6000fd5b505050508080620022829062003dc5565b91505062002188565b505b600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000620022da919062002442565b5050600160008190555050565b60008183620022f7919062003e13565b905092915050565b600081836200230f919062003e70565b905092915050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156200238857620023876200262d565b5b81526020016060815260200160608152602001600081525090565b828054620023b19062003236565b90600052602060002090601f016020900481019282620023d5576000855562002421565b82601f10620023f057805160ff191683800117855562002421565b8280016001018555821562002421579182015b828111156200242057825182559160200191906001019062002403565b5b50905062002430919062002465565b5090565b61264a8062003eac83390190565b508054600082559060005260206000209081019062002462919062002465565b50565b5b808211156200248057600081600090555060010162002466565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620024c58262002498565b9050919050565b620024d781620024b8565b8114620024e357600080fd5b50565b600081359050620024f781620024cc565b92915050565b6000602082840312156200251657620025156200248e565b5b60006200252684828501620024e6565b91505092915050565b6000819050919050565b62002544816200252f565b82525050565b600060208201905062002561600083018462002539565b92915050565b6200257281620024b8565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620025b457808201518184015260208101905062002597565b83811115620025c4576000848401525b50505050565b6000601f19601f8301169050919050565b6000620025e88262002578565b620025f4818562002583565b93506200260681856020860162002594565b6200261181620025ca565b840191505092915050565b62002627816200252f565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811062002670576200266f6200262d565b5b50565b600081905062002683826200265c565b919050565b6000620026958262002673565b9050919050565b620026a78162002688565b82525050565b600061018083016000830151620026c8600086018262002567565b5060208301518482036020860152620026e28282620025db565b91505060408301518482036040860152620026fe8282620025db565b915050606083015184820360608601526200271a8282620025db565b91505060808301518482036080860152620027368282620025db565b91505060a08301516200274d60a08601826200261c565b5060c08301516200276260c08601826200261c565b5060e08301516200277760e08601826200261c565b506101008301516200278e6101008601826200269c565b50610120830151848203610120860152620027aa8282620025db565b915050610140830151848203610140860152620027c88282620025db565b915050610160830151620027e16101608601826200261c565b508091505092915050565b60006020820190508181036000830152620028088184620026ad565b905092915050565b600082825260208201905092915050565b60006200282e8262002578565b6200283a818562002810565b93506200284c81856020860162002594565b6200285781620025ca565b840191505092915050565b600060208201905081810360008301526200287e818462002821565b905092915050565b62002891816200252f565b81146200289d57600080fd5b50565b600081359050620028b18162002886565b92915050565b60008060408385031215620028d157620028d06200248e565b5b6000620028e185828601620024e6565b9250506020620028f485828601620028a0565b9150509250929050565b6000602082840312156200291757620029166200248e565b5b60006200292784828501620028a0565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011262002958576200295762002930565b5b8235905067ffffffffffffffff81111562002978576200297762002935565b5b6020830191508360018202830111156200299757620029966200293a565b5b9250929050565b60008060208385031215620029b857620029b76200248e565b5b600083013567ffffffffffffffff811115620029d957620029d862002493565b5b620029e7858286016200293f565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62002a3282620025ca565b810181811067ffffffffffffffff8211171562002a545762002a53620029f8565b5b80604052505050565b600062002a6962002484565b905062002a77828262002a27565b919050565b600067ffffffffffffffff82111562002a9a5762002a99620029f8565b5b62002aa582620025ca565b9050602081019050919050565b82818337600083830152505050565b600062002ad862002ad28462002a7c565b62002a5d565b90508281526020810184848401111562002af75762002af6620029f3565b5b62002b0484828562002ab2565b509392505050565b600082601f83011262002b245762002b2362002930565b5b813562002b3684826020860162002ac1565b91505092915050565b60006020828403121562002b585762002b576200248e565b5b600082013567ffffffffffffffff81111562002b795762002b7862002493565b5b62002b878482850162002b0c565b91505092915050565b60008060006060848603121562002bac5762002bab6200248e565b5b600062002bbc86828701620024e6565b935050602062002bcf86828701620024e6565b925050604062002be286828701620024e6565b9150509250925092565b62002bf78162002688565b82525050565b600060208201905062002c14600083018462002bec565b92915050565b600067ffffffffffffffff82111562002c385762002c37620029f8565b5b62002c4382620025ca565b9050602081019050919050565b600062002c6762002c618462002c1a565b62002a5d565b90508281526020810184848401111562002c865762002c85620029f3565b5b62002c9384828562002ab2565b509392505050565b600082601f83011262002cb35762002cb262002930565b5b813562002cc584826020860162002c50565b91505092915050565b60006020828403121562002ce75762002ce66200248e565b5b600082013567ffffffffffffffff81111562002d085762002d0762002493565b5b62002d168482850162002c9b565b91505092915050565b60008115159050919050565b62002d368162002d1f565b82525050565b600081519050919050565b600082825260208201905092915050565b600062002d658262002d3c565b62002d71818562002d47565b935062002d8381856020860162002594565b62002d8e81620025ca565b840191505092915050565b600060408201905062002db0600083018562002d2b565b818103602083015262002dc4818462002d58565b90509392505050565b600067ffffffffffffffff82111562002deb5762002dea620029f8565b5b602082029050602081019050919050565b600062002e1362002e0d8462002dcd565b62002a5d565b9050808382526020820190506020840283018581111562002e395762002e386200293a565b5b835b8181101562002e8757803567ffffffffffffffff81111562002e625762002e6162002930565b5b80860162002e71898262002b0c565b8552602085019450505060208101905062002e3b565b5050509392505050565b600082601f83011262002ea95762002ea862002930565b5b813562002ebb84826020860162002dfc565b91505092915050565b62002ecf8162002d1f565b811462002edb57600080fd5b50565b60008135905062002eef8162002ec4565b92915050565b60008060008060008060008060006101208a8c03121562002f1b5762002f1a6200248e565b5b600062002f2b8c828d01620028a0565b99505060208a013567ffffffffffffffff81111562002f4f5762002f4e62002493565b5b62002f5d8c828d0162002b0c565b98505060408a013567ffffffffffffffff81111562002f815762002f8062002493565b5b62002f8f8c828d0162002b0c565b97505060608a013567ffffffffffffffff81111562002fb35762002fb262002493565b5b62002fc18c828d0162002b0c565b96505060808a013567ffffffffffffffff81111562002fe55762002fe462002493565b5b62002ff38c828d0162002e91565b95505060a0620030068c828d01620028a0565b94505060c0620030198c828d01620028a0565b93505060e06200302c8c828d0162002ede565b9250506101008a013567ffffffffffffffff81111562003051576200305062002493565b5b6200305f8c828d0162002e91565b9150509295985092959850929598565b600080604083850312156200308957620030886200248e565b5b60006200309985828601620024e6565b9250506020620030ac8582860162002ede565b9150509250929050565b6000620030c38262002498565b9050919050565b620030d581620030b6565b82525050565b6000602082019050620030f26000830184620030ca565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006200313283836200261c565b60208301905092915050565b6000602082019050919050565b60006200315882620030f8565b62003164818562003103565b9350620031718362003114565b8060005b83811015620031a85781516200318c888262003124565b975062003199836200313e565b92505060018101905062003175565b5085935050505092915050565b60006020820190508181036000830152620031d181846200314b565b905092915050565b620031e481620024b8565b82525050565b6000602082019050620032016000830184620031d9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200324f57607f821691505b6020821081141562003266576200326562003207565b5b50919050565b600080fd5b600080fd5b600081519050620032878162002886565b92915050565b6000620032a46200329e8462002a7c565b62002a5d565b905082815260208101848484011115620032c357620032c2620029f3565b5b620032d084828562002594565b509392505050565b600082601f830112620032f057620032ef62002930565b5b8151620033028482602086016200328d565b91505092915050565b6000620033226200331c8462002dcd565b62002a5d565b905080838252602082019050602084028301858111156200334857620033476200293a565b5b835b818110156200339657805167ffffffffffffffff81111562003371576200337062002930565b5b808601620033808982620032d8565b855260208501945050506020810190506200334a565b5050509392505050565b600082601f830112620033b857620033b762002930565b5b8151620033ca8482602086016200330b565b91505092915050565b600081519050620033e48162002ec4565b92915050565b600067ffffffffffffffff821115620034085762003407620029f8565b5b602082029050602081019050919050565b6000815190506200342a81620024cc565b92915050565b6000620034476200344184620033ea565b62002a5d565b905080838252602082019050602084028301858111156200346d576200346c6200293a565b5b835b818110156200349a578062003485888262003419565b8452602084019350506020810190506200346f565b5050509392505050565b600082601f830112620034bc57620034bb62002930565b5b8151620034ce84826020860162003430565b91505092915050565b60006101608284031215620034f157620034f06200326c565b5b620034fe61016062002a5d565b90506000620035108482850162003276565b600083015250602082015167ffffffffffffffff81111562003537576200353662003271565b5b6200354584828501620032d8565b602083015250604082015167ffffffffffffffff8111156200356c576200356b62003271565b5b6200357a84828501620032d8565b604083015250606082015167ffffffffffffffff811115620035a157620035a062003271565b5b620035af84828501620032d8565b606083015250608082015167ffffffffffffffff811115620035d657620035d562003271565b5b620035e484828501620033a0565b60808301525060a0620035fa8482850162003276565b60a08301525060c0620036108482850162003276565b60c08301525060e06200362684828501620033d3565b60e08301525061010082015167ffffffffffffffff8111156200364e576200364d62003271565b5b6200365c84828501620033a0565b6101008301525061012082015167ffffffffffffffff81111562003685576200368462003271565b5b6200369384828501620034a4565b6101208301525061014082015167ffffffffffffffff811115620036bc57620036bb62003271565b5b620036ca84828501620032d8565b6101408301525092915050565b600060208284031215620036f057620036ef6200248e565b5b600082015167ffffffffffffffff81111562003711576200371062002493565b5b6200371f84828501620034d7565b91505092915050565b6000602082840312156200374157620037406200248e565b5b6000620037518482850162003276565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b60006200379260088362002810565b91506200379f826200375a565b602082019050919050565b60006020820190508181036000830152620037c58162003783565b9050919050565b60008190508160005260206000209050919050565b60008154620037f08162003236565b620037fc818662002810565b945060018216600081146200381a57600181146200382d5762003864565b60ff198316865260208601935062003864565b6200383885620037cc565b60005b838110156200385c578154818901526001820191506020810190506200383b565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000620038a560028362002d47565b9150620038b2826200386d565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b600062003902620038fc620038f684620038bd565b620038d7565b620038c7565b9050919050565b6200391481620038e1565b82525050565b60006200393b620039356200392f8462002498565b620038d7565b62002498565b9050919050565b60006200394f826200391a565b9050919050565b6000620039638262003942565b9050919050565b620039758162003956565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000620039be620039b8620039b2846200397b565b620038d7565b62003985565b9050919050565b620039d0816200399d565b82525050565b6000610100820190508181036000830152620039f38188620037e1565b9050818103602083015262003a088162003896565b905062003a196040830187620031d9565b62003a28606083018662003909565b62003a3760808301856200396a565b81810360a083015262003a4a8162003896565b905081810360c083015262003a5f8162003896565b905062003a7060e0830184620039c5565b9695505050505050565b600081905092915050565b50565b600062003a9760008362003a7a565b915062003aa48262003a85565b600082019050919050565b600062003abc8262003a88565b9150819050919050565b600060408201905062003add60008301856200396a565b62003aec6020830184620031d9565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062003b2d8383620025db565b905092915050565b6000602082019050919050565b600062003b4f8262003af3565b62003b5b818562003afe565b93508360208202850162003b6f8562003b0f565b8060005b8581101562003bb1578484038952815162003b8f858262003b1f565b945062003b9c8362003b35565b925060208a0199505060018101905062003b73565b50829750879550505050505092915050565b60006101608201905062003bdb600083018e620031d9565b62003bea602083018d6200396a565b62003bf9604083018c62002539565b818103606083015262003c0d818b62002821565b9050818103608083015262003c23818a62002821565b905081810360a083015262003c39818962002821565b905081810360c083015262003c4f818862003b42565b905062003c6060e083018762002539565b62003c7061010083018662002539565b62003c8061012083018562002d2b565b81810361014083015262003c95818462003b42565b90509c9b505050505050505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600062003cdf601f8362002810565b915062003cec8262003ca7565b602082019050919050565b6000602082019050818103600083015262003d128162003cd0565b9050919050565b600062003d268262002d3c565b62003d32818562003a7a565b935062003d4481856020860162002594565b80840191505092915050565b600062003d5e828462003d19565b915081905092915050565b600060408201905062003d80600083018562002539565b62003d8f602083018462002539565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062003dd2826200252f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562003e085762003e0762003d96565b5b600182019050919050565b600062003e20826200252f565b915062003e2d836200252f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562003e655762003e6462003d96565b5b828201905092915050565b600062003e7d826200252f565b915062003e8a836200252f565b92508282101562003ea05762003e9f62003d96565b5b82820390509291505056fe60e06040526001600660006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200264a3803806200264a833981810160405281019062000052919062000679565b8860c081815250508a73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508973ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508760009080519060200190620000e09291906200017e565b508660019080519060200190620000f99291906200017e565b508560029080519060200190620001129291906200017e565b5084600390805190602001906200012b9291906200020f565b50836004819055508260058190555081600660006101000a81548160ff02191690831515021790555080600790805190602001906200016c9291906200020f565b50505050505050505050505062000886565b8280546200018c9062000850565b90600052602060002090601f016020900481019282620001b05760008555620001fc565b82601f10620001cb57805160ff1916838001178555620001fc565b82800160010185558215620001fc579182015b82811115620001fb578251825591602001919060010190620001de565b5b5090506200020b919062000276565b5090565b82805482825590600052602060002090810192821562000263579160200282015b8281111562000262578251829080519060200190620002519291906200017e565b509160200191906001019062000230565b5b50905062000272919062000295565b5090565b5b808211156200029157600081600090555060010162000277565b5090565b5b80821115620002b95760008181620002af9190620002bd565b5060010162000296565b5090565b508054620002cb9062000850565b6000825580601f10620002df575062000300565b601f016020900490600052602060002090810190620002ff919062000276565b5b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003448262000317565b9050919050565b620003568162000337565b81146200036257600080fd5b50565b60008151905062000376816200034b565b92915050565b6000819050919050565b62000391816200037c565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200040c82620003c1565b810181811067ffffffffffffffff821117156200042e576200042d620003d2565b5b80604052505050565b60006200044362000303565b905062000451828262000401565b919050565b600067ffffffffffffffff821115620004745762000473620003d2565b5b6200047f82620003c1565b9050602081019050919050565b60005b83811015620004ac5780820151818401526020810190506200048f565b83811115620004bc576000848401525b50505050565b6000620004d9620004d38462000456565b62000437565b905082815260208101848484011115620004f857620004f7620003bc565b5b620005058482856200048c565b509392505050565b600082601f830112620005255762000524620003b7565b5b815162000537848260208601620004c2565b91505092915050565b600067ffffffffffffffff8211156200055e576200055d620003d2565b5b602082029050602081019050919050565b600080fd5b60006200058b620005858462000540565b62000437565b90508083825260208201905060208402830185811115620005b157620005b06200056f565b5b835b81811015620005ff57805167ffffffffffffffff811115620005da57620005d9620003b7565b5b808601620005e989826200050d565b85526020850194505050602081019050620005b3565b5050509392505050565b600082601f830112620006215762000620620003b7565b5b81516200063384826020860162000574565b91505092915050565b60008115159050919050565b62000653816200063c565b81146200065f57600080fd5b50565b600081519050620006738162000648565b92915050565b60008060008060008060008060008060006101608c8e031215620006a257620006a16200030d565b5b6000620006b28e828f0162000365565b9b50506020620006c58e828f0162000365565b9a50506040620006d88e828f01620003a0565b99505060608c015167ffffffffffffffff811115620006fc57620006fb62000312565b5b6200070a8e828f016200050d565b98505060808c015167ffffffffffffffff8111156200072e576200072d62000312565b5b6200073c8e828f016200050d565b97505060a08c015167ffffffffffffffff81111562000760576200075f62000312565b5b6200076e8e828f016200050d565b96505060c08c015167ffffffffffffffff81111562000792576200079162000312565b5b620007a08e828f0162000609565b95505060e0620007b38e828f01620003a0565b945050610100620007c78e828f01620003a0565b935050610120620007db8e828f0162000662565b9250506101408c015167ffffffffffffffff8111156200080057620007ff62000312565b5b6200080e8e828f0162000609565b9150509295989b509295989b9093969950565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200086957607f821691505b6020821081141562000880576200087f62000821565b5b50919050565b60805160601c60a05160601c60c051611d72620008d8600039600081816106040152610e25015260008181610b710152610d9f0152600081816107fa01528181610b4d0152610c230152611d726000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637284e416116100b8578063b145603e1161007c578063b145603e14610354578063bf1482fa14610372578063c91e986d14610390578063cb21efde146103ac578063d0c40276146103c8578063e959e260146103e657610137565b80637284e4161461029c578063a052f024146102ba578063ac62f566146102d6578063accff55214610306578063ae33dd171461033657610137565b80632e968e3e116100ff5780632e968e3e146101f657806334d19469146102265780633dda094d146102445780634a79d50c146102605780635bec9e671461027e57610137565b8063147c2c5a1461013c57806314b410a51461015a57806317fc45e21461018a578063299f8e46146101a8578063299fa150146101c6575b600080fd5b610144610404565b6040516101519190611493565b60405180910390f35b610174600480360381019061016f9190611520565b61040a565b60405161018191906115e6565b60405180910390f35b6101926104aa565b60405161019f9190611493565b60405180910390f35b6101b06104b0565b6040516101bd91906115e6565b60405180910390f35b6101e060048036038101906101db9190611634565b61053e565b6040516101ed91906115e6565b60405180910390f35b610210600480360381019061020b9190611520565b6105ea565b60405161021d9190611493565b60405180910390f35b61022e610602565b60405161023b9190611493565b60405180910390f35b61025e60048036038101906102599190611796565b610626565b005b6102686106c9565b60405161027591906115e6565b60405180910390f35b610286610757565b60405161029391906117fa565b60405180910390f35b6102a461076a565b6040516102b191906115e6565b60405180910390f35b6102d460048036038101906102cf9190611520565b6107f8565b005b6102f060048036038101906102eb9190611634565b610a60565b6040516102fd9190611824565b60405180910390f35b610320600480360381019061031b9190611634565b610a9f565b60405161032d91906115e6565b60405180910390f35b61033e610b4b565b60405161034b9190611824565b60405180910390f35b61035c610b6f565b6040516103699190611824565b60405180910390f35b61037a610b93565b60405161038791906118fd565b60405180910390f35b6103aa60048036038101906103a59190611520565b610c21565b005b6103c660048036038101906103c19190611796565b610d9d565b005b6103d0610e0f565b6040516103dd9190611bd1565b60405180910390f35b6103ee6112ed565b6040516103fb91906115e6565b60405180910390f35b60045481565b600b602052806000526040600020600091509050805461042990611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461045590611c22565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b505050505081565b60055481565b600980546104bd90611c22565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990611c22565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b505050505081565b6007818154811061054e57600080fd5b90600052602060002001600091509050805461056990611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461059590611c22565b80156105e25780601f106105b7576101008083540402835291602001916105e2565b820191906000526020600020905b8154815290600101906020018083116105c557829003601f168201915b505050505081565b600a6020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161067257600080fd5b80600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906106c592919061137b565b5050565b600080546106d690611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461070290611c22565b801561074f5780601f106107245761010080835404028352916020019161074f565b820191906000526020600020905b81548152906001019060200180831161073257829003601f168201915b505050505081565b600660009054906101000a900460ff1681565b6001805461077790611c22565b80601f01602080910402602001604051908101604052809291908181526020018280546107a390611c22565b80156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461085057600080fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561089d57600080fd5b600660009054906101000a900460ff1661099e57600060055411156109945760016005546108cb9190611c83565b600581905550600060088054905090506001816108e89190611cb7565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610999565b600080fd5b610a5d565b600060088054905090506001816109b59190611cb7565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b60088181548110610a7057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038181548110610aaf57600080fd5b906000526020600020016000915090508054610aca90611c22565b80601f0160208091040260200160405190810160405280929190818152602001828054610af690611c22565b8015610b435780601f10610b1857610100808354040283529160200191610b43565b820191906000526020600020905b815481529060010190602001808311610b2657829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606008805480602002602001604051908101604052809291908181526020018280548015610c1757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bcd575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7957600080fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610cc557600080fd5b60006001600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d139190611c83565b905060088181548110610d2957610d28611d0d565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df557600080fd5b8060099080519060200190610e0b92919061137b565b5050565b610e17611401565b6040518061016001604052807f0000000000000000000000000000000000000000000000000000000000000000815260200160008054610e5690611c22565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8290611c22565b8015610ecf5780601f10610ea457610100808354040283529160200191610ecf565b820191906000526020600020905b815481529060010190602001808311610eb257829003601f168201915b5050505050815260200160018054610ee690611c22565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1290611c22565b8015610f5f5780601f10610f3457610100808354040283529160200191610f5f565b820191906000526020600020905b815481529060010190602001808311610f4257829003601f168201915b5050505050815260200160028054610f7690611c22565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa290611c22565b8015610fef5780601f10610fc457610100808354040283529160200191610fef565b820191906000526020600020905b815481529060010190602001808311610fd257829003601f168201915b505050505081526020016003805480602002602001604051908101604052809291908181526020016000905b828210156110c757838290600052602060002001805461103a90611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461106690611c22565b80156110b35780601f10611088576101008083540402835291602001916110b3565b820191906000526020600020905b81548152906001019060200180831161109657829003601f168201915b50505050508152602001906001019061101b565b50505050815260200160045481526020016005548152602001600660009054906101000a900460ff16151581526020016007805480602002602001604051908101604052809291908181526020016000905b828210156111c557838290600052602060002001805461113890611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461116490611c22565b80156111b15780601f10611186576101008083540402835291602001916111b1565b820191906000526020600020905b81548152906001019060200180831161119457829003601f168201915b505050505081526020019060010190611119565b505050508152602001600880548060200260200160405190810160405280929190818152602001828054801561125057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611206575b505050505081526020016009805461126790611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461129390611c22565b80156112e05780601f106112b5576101008083540402835291602001916112e0565b820191906000526020600020905b8154815290600101906020018083116112c357829003601f168201915b5050505050815250905090565b600280546112fa90611c22565b80601f016020809104026020016040519081016040528092919081815260200182805461132690611c22565b80156113735780601f1061134857610100808354040283529160200191611373565b820191906000526020600020905b81548152906001019060200180831161135657829003601f168201915b505050505081565b82805461138790611c22565b90600052602060002090601f0160209004810192826113a957600085556113f0565b82601f106113c257805160ff19168380011785556113f0565b828001600101855582156113f0579182015b828111156113ef5782518255916020019190600101906113d4565b5b5090506113fd919061145d565b5090565b604051806101600160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581526020016060815260200160608152602001606081525090565b5b8082111561147657600081600090555060010161145e565b5090565b6000819050919050565b61148d8161147a565b82525050565b60006020820190506114a86000830184611484565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114ed826114c2565b9050919050565b6114fd816114e2565b811461150857600080fd5b50565b60008135905061151a816114f4565b92915050565b600060208284031215611536576115356114b8565b5b60006115448482850161150b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561158757808201518184015260208101905061156c565b83811115611596576000848401525b50505050565b6000601f19601f8301169050919050565b60006115b88261154d565b6115c28185611558565b93506115d2818560208601611569565b6115db8161159c565b840191505092915050565b6000602082019050818103600083015261160081846115ad565b905092915050565b6116118161147a565b811461161c57600080fd5b50565b60008135905061162e81611608565b92915050565b60006020828403121561164a576116496114b8565b5b60006116588482850161161f565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116a38261159c565b810181811067ffffffffffffffff821117156116c2576116c161166b565b5b80604052505050565b60006116d56114ae565b90506116e1828261169a565b919050565b600067ffffffffffffffff8211156117015761170061166b565b5b61170a8261159c565b9050602081019050919050565b82818337600083830152505050565b6000611739611734846116e6565b6116cb565b90508281526020810184848401111561175557611754611666565b5b611760848285611717565b509392505050565b600082601f83011261177d5761177c611661565b5b813561178d848260208601611726565b91505092915050565b6000602082840312156117ac576117ab6114b8565b5b600082013567ffffffffffffffff8111156117ca576117c96114bd565b5b6117d684828501611768565b91505092915050565b60008115159050919050565b6117f4816117df565b82525050565b600060208201905061180f60008301846117eb565b92915050565b61181e816114e2565b82525050565b60006020820190506118396000830184611815565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611874816114e2565b82525050565b6000611886838361186b565b60208301905092915050565b6000602082019050919050565b60006118aa8261183f565b6118b4818561184a565b93506118bf8361185b565b8060005b838110156118f05781516118d7888261187a565b97506118e283611892565b9250506001810190506118c3565b5085935050505092915050565b60006020820190508181036000830152611917818461189f565b905092915050565b6119288161147a565b82525050565b600082825260208201905092915050565b600061194a8261154d565b611954818561192e565b9350611964818560208601611569565b61196d8161159c565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006119b0838361193f565b905092915050565b6000602082019050919050565b60006119d082611978565b6119da8185611983565b9350836020820285016119ec85611994565b8060005b85811015611a285784840389528151611a0985826119a4565b9450611a14836119b8565b925060208a019950506001810190506119f0565b50829750879550505050505092915050565b611a43816117df565b82525050565b600082825260208201905092915050565b6000611a658261183f565b611a6f8185611a49565b9350611a7a8361185b565b8060005b83811015611aab578151611a92888261187a565b9750611a9d83611892565b925050600181019050611a7e565b5085935050505092915050565b600061016083016000830151611ad1600086018261191f565b5060208301518482036020860152611ae9828261193f565b91505060408301518482036040860152611b03828261193f565b91505060608301518482036060860152611b1d828261193f565b91505060808301518482036080860152611b3782826119c5565b91505060a0830151611b4c60a086018261191f565b5060c0830151611b5f60c086018261191f565b5060e0830151611b7260e0860182611a3a565b50610100830151848203610100860152611b8c82826119c5565b915050610120830151848203610120860152611ba88282611a5a565b915050610140830151848203610140860152611bc4828261193f565b9150508091505092915050565b60006020820190508181036000830152611beb8184611ab8565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c3a57607f821691505b60208210811415611c4e57611c4d611bf3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c8e8261147a565b9150611c998361147a565b925082821015611cac57611cab611c54565b5b828203905092915050565b6000611cc28261147a565b9150611ccd8361147a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0257611d01611c54565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220c49a59405a0581353fea0eb325c022f6a20725e2817e8e996586121cba40a73d64736f6c63430008080033a2646970667358221220a743771c16e8dd039a41e9ec1e63a2e77484e7e9740b5a7c3f8262c1ff899d2564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "details": "this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 371,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 740,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 742,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 744,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_category",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 746,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_imageURI",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 748,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_campaignURI",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 750,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_tags",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 752,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "goalAmount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 754,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "duration",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 756,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "currentBalance",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 763,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "deadline",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 768,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "c_state",
        "offset": 0,
        "slot": "11",
        "type": "t_enum(C_State)734"
      },
      {
        "astId": 770,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "rId",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 800,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "rewards",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 805,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "entDonations",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 809,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "aggrDonations",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 812,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "rKeys",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_enum(C_State)734": {
        "encoding": "inplace",
        "label": "enum Campaign.C_State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}