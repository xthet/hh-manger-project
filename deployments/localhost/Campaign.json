{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_crowdfunder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rwdFactory",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tags",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CampaignCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CreatorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        }
      ],
      "name": "FundingRecieved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aggrDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "c_state",
      "outputs": [
        {
          "internalType": "enum Campaign.C_State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_rewardable",
          "type": "bool"
        }
      ],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "entDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceID",
          "type": "uint256"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "rpic",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "perks",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "delDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "infinite",
              "type": "bool"
            },
            {
              "internalType": "string[]",
              "name": "shipsTo",
              "type": "string[]"
            },
            {
              "internalType": "address[]",
              "name": "donators",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "surveyLink",
              "type": "string"
            }
          ],
          "internalType": "struct Reward.RewardObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardKeys",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_creator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_crf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_rwdFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_rpic",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "_perks",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_infinite",
              "type": "bool"
            },
            {
              "internalType": "string[]",
              "name": "_shipsTo",
              "type": "string[]"
            }
          ],
          "internalType": "struct RewardFactory.rwdInput",
          "name": "_rwd",
          "type": "tuple"
        }
      ],
      "name": "makeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_campaignURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_category",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_imageURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_tags",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        }
      ],
      "name": "updateCampaignURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_addedDur",
          "type": "uint256"
        }
      ],
      "name": "updateDur",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa3da5b88976ee1dc94780c157b2544926813768a244f81a6807af83e247663ec",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "2208082",
    "logsBloom": "0x
    "blockHash": "0x6077e58c71a193ad91962516f2dd5b7dd0498092a76cce28155afcc1d3fcef74",
    "transactionHash": "0xa3da5b88976ee1dc94780c157b2544926813768a244f81a6807af83e247663ec",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "2208082",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "Piratopia: Raiders of Pirate Bay",
    "A P2E masterpiece on the AVAX chain",
    "P2E",
    "arcade games/adventure games/web3 gaming",
    "6750000000000000000",
    "1296000",
    "ipfs://QmV9inF2YC5MFUHWwWaCBEVJzj9aGSKmpay7mPSJDjBC4w"
  ],
  "numDeployments": 1,
  "solcInputHash": "aa83592ec04777cf8d96ba4bdb1d9aa7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_crowdfunder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rwdFactory\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tags\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CampaignCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CreatorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"FundingRecieved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aggrDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"c_state\",\"outputs\":[{\"internalType\":\"enum Campaign.C_State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_rewardable\",\"type\":\"bool\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_priceID\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpic\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"perks\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"delDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"infinite\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"shipsTo\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"surveyLink\",\"type\":\"string\"}],\"internalType\":\"struct Reward.RewardObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardKeys\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_creator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_crf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_rwdFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_rpic\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_perks\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_infinite\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"_shipsTo\",\"type\":\"string[]\"}],\"internalType\":\"struct RewardFactory.rwdInput\",\"name\":\"_rwd\",\"type\":\"tuple\"}],\"name\":\"makeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_campaignURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_category\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_imageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"}],\"name\":\"updateCampaignURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_addedDur\",\"type\":\"uint256\"}],\"name\":\"updateDur\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport { Reward } from \\\"./Reward.sol\\\";\\r\\nimport { RewardFactory } from \\\"./factories/RewardFactory.sol\\\";\\r\\nimport { RefunderLib } from \\\"./libraries/campaign/RefunderLib.sol\\\";\\r\\n\\r\\n// errors\\r\\n// error Cmp_NIS(); /**not in state */\\r\\n// error Cmp_NotCrtr();\\r\\n// error Cmp_DIC(); /**donator is creator */\\r\\n// error Cmp_NoDns();\\r\\n// error Cmp_RefF();\\r\\n// error Cmp_UpkNN();\\r\\n// error Cmp_NotRef();\\r\\n// error Cmp_Bankrupt();\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface, ReentrancyGuard{\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address immutable public i_crf;\\r\\n  address payable immutable public i_creator;\\r\\n  address immutable public i_rwdFactory;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_initTimeStamp;\\r\\n  uint256 private constant i_maxDur = 5184000;\\r\\n  uint256 public deadline;\\r\\n  uint256 private rId;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  struct refunder_pckg {\\r\\n    uint256 currentBalance;\\r\\n    C_State c_state;\\r\\n  }\\r\\n\\r\\n\\r\\n  // mapping (uint256 => reward) public rewards;\\r\\n  mapping (uint256 => address) public rewards;\\r\\n  mapping (address => uint256[]) public entDonations;\\r\\n  mapping (address => uint256) public aggrDonations;\\r\\n\\r\\n  uint256[] public rKeys;\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  refunder_pckg _refP = refunder_pckg(currentBalance, c_state);\\r\\n\\r\\n  constructor (\\r\\n    address _crowdfunder,\\r\\n    address _creator,\\r\\n    address _rwdFactory,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n  ) {\\r\\n    i_rwdFactory = _rwdFactory;\\r\\n    i_crf = _crowdfunder;\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_initTimeStamp = block.timestamp;\\r\\n    duration = _duration > i_maxDur ? i_maxDur : _duration;\\r\\n    deadline = i_initTimeStamp + duration;\\r\\n    s_imageURI = _imageURI;\\r\\n    currentBalance = 0;\\r\\n  }\\r\\n\\r\\n\\r\\n  function donate(address _donator, bool _rewardable) public payable nonReentrant{\\r\\n    if(msg.sender != i_crf){revert();}\\r\\n    if(c_state != C_State.Fundraising){revert();}\\r\\n    if(_donator == i_creator){revert();}\\r\\n    currentBalance = currentBalance + msg.value;\\r\\n    if(_rewardable){\\r\\n      if(rewards[msg.value] != address(0)){\\r\\n        (bool success, ) = rewards[msg.value].call(abi.encodeWithSignature(\\\"addDonator(address)\\\", _donator));\\r\\n        if(!success){revert();}\\r\\n        entDonations[_donator].push(msg.value);\\r\\n      }\\r\\n    }\\r\\n    aggrDonations[_donator] = aggrDonations[_donator] + msg.value; \\r\\n    emit FundingRecieved(_donator, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - i_initTimeStamp) > duration);\\r\\n    upkeepNeeded = (timePassed && isOpen);\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  function payout() external isCreator{\\r\\n    if(c_state != C_State.Expired){revert();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert();}\\r\\n  }\\r\\n\\r\\n\\r\\n  function refund(address _donator) external nonReentrant{\\r\\n    RefunderLib.refund(i_crf, _refP, rewards, aggrDonations, entDonations, _donator);\\r\\n    // if(msg.sender != i_crf){revert();}\\r\\n    // if(c_state == C_State.Expired){revert();}\\r\\n    // if(aggrDonations[_donator] == 0 ){revert();}\\r\\n\\r\\n    // uint256 amountToRefund = aggrDonations[_donator];\\r\\n\\r\\n    // if(currentBalance < amountToRefund){revert();}\\r\\n    // currentBalance = currentBalance - amountToRefund;\\r\\n\\r\\n    // (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    // if(!success){revert();}\\r\\n\\r\\n    // delete aggrDonations[_donator];\\r\\n\\r\\n    // if(entDonations[_donator].length > 0){    \\r\\n    //   for(uint i=0; i<entDonations[_donator].length; i++){\\r\\n    //     if(!(rewards[entDonations[_donator][i]] != address(0))){\\r\\n    //       Reward(rewards[entDonations[_donator][i]]).removeDonator(_donator);\\r\\n    //     }\\r\\n    //   }\\r\\n    // }\\r\\n\\r\\n    // delete entDonations[_donator];\\r\\n  }\\r\\n\\r\\n  function makeReward(RewardFactory.rwdInput memory _rwd) external isCreator {\\r\\n    if(rewards[_rwd.price] != address(0)){revert();}\\r\\n    rKeys.push(_rwd.price);\\r\\n    address newReward = RewardFactory(i_rwdFactory).createReward(address(this), i_creator, _rwd);\\r\\n    rewards[_rwd.price] = newReward;\\r\\n  }\\r\\n\\r\\n  function endCampaign() external isCreator {\\r\\n    if(c_state == C_State.Expired){revert();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateCampaignURI(string memory _campaignURI) external isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  function updateDur(uint256 _addedDur) external isCreator {\\r\\n    duration = (((duration + _addedDur)) > i_maxDur) ? i_maxDur : (duration + _addedDur);\\r\\n    deadline = i_initTimeStamp + duration;\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getRewardKeys() external view returns(uint256[] memory){\\r\\n    return rKeys;\\r\\n  }\\r\\n  \\r\\n  function getReward(uint256 _priceID) external view returns(Reward.RewardObject memory) {\\r\\n    Reward reward = Reward(rewards[_priceID]);\\r\\n    return reward.getRewardDetails();\\r\\n  }\\r\\n\\r\\n  // function getCampaignDetails() external view returns(CampaignObject memory) {\\r\\n  //   return CampaignObject(\\r\\n  //     i_creator,\\r\\n  //     s_title, \\r\\n  //     s_description,\\r\\n  //     s_category,\\r\\n  //     s_tags,\\r\\n  //     goalAmount,\\r\\n  //     duration,\\r\\n  //     currentBalance,\\r\\n  //     c_state,\\r\\n  //     s_imageURI,\\r\\n  //     s_campaignURI,\\r\\n  //     deadline\\r\\n  //   );\\r\\n  // }\\r\\n}\",\"keccak256\":\"0x17787e59024602c7753511fe0ccd52aa4ed9155f577fbab37b68d154770edecd\",\"license\":\"MIT\"},\"contracts/Reward.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\ncontract Reward {\\r\\n  address public immutable i_campaignAddress;\\r\\n  // address public immutable i_crf;\\r\\n  address public immutable i_creator;\\r\\n\\r\\n  uint256 public immutable i_price;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string public rpic;\\r\\n  string[] public perks;\\r\\n  uint256 public delDate;\\r\\n  uint256 public quantity;\\r\\n  bool public infinite = true;\\r\\n  string[] public shipsTo;\\r\\n  address[] public donators;\\r\\n  string public surveyLink;\\r\\n\\r\\n  struct RewardObject {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string rpic;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n    address[] donators;\\r\\n    string surveyLink;\\r\\n  }\\r\\n\\r\\n  mapping (address => uint256) public true_donator;  \\r\\n  mapping (address => string) public surveyResponses;\\r\\n\\r\\n  constructor ( \\r\\n    address _campaignAddress, \\r\\n    address _creator,\\r\\n    uint256 _price, \\r\\n    string memory _title, \\r\\n    string memory _description, \\r\\n    string memory _rpic,\\r\\n    string[] memory _perks, \\r\\n    uint256 _deadline, \\r\\n    uint256 _quantity, \\r\\n    bool _infinite, \\r\\n    string[] memory _shipsTo\\r\\n    ) {\\r\\n    i_price = _price;\\r\\n    i_campaignAddress = _campaignAddress;\\r\\n    i_creator = _creator;\\r\\n\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    rpic = _rpic;\\r\\n    perks = _perks;\\r\\n    delDate = _deadline;\\r\\n    quantity = _quantity;\\r\\n    infinite = _infinite;\\r\\n    shipsTo = _shipsTo;\\r\\n  }\\r\\n\\r\\n  function updateSurveyLink(string memory _surveylink) external {\\r\\n    if(msg.sender != i_creator){revert();}\\r\\n    surveyLink = _surveylink;\\r\\n  }\\r\\n\\r\\n  function addDonator(address _donator) external {\\r\\n    if(msg.sender != i_campaignAddress){revert();}\\r\\n    if((true_donator[_donator] > 0)){revert();} // already has id ...has therefor donated for this reward before\\r\\n\\r\\n    if(!infinite){\\r\\n      if(quantity > 0){\\r\\n        quantity = quantity - 1;\\r\\n        uint256 currNo = donators.length; // get array length\\r\\n        true_donator[_donator] = currNo + 1; \\r\\n        donators.push(_donator);\\r\\n      }else{revert();} // rwd has finished no longer available\\r\\n    }else{\\r\\n      uint256 currNo = donators.length; // get array length\\r\\n      true_donator[_donator] = currNo + 1; \\r\\n      donators.push(_donator);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getDonators() external view returns(address[] memory){\\r\\n    return donators;\\r\\n  }\\r\\n\\r\\n  function removeDonator(address _donator) external {\\r\\n    if(msg.sender != i_campaignAddress){revert();}\\r\\n    if(!(true_donator[_donator] > 0)){revert();} // not a donator\\r\\n    uint256 index = true_donator[_donator] - 1;\\r\\n    delete donators[index];\\r\\n    delete true_donator[_donator];\\r\\n  }\\r\\n\\r\\n  function respondToSurvey(string memory _response) external {\\r\\n    if(!(true_donator[msg.sender] > 0)){revert();} // not a donator\\r\\n    surveyResponses[msg.sender] = _response;\\r\\n  }\\r\\n\\r\\n  function getRewardDetails() external view returns(RewardObject memory){\\r\\n    return RewardObject(\\r\\n      i_price,\\r\\n      title,\\r\\n      description,\\r\\n      rpic,\\r\\n      perks,\\r\\n      delDate,\\r\\n      quantity,\\r\\n      infinite,\\r\\n      shipsTo,\\r\\n      donators,\\r\\n      surveyLink\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x16520b0d7ec2ca2e9c34cc0738e1db48661eef392ca464f8b0ee003169d06603\",\"license\":\"MIT\"},\"contracts/factories/RewardFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport { Reward } from \\\"../Reward.sol\\\";\\r\\n\\r\\ncontract RewardFactory {\\r\\n  struct rwdInput {\\r\\n    uint256 price;\\r\\n    string  _title; \\r\\n    string  _description; \\r\\n    string  _rpic;\\r\\n    string[]  _perks; \\r\\n    uint256 _deadline; \\r\\n    uint256 _quantity; \\r\\n    bool _infinite; \\r\\n    string[]  _shipsTo;\\r\\n  }\\r\\n\\r\\n  function createReward(address _cmpAddress, address _creator, rwdInput memory _rwd) public returns (address) {\\r\\n    Reward rwd = new Reward(\\r\\n      _cmpAddress, \\r\\n      _creator,\\r\\n      _rwd.price,\\r\\n      _rwd._title,\\r\\n      _rwd._description,\\r\\n      _rwd._rpic,\\r\\n      _rwd._perks,\\r\\n      _rwd._deadline,\\r\\n      _rwd._quantity,\\r\\n      _rwd._infinite,\\r\\n      _rwd._shipsTo \\r\\n    );\\r\\n\\r\\n    return address(rwd);\\r\\n  }\\r\\n}\",\"keccak256\":\"0x605f1939c58c0ae725deb037e68f89d755e65e22146ee9a56b212ae8d674e443\",\"license\":\"MIT\"},\"contracts/libraries/campaign/RefunderLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport { Campaign } from \\\"../../Campaign.sol\\\";\\r\\nimport { Reward } from \\\"../../Reward.sol\\\";\\r\\n\\r\\nlibrary RefunderLib {\\r\\n  function refund (\\r\\n    address _i_crf,\\r\\n    Campaign.refunder_pckg storage _refP, \\r\\n    mapping (uint256 => address) storage _rewards, \\r\\n    mapping (address => uint256) storage _aggrDons, \\r\\n    mapping (address => uint256[]) storage _entDons, \\r\\n    address _donator\\r\\n    ) external {\\r\\n    if(msg.sender != _i_crf){revert();}\\r\\n    if(_refP.c_state == Campaign.C_State.Expired){revert();}\\r\\n    if(_aggrDons[_donator] == 0 ){revert();}\\r\\n\\r\\n    uint256 amountToRefund = _aggrDons[_donator];\\r\\n\\r\\n    if(_refP.currentBalance < amountToRefund){revert();}\\r\\n    _refP.currentBalance = _refP.currentBalance - amountToRefund;\\r\\n\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert();}\\r\\n\\r\\n    delete _aggrDons[_donator];\\r\\n\\r\\n    if(_entDons[_donator].length > 0){    \\r\\n      for(uint i=0; i<_entDons[_donator].length; i++){\\r\\n        if(!(_rewards[_entDons[_donator][i]] != address(0))){\\r\\n          Reward(_rewards[_entDons[_donator][i]]).removeDonator(_donator);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n\\r\\n    delete _entDons[_donator];\\r\\n  }\\r\\n}\",\"keccak256\":\"0xacea134a5959c86c7ca67a50b965a2ad2666dccf020c1e3d97b908a79937da03\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c80636e04ff0d116100f7578063ce2a057211610095578063f764f87911610064578063f764f879146104fb578063fa6ded391461051b578063fa89401a1461053b578063fd6b30fa1461055b57600080fd5b8063ce2a057214610466578063ce845d1d1461047b578063ea0ec1c614610491578063f301af42146104c557600080fd5b806399a8502d116100d157806399a8502d146103d9578063b145603e146103ee578063bf66e2c81461042f578063c5cd50781461045157600080fd5b80636e04ff0d1461038357806371aac7f9146103b15780637be4bae1146103c657600080fd5b80634278ac8b116101645780634ef897191161013e5780634ef897191461031257806360fa9a72146103275780636235887a1461034e57806363bd1d4a1461036e57600080fd5b80634278ac8b146102bb5780634585e33b146102d05780634d695bdb146102f257600080fd5b80631774d960116101a05780631774d960146102425780631c4b774b146102625780632636b9451461028f57806329dcb0cf146102a557600080fd5b806309917c50146101c75780630fb5a6b41461020a57806315a46ee614610220575b600080fd5b3480156101d357600080fd5b506101f46101e2366004611106565b600f6020526000908152604090205481565b6040516102019190611137565b60405180910390f35b34801561021657600080fd5b506101f460085481565b34801561022c57600080fd5b5061023561058f565b60405161020191906111a7565b34801561024e57600080fd5b506101f461025d3660046111c9565b61061d565b34801561026e57600080fd5b5061028261027d366004611206565b61064e565b6040516102019190611418565b34801561029b57600080fd5b506101f460075481565b3480156102b157600080fd5b506101f4600a5481565b3480156102c757600080fd5b5061023561072e565b3480156102dc57600080fd5b506102f06102eb36600461147a565b61073b565b005b3480156102fe57600080fd5b506102f061030d3660046115ba565b6107ac565b34801561031e57600080fd5b506102356107f8565b34801561033357600080fd5b50600c546103419060ff1681565b6040516102019190611638565b34801561035a57600080fd5b506101f4610369366004611206565b610805565b34801561037a57600080fd5b506102f0610826565b34801561038f57600080fd5b506103a361039e3660046115ba565b61096f565b604051610201929190611646565b3480156103bd57600080fd5b506102f06109f3565b6102f06103d4366004611679565b610a84565b3480156103e557600080fd5b50610235610ce7565b3480156103fa57600080fd5b506104227f000000000000000000000000000000000000000000000000000000000000000081565b60405161020191906116ac565b34801561043b57600080fd5b50610444610cf4565b6040516102019190611704565b34801561045d57600080fd5b50610235610d4c565b34801561047257600080fd5b50610235610d59565b34801561048757600080fd5b506101f460095481565b34801561049d57600080fd5b506104227f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d157600080fd5b506104226104e0366004611206565b600d602052600090815260409020546001600160a01b031681565b34801561050757600080fd5b506102f061051636600461192f565b610d66565b34801561052757600080fd5b506102f0610536366004611206565b610eda565b34801561054757600080fd5b506102f0610556366004611106565b610f73565b34801561056757600080fd5b506104227f000000000000000000000000000000000000000000000000000000000000000081565b6005805461059c9061197f565b80601f01602080910402602001604051908101604052809291908181526020018280546105c89061197f565b80156106155780601f106105ea57610100808354040283529160200191610615565b820191906000526020600020905b8154815290600101906020018083116105f857829003601f168201915b505050505081565b600e602052816000526040600020818154811061063957600080fd5b90600052602060002001600091509150505481565b6106ad604051806101600160405280600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581526020016060815260200160608152602001606081525090565b6000828152600d6020526040808220548151636862013b60e11b815291516001600160a01b0390911692839263d0c4027692600480830193928290030181865afa1580156106ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107279190810190611ce7565b9392505050565b6003805461059c9061197f565b60006107556040518060200160405280600081525061096f565b5090508061076257600080fd5b600c805460ff191660011790556040517f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d9061079f9030906116ac565b60405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107e157600080fd5b80516107f4906005906020840190611038565b5050565b6002805461059c9061197f565b6010818154811061081557600080fd5b600091825260209091200154905081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461085b57600080fd5b6001600c5460ff166002811115610874576108746115f4565b1461087e57600080fd5b60006009549050600060098190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826040516108c690611d21565b60006040518083038185875af1925050503d8060008114610903576040519150601f19603f3d011682016040523d82523d6000602084013e610908565b606091505b5050905080156101c2577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f000000000000000000000000000000000000000000000000000000000000000030604051610963929190611d59565b60405180910390a15050565b600060608180600c5460ff16600281111561098c5761098c6115f4565b14905060006008547f0000000000000000000000000000000000000000000000000000000000000000426109c09190611d8a565b1190508080156109cd5750815b60408051808201909152600381526203078360ec1b602082015290969095509350505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a2857600080fd5b6001600c5460ff166002811115610a4157610a416115f4565b1415610a4c57600080fd5b600c805460ff191660021790556040517fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5190600090a1565b60026000541415610ab05760405162461bcd60e51b8152600401610aa790611da1565b60405180910390fd5b6002600055336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aea57600080fd5b6000600c5460ff166002811115610b0357610b036115f4565b14610b0d57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610b4c57600080fd5b34600954610b5a9190611ddc565b6009558015610c6057346000908152600d60205260409020546001600160a01b031615610c6057346000908152600d60205260408082205490516001600160a01b0390911690610bae9085906024016116ac565b60408051601f198184030181529181526020820180516001600160e01b0316632814bc0960e21b17905251610be39190611e16565b6000604051808303816000865af19150503d8060008114610c20576040519150601f19603f3d011682016040523d82523d6000602084013e610c25565b606091505b5050905080610c3357600080fd5b506001600160a01b0382166000908152600e60209081526040822080546001810182559083529120349101555b6001600160a01b0382166000908152600f6020526040902054610c84903490611ddc565b6001600160a01b0383166000818152600f60205260409081902092909255600954915190917fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120891610cd6913491611e22565b60405180910390a250506001600055565b6001805461059c9061197f565b60606010805480602002602001604051908101604052809291908181526020018280548015610d4257602002820191906000526020600020905b815481526020019060010190808311610d2e575b5050505050905090565b6006805461059c9061197f565b6004805461059c9061197f565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d9b57600080fd5b80516000908152600d60205260409020546001600160a01b031615610dbf57600080fd5b80516010805460018101825560009182527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672019190915560405163d52116e960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d52116e990610e669030907f0000000000000000000000000000000000000000000000000000000000000000908790600401611f0d565b6020604051808303816000875af1158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611f3a565b91516000908152600d6020526040902080546001600160a01b0319166001600160a01b039093169290921790915550565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f0f57600080fd5b624f1a0081600854610f219190611ddc565b11610f395780600854610f349190611ddc565b610f3e565b624f1a005b6008819055610f6d907f0000000000000000000000000000000000000000000000000000000000000000611ddc565b600a5550565b60026000541415610f965760405162461bcd60e51b8152600401610aa790611da1565b6002600055604051631cc535e760e21b815273__$9f85faa081bdc7133e3fbd199bfea18136$__90637314d79c90611000907f000000000000000000000000000000000000000000000000000000000000000090601190600d90600f90600e908990600401611f5b565b60006040518083038186803b15801561101857600080fd5b505af415801561102c573d6000803e3d6000fd5b50506001600055505050565b8280546110449061197f565b90600052602060002090601f01602090048101928261106657600085556110ac565b82601f1061107f57805160ff19168380011785556110ac565b828001600101855582156110ac579182015b828111156110ac578251825591602001919060010190611091565b506110b89291506110bc565b5090565b5b808211156110b857600081556001016110bd565b60006001600160a01b0382165b92915050565b6110ed816110d1565b81146110f857600080fd5b50565b80356110de816110e4565b60006020828403121561111b5761111b600080fd5b600061112784846110fb565b949350505050565b805b82525050565b602081016110de828461112f565b60005b83811015611160578181015183820152602001611148565b8381111561116f576000848401525b50505050565b600061117f825190565b808452602084019350611196818560208601611145565b601f01601f19169290920192915050565b602080825281016107278184611175565b806110ed565b80356110de816111b8565b600080604083850312156111df576111df600080fd5b60006111eb85856110fb565b92505060206111fc858286016111be565b9150509250929050565b60006020828403121561121b5761121b600080fd5b600061112784846111be565b60006107278383611175565b600061123d825190565b808452602084019350836020820285016112578560200190565b8060005b8581101561128c57848403895281516112748582611227565b94506020830160209a909a019992505060010161125b565b5091979650505050505050565b801515611131565b611131816110d1565b60006112b683836112a1565b505060200190565b60006112c8825190565b80845260209384019383018060005b838110156112fc5781516112eb88826112aa565b9750602083019250506001016112d7565b509495945050505050565b805160009061016084019061131c858261112f565b50602083015184820360208601526113348282611175565b9150506040830151848203604086015261134e8282611175565b915050606083015184820360608601526113688282611175565b915050608083015184820360808601526113828282611233565b91505060a083015161139760a086018261112f565b5060c08301516113aa60c086018261112f565b5060e08301516113bd60e0860182611299565b506101008301518482036101008601526113d78282611233565b9150506101208301518482036101208601526113f382826112be565b91505061014083015184820361014086015261140f8282611175565b95945050505050565b602080825281016107278184611307565b60008083601f84011261143e5761143e600080fd5b5081356001600160401b0381111561145857611458600080fd5b60208301915083600182028301111561147357611473600080fd5b9250929050565b6000806020838503121561149057611490600080fd5b82356001600160401b038111156114a9576114a9600080fd5b6114b585828601611429565b92509250509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156114fc576114fc6114c1565b6040525050565b600061150e60405190565b905061151a82826114d7565b919050565b60006001600160401b03821115611538576115386114c1565b601f19601f83011660200192915050565b82818337506000910152565b60006115686115638461151f565b611503565b90508281526020810184848401111561158357611583600080fd5b61158e848285611549565b509392505050565b600082601f8301126115aa576115aa600080fd5b8135611127848260208601611555565b6000602082840312156115cf576115cf600080fd5b81356001600160401b038111156115e8576115e8600080fd5b61112784828501611596565b634e487b7160e01b600052602160045260246000fd5b600381106110f8576110f86115f4565b8061151a8161160a565b60006110de8261161a565b61113181611624565b602081016110de828461162f565b604081016116548285611299565b81810360208301526111278184611175565b8015156110ed565b80356110de81611666565b6000806040838503121561168f5761168f600080fd5b600061169b85856110fb565b92505060206111fc8582860161166e565b602081016110de82846112a1565b60006112b6838361112f565b60006116d0825190565b80845260209384019383018060005b838110156112fc5781516116f388826116ba565b9750602083019250506001016116df565b6020808252810161072781846116c6565b60006001600160401b0382111561172e5761172e6114c1565b5060209081020190565b600061174661156384611715565b8381529050602080820190840283018581111561176557611765600080fd5b835b818110156117a55780356001600160401b0381111561178857611788600080fd5b8086016117958982611596565b8552505060209283019201611767565b5050509392505050565b600082601f8301126117c3576117c3600080fd5b8135611127848260208601611738565b600061012082840312156117e9576117e9600080fd5b6117f4610120611503565b9050600061180284846111be565b82525060208201356001600160401b0381111561182157611821600080fd5b61182d84828501611596565b60208301525060408201356001600160401b0381111561184f5761184f600080fd5b61185b84828501611596565b60408301525060608201356001600160401b0381111561187d5761187d600080fd5b61188984828501611596565b60608301525060808201356001600160401b038111156118ab576118ab600080fd5b6118b7848285016117af565b60808301525060a06118cb848285016111be565b60a08301525060c06118df848285016111be565b60c08301525060e06118f38482850161166e565b60e0830152506101008201356001600160401b0381111561191657611916600080fd5b611922848285016117af565b6101008301525092915050565b60006020828403121561194457611944600080fd5b81356001600160401b0381111561195d5761195d600080fd5b611127848285016117d3565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061199357607f821691505b602082108114156119a6576119a6611969565b50919050565b80516110de816111b8565b60006119c56115638461151f565b9050828152602081018484840111156119e0576119e0600080fd5b61158e848285611145565b600082601f8301126119ff576119ff600080fd5b81516111278482602086016119b7565b6000611a1d61156384611715565b83815290506020808201908402830185811115611a3c57611a3c600080fd5b835b818110156117a55780516001600160401b03811115611a5f57611a5f600080fd5b808601611a6c89826119eb565b8552505060209283019201611a3e565b600082601f830112611a9057611a90600080fd5b8151611127848260208601611a0f565b80516110de81611666565b80516110de816110e4565b6000611ac461156384611715565b83815290506020808201908402830185811115611ae357611ae3600080fd5b835b818110156117a55780611af88882611aab565b84525060209283019201611ae5565b600082601f830112611b1b57611b1b600080fd5b8151611127848260208601611ab6565b60006101608284031215611b4157611b41600080fd5b611b4c610160611503565b90506000611b5a84846119ac565b82525060208201516001600160401b03811115611b7957611b79600080fd5b611b85848285016119eb565b60208301525060408201516001600160401b03811115611ba757611ba7600080fd5b611bb3848285016119eb565b60408301525060608201516001600160401b03811115611bd557611bd5600080fd5b611be1848285016119eb565b60608301525060808201516001600160401b03811115611c0357611c03600080fd5b611c0f84828501611a7c565b60808301525060a0611c23848285016119ac565b60a08301525060c0611c37848285016119ac565b60c08301525060e0611c4b84828501611aa0565b60e0830152506101008201516001600160401b03811115611c6e57611c6e600080fd5b611c7a84828501611a7c565b610100830152506101208201516001600160401b03811115611c9e57611c9e600080fd5b611caa84828501611b07565b610120830152506101408201516001600160401b03811115611cce57611cce600080fd5b611cda848285016119eb565b6101408301525092915050565b600060208284031215611cfc57611cfc600080fd5b81516001600160401b03811115611d1557611d15600080fd5b61112784828501611b2b565b6000816110de565b60006001600160a01b0382166110de565b60006110de82611d29565b60006110de82611d3a565b61113181611d45565b60408101611d678285611d50565b61072760208301846112a1565b634e487b7160e01b600052601160045260246000fd5b600082821015611d9c57611d9c611d74565b500390565b602080825281016110de81601f81527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00602082015260400190565b60008219821115611def57611def611d74565b500190565b6000611dfe825190565b611e0c818560208601611145565b9290920192915050565b60006107278284611df4565b60408101611e30828561112f565b610727602083018461112f565b8051600090610120840190611e52858261112f565b5060208301518482036020860152611e6a8282611175565b91505060408301518482036040860152611e848282611175565b91505060608301518482036060860152611e9e8282611175565b91505060808301518482036080860152611eb88282611233565b91505060a0830151611ecd60a086018261112f565b5060c0830151611ee060c086018261112f565b5060e0830151611ef360e0860182611299565b5061010083015184820361010086015261140f8282611233565b60608101611f1b82866112a1565b611f286020830185611d50565b818103604083015261140f8184611e3d565b600060208284031215611f4f57611f4f600080fd5b60006111278484611aab565b60c08101611f6982896112a1565b611f7560208301889052565b611f8160408301879052565b611f8d60608301869052565b611f9960808301859052565b611fa660a08301846112a1565b97965050505050505056fea2646970667358221220515d83070c5a540e43f89a7707a7d0c50a00b998e1ada1a39ea08971b200ac9864736f6c634300080b0033",
  "libraries": {
    "RefunderLib": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "details": "this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 371,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 426,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 428,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 430,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_category",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 432,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_imageURI",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 434,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_campaignURI",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 436,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_tags",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 438,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "goalAmount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 440,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "duration",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 442,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "currentBalance",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 449,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "deadline",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 451,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "rId",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 456,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "c_state",
        "offset": 0,
        "slot": "12",
        "type": "t_enum(C_State)418"
      },
      {
        "astId": 492,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "rewards",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 497,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "entDonations",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 501,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "aggrDonations",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 504,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "rKeys",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 544,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "_refP",
        "offset": 0,
        "slot": "17",
        "type": "t_struct(refunder_pckg)488_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_enum(C_State)418": {
        "encoding": "inplace",
        "label": "enum Campaign.C_State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(refunder_pckg)488_storage": {
        "encoding": "inplace",
        "label": "struct Campaign.refunder_pckg",
        "members": [
          {
            "astId": 484,
            "contract": "contracts/Campaign.sol:Campaign",
            "label": "currentBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 487,
            "contract": "contracts/Campaign.sol:Campaign",
            "label": "c_state",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(C_State)418"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}