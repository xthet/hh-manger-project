{
  "address": "0xb132dECFFbF3bE5cf6D50902Ebf6b481F9d1f937",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__CampaignStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__DonationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__NotCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__RefundFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignShrunk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_sig",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_homeAddr",
          "type": "string"
        }
      ],
      "name": "UserHomeAddrAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sig",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_homeAddr",
          "type": "string"
        }
      ],
      "name": "addUserHomeAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refundFromCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "removeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x16097fbd975d7395ddf7e495eb74acf5df4614f44d4c4e5a0d70fb411433525b",
  "receipt": {
    "to": null,
    "from": "0x4B5a2B7b5438A79797698570AC9D45155D3Bb0e3",
    "contractAddress": "0xb132dECFFbF3bE5cf6D50902Ebf6b481F9d1f937",
    "transactionIndex": 79,
    "gasUsed": "5192297",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x7e5ea634a6e3f6cb5d71a6709effaa3d157ed13eae8090ef07389553503449bc",
    "transactionHash": "0x16097fbd975d7395ddf7e495eb74acf5df4614f44d4c4e5a0d70fb411433525b",
    "logs": [],
    "blockNumber": 8697880,
    "cumulativeGasUsed": "9000493",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 18,
  "solcInputHash": "039f7bfe1956030d7b5b38c5638d57f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__CampaignStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__DonationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__NotCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__RefundFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignShrunk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_sig\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_homeAddr\",\"type\":\"string\"}],\"name\":\"UserHomeAddrAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sig\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_homeAddr\",\"type\":\"string\"}],\"name\":\"addUserHomeAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refundFromCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"removeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface1_2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice config of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member blockCountPerTurn number of blocks each oracle has during their turn to\\n * perform upkeep before it will be the next keeper's turn to submit\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct Config {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint24 blockCountPerTurn;\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member numUpkeeps total number of upkeeps on the registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint256 numUpkeeps;\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData\\n  ) external returns (uint256 id);\\n\\n  function performUpkeep(uint256 id, bytes calldata performData) external returns (bool success);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function getUpkeep(uint256 id)\\n    external\\n    view\\n    returns (\\n      address target,\\n      uint32 executeGas,\\n      bytes memory checkData,\\n      uint96 balance,\\n      address lastKeeper,\\n      address admin,\\n      uint64 maxValidBlocknumber,\\n      uint96 amountSpent\\n    );\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getKeeperInfo(address query)\\n    external\\n    view\\n    returns (\\n      address payee,\\n      bool active,\\n      uint96 balance\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory,\\n      Config memory,\\n      address[] memory\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId, address from)\\n    external\\n    view\\n    returns (\\n      bytes memory performData,\\n      uint256 maxLinkPayment,\\n      uint256 gasLimit,\\n      int256 gasWei,\\n      int256 linkEth\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId, address from)\\n    external\\n    returns (\\n      bytes memory performData,\\n      uint256 maxLinkPayment,\\n      uint256 gasLimit,\\n      uint256 adjustedGasWei,\\n      uint256 linkEth\\n    );\\n}\\n\",\"keccak256\":\"0xc61d747194f2efd476204f9cf138f4028166d4723960fd66c7d316625ebe3ff6\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport \\\"./UpkeepIDConsumer.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInC_State();\\r\\nerror Campaign__NotCreator();\\r\\nerror Campaign__DonatorIsCreator();\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__AlreadyExpired();\\r\\nerror Campaign__NotRefundable();\\r\\nerror Campaign__CampaignBankrupt();\\r\\n\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string[] public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_lastTimeStamp;\\r\\n  // uint256 private immutable i_maxTimeStamp;\\r\\n  uint256 public deadline;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  // address private immutable i_linkTokenAddress;\\r\\n  // address private immutable i_upkeepCreatorAddress;\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string[] s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  struct reward {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n  }\\r\\n\\r\\n  mapping (uint256 => reward) public rewards;\\r\\n  mapping (address => uint256[]) public donations;\\r\\n\\r\\n  uint256[] public rKeys;\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert Campaign__NotCreator();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n  ) {\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_lastTimeStamp = block.timestamp;\\r\\n    // i_maxTimeStamp = i_lastTimeStamp + 5184000; // 60days\\r\\n    duration = _duration;\\r\\n    deadline = i_lastTimeStamp + duration;\\r\\n    s_imageURI = _imageURI;\\r\\n    currentBalance = 0;\\r\\n  }\\r\\n\\r\\n  function timeBox(address _upkeepCreatorAddress, address _linkTokenAddress) public isCreator {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(_upkeepCreatorAddress);\\r\\n    LinkTokenInterface token = LinkTokenInterface(_linkTokenAddress);\\r\\n    if(token.balanceOf(_upkeepCreatorAddress) <= 0){revert(\\\"no funds\\\");}\\r\\n    rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", address(this), 500000, i_creator, \\\"0x\\\", 10000000000000000000, 0);\\r\\n  }\\r\\n\\r\\n  function donate() external payable {\\r\\n    if(c_state != C_State.Fundraising){revert Campaign__NotInC_State();}\\r\\n    if(msg.sender == i_creator){revert Campaign__DonatorIsCreator();}\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    if(rewards[msg.value].price > 0  //exists\\r\\n      && !rewards[msg.value].infinite // is not infinite\\r\\n    ){\\r\\n      rewards[msg.value].quantity - 1;\\r\\n      if(rewards[msg.value].quantity <= 0){delete(rewards[msg.value]);}\\r\\n    }\\r\\n    donations[msg.sender].push(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - i_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(c_state != C_State.Expired){revert Campaign__NotInC_State();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(c_state == C_State.Expired){revert Campaign__AlreadyExpired();}\\r\\n    if(donations[_donator].length == 0 ){revert Campaign__NoDonationsHere(_donator);}\\r\\n    uint256 amountToRefund = calcFunderDonations(donations[_donator]);\\r\\n    delete(donations[_donator]);\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt();}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();}\\r\\n  }\\r\\n\\r\\n  function calcFunderDonations(uint256[] memory _funderArr) private pure returns(uint256 result){\\r\\n    for (uint256 i = 0; i < _funderArr.length; i++) {\\r\\n      result += _funderArr[i];\\r\\n    }\\r\\n    return result;\\r\\n  }\\r\\n\\r\\n  function makeReward( \\r\\n    uint256 _price, string memory _title, \\r\\n    string memory _description, string[] memory _perks, \\r\\n    uint256 _deadline, uint256 _quantity, bool _infinite, string[] memory _shipsTo\\r\\n    ) public isCreator {\\r\\n    rKeys.push(_price);\\r\\n    // shipsto _NW, infinite true, quantitymax 100  (for digRewards)  shipsto _AITW for phyRewards\\r\\n    rewards[_price] = reward(_price, _title, _description, _perks, _deadline, _quantity, _infinite, _shipsTo);\\r\\n  }\\r\\n\\r\\n  function deleteReward(uint256 _priceID) public isCreator {\\r\\n    if(rewards[_priceID].price > 0){delete(rewards[_priceID]);}\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(c_state == C_State.Expired){revert Campaign__AlreadyExpired();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateDuration(uint256 _additionalTime) public isCreator {\\r\\n    duration += _additionalTime;\\r\\n    deadline = i_lastTimeStamp + duration;\\r\\n  }\\r\\n\\r\\n  function updateCampaignURI(string memory _campaignURI) public isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getDonations(address _donator) public view returns(uint256[] memory) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getRewardKeys() public view returns(uint256[] memory){\\r\\n    return rKeys;\\r\\n  }\\r\\n  \\r\\n  function getReward(uint256 _priceID) public view returns (reward memory) {\\r\\n    return rewards[_priceID];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title,\\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      deadline\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0xbf76605f8e5fdd89e725722236ed4166d1766dcc60c82acbf6cc27fbc8846c86\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror CrowdFunder__NotCreator(address _caller, address _campaignAddress);\\r\\nerror CrowdFunder__CampaignStillActive(address _campaignAddress);\\r\\nerror CrowdFunder__DonationFailed(address _campaignAddress);\\r\\nerror CrowdFunder__RefundFailed(address _campaignAddress);\\r\\nerror CrowdFunder__CampaignNotRefundable(address _campaignAddress);\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  event UserAdded(\\r\\n    address indexed _address,\\r\\n    string _username,\\r\\n    string _twitter,\\r\\n    string _email,\\r\\n    string _sig\\r\\n  );\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator,\\r\\n    string _category,\\r\\n    string[] _tags\\r\\n  );\\r\\n\\r\\n  event CampaignFunded(\\r\\n    address indexed _funder,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignShrunk(\\r\\n    address indexed _withdrawer,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignRemoved(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event UserHomeAddrAdded(\\r\\n    address _userAddress,\\r\\n    string _homeAddr\\r\\n  );\\r\\n\\r\\n  uint256 public campaignCounter;\\r\\n  mapping (address => Campaign) private campaigns;\\r\\n\\r\\n\\r\\n  modifier isCreator(address _campaignAddress) {\\r\\n    if(campaigns[_campaignAddress].i_creator() != msg.sender){\\r\\n      revert CrowdFunder__NotCreator(msg.sender, _campaignAddress);\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function addUser(\\r\\n    address _address, string memory _username, \\r\\n    string memory _twitter, string memory _email, \\r\\n    string memory _sig\\r\\n    ) public {\\r\\n    emit UserAdded(_address, _username, _twitter, _email, _sig);\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI\\r\\n    ) external {\\r\\n    Campaign newCampaign = new Campaign(\\r\\n      payable(msg.sender), _title, \\r\\n      _description, _category, \\r\\n      _tags, _goalAmount, \\r\\n      _duration, _imageURI\\r\\n    );\\r\\n    campaigns[address(newCampaign)] = newCampaign;\\r\\n    campaignCounter+=1;\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender, _category, _tags);\\r\\n  }\\r\\n\\r\\n  function donateToCampaign (address _campaignAddress) public payable {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"donate()\\\"));\\r\\n    if(success){\\r\\n      emit CampaignFunded(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__DonationFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function refundFromCampaign(address _campaignAddress, address _donator) public {\\r\\n    (bool success,) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"refund(address)\\\", _donator));\\r\\n    if(success){\\r\\n      emit CampaignShrunk(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__RefundFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function removeCampaign (address _campaignAddress) public isCreator(_campaignAddress) {\\r\\n    if(uint(campaigns[_campaignAddress].c_state()) == 0){revert CrowdFunder__CampaignStillActive(_campaignAddress);}\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    campaignCounter-=1;\\r\\n    emit CampaignRemoved(_campaignAddress);\\r\\n  }\\r\\n\\r\\n  function addUserHomeAddr (address _userAddress, string memory _homeAddr) public {\\r\\n    emit UserHomeAddrAdded(_userAddress, _homeAddr);\\r\\n  }\\r\\n}\",\"keccak256\":\"0x049145248ec1d8ce6d20df8c7be6d47c808fe2c0bfee9c1a5e8491e479215c3f\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport {AutomationRegistryInterface, State, Config} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface1_2.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n  function register(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source,\\r\\n    address sender\\r\\n  ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n  LinkTokenInterface public immutable i_link;\\r\\n  address public immutable registrar;\\r\\n  AutomationRegistryInterface public immutable i_registry;\\r\\n  bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n  constructor(\\r\\n    address _link,\\r\\n    address _registrar,\\r\\n    address _registry\\r\\n  ) {\\r\\n    i_link = LinkTokenInterface(_link);\\r\\n    registrar = _registrar;\\r\\n    i_registry = AutomationRegistryInterface(_registry);\\r\\n  }\\r\\n\\r\\n  function registerAndPredictID(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source\\r\\n  ) public returns(uint){\\r\\n    (State memory state, Config memory _c, address[] memory _k) = i_registry.getState();\\r\\n    uint256 oldNonce = state.nonce;\\r\\n    bytes memory payload = abi.encode(\\r\\n      name,\\r\\n      encryptedEmail,\\r\\n      upkeepContract,\\r\\n      gasLimit,\\r\\n      adminAddress,\\r\\n      checkData,\\r\\n      amount,\\r\\n      source,\\r\\n      address(this)\\r\\n    );\\r\\n\\r\\n    i_link.transferAndCall(\\r\\n      registrar,\\r\\n      amount,\\r\\n      bytes.concat(registerSig, payload)\\r\\n    );\\r\\n    (state, _c, _k) = i_registry.getState();\\r\\n    uint256 newNonce = state.nonce;\\r\\n    if (newNonce == oldNonce + 1) {\\r\\n      uint256 upkeepID = uint256(\\r\\n        keccak256(\\r\\n          abi.encodePacked(\\r\\n            blockhash(block.number - 1),\\r\\n            address(i_registry),\\r\\n            uint32(oldNonce)\\r\\n          )\\r\\n        )\\r\\n      );\\r\\n      // DEV - Use the upkeepID however you see fit\\r\\n      return upkeepID;\\r\\n    } else {\\r\\n      revert(\\\"auto-approve disabled\\\");\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xbdac07cfb6213b5ce65e7b8b9f0be91828c4b0e27be5cc3d8d122610f7b6e3cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615d69806100206000396000f3fe6080604052600436106200007a5760003560e01c80637dfaeaa311620000555780637dfaeaa314620000fb578063cd274a401462000129578063e4663a5b1462000157578063fca604d71462000185576200007a565b8063359c4f32146200007f57806353a0d46914620000ad5780637c6abc8214620000db575b600080fd5b3480156200008c57600080fd5b50620000ab6004803603810190620000a5919062000ad1565b620001b5565b005b348015620000ba57600080fd5b50620000d96004803603810190620000d3919062000db1565b6200035e565b005b620000f96004803603810190620000f3919062000eff565b620004b5565b005b3480156200010857600080fd5b5062000127600480360381019062000121919062000f31565b62000650565b005b3480156200013657600080fd5b506200015560048036038101906200014f919062000f97565b6200068f565b005b3480156200016457600080fd5b506200018360048036038101906200017d919062000eff565b620006ec565b005b3480156200019257600080fd5b506200019d62000a44565b604051620001ac9190620010ac565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff1682604051602401620001e19190620010da565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516200026d91906200117a565b600060405180830381855af49150503d8060008114620002aa576040519150601f19603f3d011682016040523d82523d6000602084013e620002af565b606091505b5050905080156200031a578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a362000359565b826040517f5bdf89f6000000000000000000000000000000000000000000000000000000008152600401620003509190620010da565b60405180910390fd5b505050565b60003388888888888888604051620003769062000a4a565b620003899897969594939291906200137d565b604051809103906000f080158015620003a6573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808282546200043b91906200145d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd1ef576cbb9cedc698256ae3d2464b38a636f26263382a3c2206c86d7c8c1fcf8888604051620004a3929190620014ba565b60405180910390a35050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516200056091906200117a565b600060405180830381855af49150503d80600081146200059d576040519150601f19603f3d011682016040523d82523d6000602084013e620005a2565b606091505b5050905080156200060d578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a36200064c565b816040517ffe5dd8d3000000000000000000000000000000000000000000000000000000008152600401620006439190620010da565b60405180910390fd5b5050565b7f440065d68f2dccb29aed41dfaf29b5137d728950be75f0f67945debd30068a62828260405162000683929190620014f5565b60405180910390a15050565b8473ffffffffffffffffffffffffffffffffffffffff167f10bb073e1ce0977d8bf7b641de8a59b02dd9c9d1c4badc9b30e5a48ac9fc8cb985858585604051620006dd949392919062001529565b60405180910390a25050505050565b803373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620007aa57600080fd5b505afa158015620007bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007e59190620015d7565b73ffffffffffffffffffffffffffffffffffffffff1614620008425733816040517fd9e20da80000000000000000000000000000000000000000000000000000000081526004016200083992919062001609565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b158015620008ea57600080fd5b505afa158015620008ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092591906200165e565b60028111156200093a576200093962001690565b5b14156200098057816040517fdfecfddd000000000000000000000000000000000000000000000000000000008152600401620009779190620010da565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600080828254620009f69190620016bf565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a25050565b60005481565b61463980620016fb83390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a998262000a6c565b9050919050565b62000aab8162000a8c565b811462000ab757600080fd5b50565b60008135905062000acb8162000aa0565b92915050565b6000806040838503121562000aeb5762000aea62000a62565b5b600062000afb8582860162000aba565b925050602062000b0e8582860162000aba565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000b6d8262000b22565b810181811067ffffffffffffffff8211171562000b8f5762000b8e62000b33565b5b80604052505050565b600062000ba462000a58565b905062000bb2828262000b62565b919050565b600067ffffffffffffffff82111562000bd55762000bd462000b33565b5b62000be08262000b22565b9050602081019050919050565b82818337600083830152505050565b600062000c1362000c0d8462000bb7565b62000b98565b90508281526020810184848401111562000c325762000c3162000b1d565b5b62000c3f84828562000bed565b509392505050565b600082601f83011262000c5f5762000c5e62000b18565b5b813562000c7184826020860162000bfc565b91505092915050565b600067ffffffffffffffff82111562000c985762000c9762000b33565b5b602082029050602081019050919050565b600080fd5b600062000cc562000cbf8462000c7a565b62000b98565b9050808382526020820190506020840283018581111562000ceb5762000cea62000ca9565b5b835b8181101562000d3957803567ffffffffffffffff81111562000d145762000d1362000b18565b5b80860162000d23898262000c47565b8552602085019450505060208101905062000ced565b5050509392505050565b600082601f83011262000d5b5762000d5a62000b18565b5b813562000d6d84826020860162000cae565b91505092915050565b6000819050919050565b62000d8b8162000d76565b811462000d9757600080fd5b50565b60008135905062000dab8162000d80565b92915050565b600080600080600080600060e0888a03121562000dd35762000dd262000a62565b5b600088013567ffffffffffffffff81111562000df45762000df362000a67565b5b62000e028a828b0162000c47565b975050602088013567ffffffffffffffff81111562000e265762000e2562000a67565b5b62000e348a828b0162000c47565b965050604088013567ffffffffffffffff81111562000e585762000e5762000a67565b5b62000e668a828b0162000c47565b955050606088013567ffffffffffffffff81111562000e8a5762000e8962000a67565b5b62000e988a828b0162000d43565b945050608062000eab8a828b0162000d9a565b93505060a062000ebe8a828b0162000d9a565b92505060c088013567ffffffffffffffff81111562000ee25762000ee162000a67565b5b62000ef08a828b0162000c47565b91505092959891949750929550565b60006020828403121562000f185762000f1762000a62565b5b600062000f288482850162000aba565b91505092915050565b6000806040838503121562000f4b5762000f4a62000a62565b5b600062000f5b8582860162000aba565b925050602083013567ffffffffffffffff81111562000f7f5762000f7e62000a67565b5b62000f8d8582860162000c47565b9150509250929050565b600080600080600060a0868803121562000fb65762000fb562000a62565b5b600062000fc68882890162000aba565b955050602086013567ffffffffffffffff81111562000fea5762000fe962000a67565b5b62000ff88882890162000c47565b945050604086013567ffffffffffffffff8111156200101c576200101b62000a67565b5b6200102a8882890162000c47565b935050606086013567ffffffffffffffff8111156200104e576200104d62000a67565b5b6200105c8882890162000c47565b925050608086013567ffffffffffffffff81111562001080576200107f62000a67565b5b6200108e8882890162000c47565b9150509295509295909350565b620010a68162000d76565b82525050565b6000602082019050620010c360008301846200109b565b92915050565b620010d48162000a8c565b82525050565b6000602082019050620010f16000830184620010c9565b92915050565b600081519050919050565b600081905092915050565b60005b838110156200112d57808201518184015260208101905062001110565b838111156200113d576000848401525b50505050565b60006200115082620010f7565b6200115c818562001102565b93506200116e8185602086016200110d565b80840191505092915050565b600062001188828462001143565b915081905092915050565b6000819050919050565b6000620011be620011b8620011b28462000a6c565b62001193565b62000a6c565b9050919050565b6000620011d2826200119d565b9050919050565b6000620011e682620011c5565b9050919050565b620011f881620011d9565b82525050565b600081519050919050565b600082825260208201905092915050565b60006200122782620011fe565b62001233818562001209565b9350620012458185602086016200110d565b620012508162000b22565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000620012a582620011fe565b620012b1818562001287565b9350620012c38185602086016200110d565b620012ce8162000b22565b840191505092915050565b6000620012e7838362001298565b905092915050565b6000602082019050919050565b600062001309826200125b565b62001315818562001266565b935083602082028501620013298562001277565b8060005b858110156200136b5784840389528151620013498582620012d9565b94506200135683620012ef565b925060208a019950506001810190506200132d565b50829750879550505050505092915050565b60006101008201905062001395600083018b620011ed565b8181036020830152620013a9818a6200121a565b90508181036040830152620013bf81896200121a565b90508181036060830152620013d581886200121a565b90508181036080830152620013eb8187620012fc565b9050620013fc60a08301866200109b565b6200140b60c08301856200109b565b81810360e08301526200141f81846200121a565b90509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200146a8262000d76565b9150620014778362000d76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620014af57620014ae6200142e565b5b828201905092915050565b60006040820190508181036000830152620014d681856200121a565b90508181036020830152620014ec8184620012fc565b90509392505050565b60006040820190506200150c6000830185620010c9565b81810360208301526200152081846200121a565b90509392505050565b600060808201905081810360008301526200154581876200121a565b905081810360208301526200155b81866200121a565b905081810360408301526200157181856200121a565b905081810360608301526200158781846200121a565b905095945050505050565b60006200159f8262000a6c565b9050919050565b620015b18162001592565b8114620015bd57600080fd5b50565b600081519050620015d181620015a6565b92915050565b600060208284031215620015f057620015ef62000a62565b5b60006200160084828501620015c0565b91505092915050565b6000604082019050620016206000830185620010c9565b6200162f6020830184620010c9565b9392505050565b600381106200164457600080fd5b50565b600081519050620016588162001636565b92915050565b60006020828403121562001677576200167662000a62565b5b6000620016878482850162001647565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000620016cc8262000d76565b9150620016d98362000d76565b925082821015620016ef57620016ee6200142e565b5b82820390509291505056fe60c06040526000600a60006101000a81548160ff021916908360028111156200002d576200002c620002e2565b5b02179055503480156200003f57600080fd5b50604051620046393803806200463983398181016040528101906200006591906200064a565b8773ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508660009080519060200190620000b49291906200015d565b508560019080519060200190620000cd9291906200015d565b508460029080519060200190620000e69291906200015d565b508360059080519060200190620000ff929190620001ee565b50826006819055504260a081815250508160078190555060075460a051620001289190620007dd565b6009819055508060039080519060200190620001469291906200015d565b50600060088190555050505050505050506200089f565b8280546200016b9062000869565b90600052602060002090601f0160209004810192826200018f5760008555620001db565b82601f10620001aa57805160ff1916838001178555620001db565b82800160010185558215620001db579182015b82811115620001da578251825591602001919060010190620001bd565b5b509050620001ea919062000255565b5090565b82805482825590600052602060002090810192821562000242579160200282015b8281111562000241578251829080519060200190620002309291906200015d565b50916020019190600101906200020f565b5b50905062000251919062000274565b5090565b5b808211156200027057600081600090555060010162000256565b5090565b5b808211156200029857600081816200028e91906200029c565b5060010162000275565b5090565b508054620002aa9062000869565b6000825580601f10620002be5750620002df565b601f016020900490600052602060002090810190620002de919062000255565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003528262000325565b9050919050565b620003648162000345565b81146200037057600080fd5b50565b600081519050620003848162000359565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003df8262000394565b810181811067ffffffffffffffff82111715620004015762000400620003a5565b5b80604052505050565b60006200041662000311565b9050620004248282620003d4565b919050565b600067ffffffffffffffff821115620004475762000446620003a5565b5b620004528262000394565b9050602081019050919050565b60005b838110156200047f57808201518184015260208101905062000462565b838111156200048f576000848401525b50505050565b6000620004ac620004a68462000429565b6200040a565b905082815260208101848484011115620004cb57620004ca6200038f565b5b620004d88482856200045f565b509392505050565b600082601f830112620004f857620004f76200038a565b5b81516200050a84826020860162000495565b91505092915050565b600067ffffffffffffffff821115620005315762000530620003a5565b5b602082029050602081019050919050565b600080fd5b60006200055e620005588462000513565b6200040a565b9050808382526020820190506020840283018581111562000584576200058362000542565b5b835b81811015620005d257805167ffffffffffffffff811115620005ad57620005ac6200038a565b5b808601620005bc8982620004e0565b8552602085019450505060208101905062000586565b5050509392505050565b600082601f830112620005f457620005f36200038a565b5b81516200060684826020860162000547565b91505092915050565b6000819050919050565b62000624816200060f565b81146200063057600080fd5b50565b600081519050620006448162000619565b92915050565b600080600080600080600080610100898b0312156200066e576200066d6200031b565b5b60006200067e8b828c0162000373565b985050602089015167ffffffffffffffff811115620006a257620006a162000320565b5b620006b08b828c01620004e0565b975050604089015167ffffffffffffffff811115620006d457620006d362000320565b5b620006e28b828c01620004e0565b965050606089015167ffffffffffffffff81111562000706576200070562000320565b5b620007148b828c01620004e0565b955050608089015167ffffffffffffffff81111562000738576200073762000320565b5b620007468b828c01620005dc565b94505060a0620007598b828c0162000633565b93505060c06200076c8b828c0162000633565b92505060e089015167ffffffffffffffff81111562000790576200078f62000320565b5b6200079e8b828c01620004e0565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007ea826200060f565b9150620007f7836200060f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200082f576200082e620007ae565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200088257607f821691505b602082108114156200089957620008986200083a565b5b50919050565b60805160601c60a051613d166200092360003960008181610d1801526118c301526000818161071f01528181610c770152818161122101528181611385015281816114880152818161153901528181611658015281816117d50152818161195101528181611b5c01528181611d1801528181611e280152611fbf0152613d166000f3fe6080604052600436106101cd5760003560e01c806369066ae9116100f7578063b145603e11610095578063e7cf1ab711610064578063e7cf1ab71461066b578063ed88c68e14610694578063f301af421461069e578063fa89401a146106e0576101cd565b8063b145603e146105bf578063bf66e2c8146105ea578063ce2a057214610615578063ce845d1d14610640576101cd565b806371aac7f9116100d157806371aac7f91461051757806395086ed11461052e57806399a8502d1461056b5780639a91379314610596576101cd565b806369066ae9146104735780636d869814146104b05780636e04ff0d146104d9576101cd565b806329dcb0cf1161016f5780634ef897191161013e5780634ef89719146103c957806360fa9a72146103f45780636235887a1461041f57806363bd1d4a1461045c576101cd565b806329dcb0cf146103215780634278ac8b1461034c5780634585e33b146103775780634d695bdb146103a0576101cd565b80631910bdc2116101ab5780631910bdc2146102535780631b50ad09146102905780631c4b774b146102b95780632636b945146102f6576101cd565b80630c611f24146101d25780630fb5a6b4146101fd57806315a46ee614610228575b600080fd5b3480156101de57600080fd5b506101e7610709565b6040516101f49190612ca7565b60405180910390f35b34801561020957600080fd5b50610212610b4a565b60405161021f9190612cd8565b60405180910390f35b34801561023457600080fd5b5061023d610b50565b60405161024a9190612d3d565b60405180910390f35b34801561025f57600080fd5b5061027a60048036038101906102759190612d9f565b610bde565b6040516102879190612e7b565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b29190612ec9565b610c75565b005b3480156102c557600080fd5b506102e060048036038101906102db9190612ec9565b610d4a565b6040516102ed9190612fd6565b60405180910390f35b34801561030257600080fd5b5061030b611087565b6040516103189190612cd8565b60405180910390f35b34801561032d57600080fd5b5061033661108d565b6040516103439190612cd8565b60405180910390f35b34801561035857600080fd5b50610361611093565b60405161036e9190612d3d565b60405180910390f35b34801561038357600080fd5b5061039e6004803603810190610399919061305d565b611121565b005b3480156103ac57600080fd5b506103c760048036038101906103c291906131da565b61121f565b005b3480156103d557600080fd5b506103de6112be565b6040516103eb9190612d3d565b60405180910390f35b34801561040057600080fd5b5061040961134c565b6040516104169190613232565b60405180910390f35b34801561042b57600080fd5b5061044660048036038101906104419190612ec9565b61135f565b6040516104539190612cd8565b60405180910390f35b34801561046857600080fd5b50610471611383565b005b34801561047f57600080fd5b5061049a60048036038101906104959190612ec9565b6115aa565b6040516104a79190612d3d565b60405180910390f35b3480156104bc57600080fd5b506104d760048036038101906104d2919061324d565b611656565b005b3480156104e557600080fd5b5061050060048036038101906104fb919061332e565b61187e565b60405161050e9291906133db565b60405180910390f35b34801561052357600080fd5b5061052c61194f565b005b34801561053a57600080fd5b506105556004803603810190610550919061340b565b611a9b565b6040516105629190612cd8565b60405180910390f35b34801561057757600080fd5b50610580611acc565b60405161058d9190612d3d565b60405180910390f35b3480156105a257600080fd5b506105bd60048036038101906105b89190613558565b611b5a565b005b3480156105cb57600080fd5b506105d4611d16565b6040516105e1919061369f565b60405180910390f35b3480156105f657600080fd5b506105ff611d3a565b60405161060c9190612e7b565b60405180910390f35b34801561062157600080fd5b5061062a611d92565b6040516106379190612d3d565b60405180910390f35b34801561064c57600080fd5b50610655611e20565b6040516106629190612cd8565b60405180910390f35b34801561067757600080fd5b50610692600480360381019061068d9190612ec9565b611e26565b005b61069c611f50565b005b3480156106aa57600080fd5b506106c560048036038101906106c09190612ec9565b61222a565b6040516106d7969594939291906136ba565b60405180910390f35b3480156106ec57600080fd5b5061070760048036038101906107029190612d9f565b612383565b005b6107116126db565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020016000805461076690613758565b80601f016020809104026020016040519081016040528092919081815260200182805461079290613758565b80156107df5780601f106107b4576101008083540402835291602001916107df565b820191906000526020600020905b8154815290600101906020018083116107c257829003601f168201915b50505050508152602001600180546107f690613758565b80601f016020809104026020016040519081016040528092919081815260200182805461082290613758565b801561086f5780601f106108445761010080835404028352916020019161086f565b820191906000526020600020905b81548152906001019060200180831161085257829003601f168201915b505050505081526020016002805461088690613758565b80601f01602080910402602001604051908101604052809291908181526020018280546108b290613758565b80156108ff5780601f106108d4576101008083540402835291602001916108ff565b820191906000526020600020905b8154815290600101906020018083116108e257829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b828210156109d757838290600052602060002001805461094a90613758565b80601f016020809104026020016040519081016040528092919081815260200182805461097690613758565b80156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b50505050508152602001906001019061092b565b505050508152602001600654815260200160075481526020016008548152602001600a60009054906101000a900460ff166002811115610a1a57610a19612b09565b5b815260200160038054610a2c90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5890613758565b8015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b5050505050815260200160048054610abc90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae890613758565b8015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b50505050508152602001600954815250905090565b60075481565b60048054610b5d90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8990613758565b8015610bd65780601f10610bab57610100808354040283529160200191610bd6565b820191906000526020600020905b815481529060010190602001808311610bb957829003601f168201915b505050505081565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c6957602002820191906000526020600020905b815481526020019060010190808311610c55575b50505050509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cfa576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610d0c91906137b9565b925050819055506007547f0000000000000000000000000000000000000000000000000000000000000000610d4191906137b9565b60098190555050565b610d52612764565b600c60008381526020019081526020016000206040518061010001604052908160008201548152602001600182018054610d8b90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610db790613758565b8015610e045780601f10610dd957610100808354040283529160200191610e04565b820191906000526020600020905b815481529060010190602001808311610de757829003601f168201915b50505050508152602001600282018054610e1d90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4990613758565b8015610e965780601f10610e6b57610100808354040283529160200191610e96565b820191906000526020600020905b815481529060010190602001808311610e7957829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610f70578382906000526020600020018054610ee390613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0f90613758565b8015610f5c5780601f10610f3157610100808354040283529160200191610f5c565b820191906000526020600020905b815481529060010190602001808311610f3f57829003601f168201915b505050505081526020019060010190610ec4565b50505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015611078578382906000526020600020018054610feb90613758565b80601f016020809104026020016040519081016040528092919081815260200182805461101790613758565b80156110645780601f1061103957610100808354040283529160200191611064565b820191906000526020600020905b81548152906001019060200180831161104757829003601f168201915b505050505081526020019060010190610fcc565b50505050815250509050919050565b60065481565b60095481565b600280546110a090613758565b80601f01602080910402602001604051908101604052809291908181526020018280546110cc90613758565b80156111195780601f106110ee57610100808354040283529160200191611119565b820191906000526020600020905b8154815290600101906020018083116110fc57829003601f168201915b505050505081565b600061113b6040518060200160405280600081525061187e565b50905080611175576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60006101000a81548160ff0219169083600281111561119b5761119a612b09565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516111cf919061381e565b60405180910390a16006546008541061121a577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051611211919061381e565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112a4576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600490805190602001906112ba9291906127ab565b5050565b600180546112cb90613758565b80601f01602080910402602001604051908101604052809291908181526020018280546112f790613758565b80156113445780601f1061131957610100808354040283529160200191611344565b820191906000526020600020905b81548152906001019060200180831161132757829003601f168201915b505050505081565b600a60009054906101000a900460ff1681565b600e818154811061136f57600080fd5b906000526020600020016000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611408576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561141c5761141b612b09565b5b600a60009054906101000a900460ff16600281111561143e5761143d612b09565b5b14611475576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516114ca9061386a565b60006040518083038185875af1925050503d8060008114611507576040519150601f19603f3d011682016040523d82523d6000602084013e61150c565b606091505b505090508015611574577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516115679291906138de565b60405180910390a16115a6565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600581815481106115ba57600080fd5b9060005260206000200160009150905080546115d590613758565b80601f016020809104026020016040519081016040528092919081815260200182805461160190613758565b801561164e5780601f106116235761010080835404028352916020019161164e565b820191906000526020600020905b81548152906001019060200180831161163157829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116db576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000829050600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401611720919061381e565b60206040518083038186803b15801561173857600080fd5b505afa15801561174c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611770919061391c565b116117b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a790613995565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166318a9fb8a6000306207a1207f0000000000000000000000000000000000000000000000000000000000000000678ac7230489e8000060006040518763ffffffff1660e01b815260040161182096959493929190613b7c565b602060405180830381600087803b15801561183a57600080fd5b505af115801561184e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611872919061391c565b600b8190555050505050565b60006060600080600281111561189757611896612b09565b5b600a60009054906101000a900460ff1660028111156118b9576118b8612b09565b5b14905060006007547f0000000000000000000000000000000000000000000000000000000000000000426118ed9190613c0b565b119050600080471190508180156119015750825b801561190a5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119d4576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156119e8576119e7612b09565b5b600a60009054906101000a900460ff166002811115611a0a57611a09612b09565b5b1415611a42576040517f651e73ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600a60006101000a81548160ff02191690836002811115611a6857611a67612b09565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600d6020528160005260406000208181548110611ab757600080fd5b90600052602060002001600091509150505481565b60008054611ad990613758565b80601f0160208091040260200160405190810160405280929190818152602001828054611b0590613758565b8015611b525780601f10611b2757610100808354040283529160200191611b52565b820191906000526020600020905b815481529060010190602001808311611b3557829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bdf576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e889080600181540180825580915050600190039060005260206000200160009091909190915055604051806101000160405280898152602001888152602001878152602001868152602001858152602001848152602001831515815260200182815250600c60008a8152602001908152602001600020600082015181600001556020820151816001019080519060200190611c7d9291906127ab565b506040820151816002019080519060200190611c9a9291906127ab565b506060820151816003019080519060200190611cb7929190612831565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e0820151816007019080519060200190611d08929190612831565b509050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600e805480602002602001604051908101604052809291908181526020018280548015611d8857602002820191906000526020600020905b815481526020019060010190808311611d74575b5050505050905090565b60038054611d9f90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054611dcb90613758565b8015611e185780601f10611ded57610100808354040283529160200191611e18565b820191906000526020600020905b815481529060010190602001808311611dfb57829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611eab576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600c6000838152602001908152602001600020600001541115611f4d57600c6000828152602001908152602001600020600080820160009055600182016000611ef69190612891565b600282016000611f069190612891565b600382016000611f1691906128d1565b600482016000905560058201600090556006820160006101000a81549060ff0219169055600782016000611f4a91906128d1565b50505b50565b60006002811115611f6457611f63612b09565b5b600a60009054906101000a900460ff166002811115611f8657611f85612b09565b5b14611fbd576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612043576040517f5b3890a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120583460085461265d90919063ffffffff16565b6008819055506000600c6000348152602001908152602001600020600001541180156120a55750600c600034815260200190815260200160002060060160009054906101000a900460ff16155b15612170576001600c6000348152602001908152602001600020600501546120cd9190613c0b565b506000600c6000348152602001908152602001600020600501541161216f57600c60003481526020019081526020016000206000808201600090556001820160006121189190612891565b6002820160006121289190612891565b60038201600061213891906128d1565b600482016000905560058201600090556006820160006101000a81549060ff021916905560078201600061216c91906128d1565b50505b5b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051612220929190613c3f565b60405180910390a2565b600c60205280600052604060002060009150905080600001549080600101805461225390613758565b80601f016020809104026020016040519081016040528092919081815260200182805461227f90613758565b80156122cc5780601f106122a1576101008083540402835291602001916122cc565b820191906000526020600020905b8154815290600101906020018083116122af57829003601f168201915b5050505050908060020180546122e190613758565b80601f016020809104026020016040519081016040528092919081815260200182805461230d90613758565b801561235a5780601f1061232f5761010080835404028352916020019161235a565b820191906000526020600020905b81548152906001019060200180831161233d57829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16905086565b6001600281111561239757612396612b09565b5b600a60009054906101000a900460ff1660028111156123b9576123b8612b09565b5b14156123f1576040517f651e73ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050141561247957806040517fc4385859000000000000000000000000000000000000000000000000000000008152600401612470919061381e565b60405180910390fd5b6000612511600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561250757602002820191906000526020600020905b8154815260200190600101908083116124f3575b5050505050612673565b9050600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061255e91906128f2565b80600854101561259a576040517f52c3b68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6125af816008546126c590919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516125db9061386a565b60006040518083038185875af1925050503d8060008114612618576040519150601f19603f3d011682016040523d82523d6000602084013e61261d565b606091505b5050905080612658576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361266b91906137b9565b905092915050565b600080600090505b82518110156126bf5782818151811061269757612696613c68565b5b6020026020010151826126aa91906137b9565b915080806126b790613c97565b91505061267b565b50919050565b600081836126d39190613c0b565b905092915050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000600281111561274957612748612b09565b5b81526020016060815260200160608152602001600081525090565b604051806101000160405280600081526020016060815260200160608152602001606081526020016000815260200160008152602001600015158152602001606081525090565b8280546127b790613758565b90600052602060002090601f0160209004810192826127d95760008555612820565b82601f106127f257805160ff1916838001178555612820565b82800160010185558215612820579182015b8281111561281f578251825591602001919060010190612804565b5b50905061282d9190612913565b5090565b828054828255906000526020600020908101928215612880579160200282015b8281111561287f57825182908051906020019061286f9291906127ab565b5091602001919060010190612851565b5b50905061288d9190612930565b5090565b50805461289d90613758565b6000825580601f106128af57506128ce565b601f0160209004906000526020600020908101906128cd9190612913565b5b50565b50805460008255906000526020600020908101906128ef9190612930565b50565b50805460008255906000526020600020908101906129109190612913565b50565b5b8082111561292c576000816000905550600101612914565b5090565b5b8082111561295057600081816129479190612891565b50600101612931565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061297f82612954565b9050919050565b61298f81612974565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156129cf5780820151818401526020810190506129b4565b838111156129de576000848401525b50505050565b6000601f19601f8301169050919050565b6000612a0082612995565b612a0a81856129a0565b9350612a1a8185602086016129b1565b612a23816129e4565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612a6683836129f5565b905092915050565b6000602082019050919050565b6000612a8682612a2e565b612a908185612a39565b935083602082028501612aa285612a4a565b8060005b85811015612ade5784840389528151612abf8582612a5a565b9450612aca83612a6e565b925060208a01995050600181019050612aa6565b50829750879550505050505092915050565b6000819050919050565b612b0381612af0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612b4957612b48612b09565b5b50565b6000819050612b5a82612b38565b919050565b6000612b6a82612b4c565b9050919050565b612b7a81612b5f565b82525050565b600061018083016000830151612b996000860182612986565b5060208301518482036020860152612bb182826129f5565b91505060408301518482036040860152612bcb82826129f5565b91505060608301518482036060860152612be582826129f5565b91505060808301518482036080860152612bff8282612a7b565b91505060a0830151612c1460a0860182612afa565b5060c0830151612c2760c0860182612afa565b5060e0830151612c3a60e0860182612afa565b50610100830151612c4f610100860182612b71565b50610120830151848203610120860152612c6982826129f5565b915050610140830151848203610140860152612c8582826129f5565b915050610160830151612c9c610160860182612afa565b508091505092915050565b60006020820190508181036000830152612cc18184612b80565b905092915050565b612cd281612af0565b82525050565b6000602082019050612ced6000830184612cc9565b92915050565b600082825260208201905092915050565b6000612d0f82612995565b612d198185612cf3565b9350612d298185602086016129b1565b612d32816129e4565b840191505092915050565b60006020820190508181036000830152612d578184612d04565b905092915050565b6000604051905090565b600080fd5b600080fd5b612d7c81612974565b8114612d8757600080fd5b50565b600081359050612d9981612d73565b92915050565b600060208284031215612db557612db4612d69565b5b6000612dc384828501612d8a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612e048383612afa565b60208301905092915050565b6000602082019050919050565b6000612e2882612dcc565b612e328185612dd7565b9350612e3d83612de8565b8060005b83811015612e6e578151612e558882612df8565b9750612e6083612e10565b925050600181019050612e41565b5085935050505092915050565b60006020820190508181036000830152612e958184612e1d565b905092915050565b612ea681612af0565b8114612eb157600080fd5b50565b600081359050612ec381612e9d565b92915050565b600060208284031215612edf57612ede612d69565b5b6000612eed84828501612eb4565b91505092915050565b60008115159050919050565b612f0b81612ef6565b82525050565b600061010083016000830151612f2a6000860182612afa565b5060208301518482036020860152612f4282826129f5565b91505060408301518482036040860152612f5c82826129f5565b91505060608301518482036060860152612f768282612a7b565b9150506080830151612f8b6080860182612afa565b5060a0830151612f9e60a0860182612afa565b5060c0830151612fb160c0860182612f02565b5060e083015184820360e0860152612fc98282612a7b565b9150508091505092915050565b60006020820190508181036000830152612ff08184612f11565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261301d5761301c612ff8565b5b8235905067ffffffffffffffff81111561303a57613039612ffd565b5b60208301915083600182028301111561305657613055613002565b5b9250929050565b6000806020838503121561307457613073612d69565b5b600083013567ffffffffffffffff81111561309257613091612d6e565b5b61309e85828601613007565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6130e7826129e4565b810181811067ffffffffffffffff82111715613106576131056130af565b5b80604052505050565b6000613119612d5f565b905061312582826130de565b919050565b600067ffffffffffffffff821115613145576131446130af565b5b61314e826129e4565b9050602081019050919050565b82818337600083830152505050565b600061317d6131788461312a565b61310f565b905082815260208101848484011115613199576131986130aa565b5b6131a484828561315b565b509392505050565b600082601f8301126131c1576131c0612ff8565b5b81356131d184826020860161316a565b91505092915050565b6000602082840312156131f0576131ef612d69565b5b600082013567ffffffffffffffff81111561320e5761320d612d6e565b5b61321a848285016131ac565b91505092915050565b61322c81612b5f565b82525050565b60006020820190506132476000830184613223565b92915050565b6000806040838503121561326457613263612d69565b5b600061327285828601612d8a565b925050602061328385828601612d8a565b9150509250929050565b600067ffffffffffffffff8211156132a8576132a76130af565b5b6132b1826129e4565b9050602081019050919050565b60006132d16132cc8461328d565b61310f565b9050828152602081018484840111156132ed576132ec6130aa565b5b6132f884828561315b565b509392505050565b600082601f83011261331557613314612ff8565b5b81356133258482602086016132be565b91505092915050565b60006020828403121561334457613343612d69565b5b600082013567ffffffffffffffff81111561336257613361612d6e565b5b61336e84828501613300565b91505092915050565b61338081612ef6565b82525050565b600081519050919050565b600082825260208201905092915050565b60006133ad82613386565b6133b78185613391565b93506133c78185602086016129b1565b6133d0816129e4565b840191505092915050565b60006040820190506133f06000830185613377565b818103602083015261340281846133a2565b90509392505050565b6000806040838503121561342257613421612d69565b5b600061343085828601612d8a565b925050602061344185828601612eb4565b9150509250929050565b600067ffffffffffffffff821115613466576134656130af565b5b602082029050602081019050919050565b600061348a6134858461344b565b61310f565b905080838252602082019050602084028301858111156134ad576134ac613002565b5b835b818110156134f457803567ffffffffffffffff8111156134d2576134d1612ff8565b5b8086016134df89826131ac565b855260208501945050506020810190506134af565b5050509392505050565b600082601f83011261351357613512612ff8565b5b8135613523848260208601613477565b91505092915050565b61353581612ef6565b811461354057600080fd5b50565b6000813590506135528161352c565b92915050565b600080600080600080600080610100898b03121561357957613578612d69565b5b60006135878b828c01612eb4565b985050602089013567ffffffffffffffff8111156135a8576135a7612d6e565b5b6135b48b828c016131ac565b975050604089013567ffffffffffffffff8111156135d5576135d4612d6e565b5b6135e18b828c016131ac565b965050606089013567ffffffffffffffff81111561360257613601612d6e565b5b61360e8b828c016134fe565b955050608061361f8b828c01612eb4565b94505060a06136308b828c01612eb4565b93505060c06136418b828c01613543565b92505060e089013567ffffffffffffffff81111561366257613661612d6e565b5b61366e8b828c016134fe565b9150509295985092959890939650565b600061368982612954565b9050919050565b6136998161367e565b82525050565b60006020820190506136b46000830184613690565b92915050565b600060c0820190506136cf6000830189612cc9565b81810360208301526136e18188612d04565b905081810360408301526136f58187612d04565b90506137046060830186612cc9565b6137116080830185612cc9565b61371e60a0830184613377565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061377057607f821691505b6020821081141561378457613783613729565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006137c482612af0565b91506137cf83612af0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156138045761380361378a565b5b828201905092915050565b61381881612974565b82525050565b6000602082019050613833600083018461380f565b92915050565b600081905092915050565b50565b6000613854600083613839565b915061385f82613844565b600082019050919050565b600061387582613847565b9150819050919050565b6000819050919050565b60006138a461389f61389a84612954565b61387f565b612954565b9050919050565b60006138b682613889565b9050919050565b60006138c8826138ab565b9050919050565b6138d8816138bd565b82525050565b60006040820190506138f360008301856138cf565b613900602083018461380f565b9392505050565b60008151905061391681612e9d565b92915050565b60006020828403121561393257613931612d69565b5b600061394084828501613907565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b600061397f600883612cf3565b915061398a82613949565b602082019050919050565b600060208201905081810360008301526139ae81613972565b9050919050565b60008190508160005260206000209050919050565b600081546139d781613758565b6139e18186612cf3565b945060018216600081146139fc5760018114613a0e57613a41565b60ff1983168652602086019350613a41565b613a17856139b5565b60005b83811015613a3957815481890152600182019150602081019050613a1a565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000613a80600283613391565b9150613a8b82613a4a565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000613acb613ac6613ac184613a96565b61387f565b613aa0565b9050919050565b613adb81613ab0565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000613b1e613b19613b1484613ae1565b61387f565b613aeb565b9050919050565b613b2e81613b03565b82525050565b6000819050919050565b600060ff82169050919050565b6000613b66613b61613b5c84613b34565b61387f565b613b3e565b9050919050565b613b7681613b4b565b82525050565b6000610100820190508181036000830152613b9781896139ca565b90508181036020830152613baa81613a73565b9050613bb9604083018861380f565b613bc66060830187613ad2565b613bd360808301866138cf565b81810360a0830152613be481613a73565b9050613bf360c0830185613b25565b613c0060e0830184613b6d565b979650505050505050565b6000613c1682612af0565b9150613c2183612af0565b925082821015613c3457613c3361378a565b5b828203905092915050565b6000604082019050613c546000830185612cc9565b613c616020830184612cc9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613ca282612af0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613cd557613cd461378a565b5b60018201905091905056fea2646970667358221220e8db9e424d7c1ebd0a81f32459dff420756a8a23e911b472ab6c27faa758c0a864736f6c63430008080033a2646970667358221220ddc9b9e3de238667723dd45f81ea9f33a7e15ba1f7054e92bb47b9a500e114a264736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1480,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1485,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(Campaign)1404)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Campaign)1404": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(Campaign)1404)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign)",
        "numberOfBytes": "32",
        "value": "t_contract(Campaign)1404"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}